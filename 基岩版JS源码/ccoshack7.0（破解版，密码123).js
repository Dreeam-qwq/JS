//主要核心
var icon=""
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get(),wg=android.widget,app=android.app,wid=ctx.getWindowManager().getDefaultDisplay().getWidth(),hei=ctx.getWindowManager().getDefaultDisplay().getHeight(),gravity=android.view.Gravity,left=gravity.LEFT,top=gravity.TOP,right=gravity.RIGHT,bottom=gravity.BOTTOM,center=gravity.CENTER,mainView=ctx.getWindow().getDecorView(),view=android.view,grap=android.graphics,lang=java.lang,util=android.util,io=java.io,interface=android.content.DialogInterface,root=android.os.Environment.getExternalStorageDirectory().getAbsolutePath(),iniPath=root+"/games/com.mojang",iniName="-049592568.ini",shield=["闪电侠","超级跳跃","末影使者","点我使用展示功能","跳跃信标","entity"];
var radarPic=grap.Bitmap.createBitmap(hei/3,hei/3,grap.Bitmap.Config.ARGB_8888),radarShow,radarWin,state=0,lenZ=radarPic.getWidth(),lenX=radarPic.getHeight(),radius=lenZ/30,speeding=false,running=false,players,flashing=false,home=null,getMessage,mode=false;
function TB(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var PSTIx=0,PSTIy=ctx.getWindowManager().getDefaultDisplay().getHeight()/1.5,PSTIx1,PSTIy1,PSTIx2,PSTIy2;
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var 窗口=new android.widget.PopupWindow();
var layout=new android.widget.RelativeLayout(ctx),按钮=new android.widget.ImageView(ctx);
var GRP=android.util.Base64.decode(icon,0);
按钮.setImageBitmap(new android.graphics.BitmapFactory.decodeByteArray(GRP,0,GRP.length));
按钮.setLayoutParams(new android.widget.LinearLayout.LayoutParams(ctx.getWindowManager().getDefaultDisplay().getWidth()/8,ctx.getWindowManager().getDefaultDisplay().getHeight()/8));
按钮.setOnClickListener(new android.view.View.OnClickListener({onClick:function(v){
menu();
}}));
按钮.setOnTouchListener(new android.view.View.OnTouchListener({onTouch:function(v,e){
switch(e.getAction()){
case 0:
PSTIx1=e.getX();
PSTIy1=e.getY();
break;
case 2:
PSTIx2=parseInt(e.getX()-PSTIx1)*-3/10;PSTIy2=parseInt(e.getY()-PSTIy1)*-3/10;
PSTIx=PSTIx+PSTIx2;
PSTIy=PSTIy+PSTIy2;
窗口.update(PSTIx,PSTIy,-1,-1);
break;}
return false;
}}));
layout.addView(按钮);
窗口.setContentView(layout);
窗口.setWidth(dip2px(ctx,80));
窗口.setHeight(dip2px(ctx,80));
窗口.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
窗口.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.BOTTOM|android.view.Gravity.RIGHT,PSTIx,PSTIy);
}catch(err){print(err);}
}}));}
TB();
var SCH=ctx.getWindowManager().getDefaultDisplay().getHeight();
var SCW=ctx.getWindowManager().getDefaultDisplay().getWidth();
var GD=android.graphics.drawable.GradientDrawable;
var color=android.graphics.Color.argb;
var 线性布局=android.widget.LinearLayout;
var 按钮=android.widget.Button;
var 文本=android.widget.TextView;
var CLIS=android.view.View.OnClickListener;
var setST=android.widget.LinearLayout.LayoutParams;
var 输入框=android.widget.EditText;
var GETIF=ctx.getSystemService(android.content.Context.TELEPHONY_SERVICE);
var IMEI=GETIF.getDeviceId();
var GetSystem=ctx.getSystemService(android.content.Context.TELEPHONY_SERVICE);
var SystemIMEI=Number(GetSystem.getDeviceId());
var 随机数字=Math.ceil(Math.random()*88888+10000)
var password=parseInt(123); //舍去小数点
var path=new android.os.Environment.getExternalStorageDirectory().getAbsolutePath()
var 解锁验证=false
var 自瞄=false
var 房间=0
var enchId={
耐久:Enchantment.UNBREAKING,
锋利:Enchantment.SHARPNESS,
火焰附加:Enchantment.FIRE_ASPECT,
击退:Enchantment.KNOCKBACK,
力量:Enchantment.POWER,
冲击:Enchantment.PUNCH,
火矢:Enchantment.FLAME,
无限:Enchantment.INFINITY,
保护:Enchantment.PROTECTION,
荆棘:Enchantment.THORNS,
火焰保护:Enchantment.FIRE_PROTECTION,
掉落保护:Enchantment.FEATHER_FALLING,
爆炸保护:Enchantment.BLAST_PROTECTION,
弹射物保护:Enchantment.PROJECTILE_PROTECTION,
水下呼吸:Enchantment.RESPIRATION,
深海探索者:Enchantment.AQUA_AFFINITY,
水下速掘:Enchantment.DEPTH_STRIDER,
亡灵杀手:Enchantment.SMITE,
节肢杀手:Enchantment.BANE_OF_ARTHROPODS,
抢夺:Enchantment.LOOTING,
效率:Enchantment.EFFICIENCY,
精准采集:Enchantment.SILK_TOUCH,
时运:Enchantment.FORTUNE,
海之眷顾:Enchantment.LUCK_OF_THE_SEA,
钓饵:Enchantment.LURE
}
//
var Button = android['widget']['Button'];
var LinearLayout = android['widget']['LinearLayout'];
var RelativeLayout = android['widget']['RelativeLayout'];
var PopupWindow = android['widget']['PopupWindow'];
var ScrollView = android['widget']['ScrollView'];
var TextView = android['widget']['TextView'];
var CheckBox = android['widget']['CheckBox'];
var Switch = android['widget']['Switch'];
var Toast = android['widget']['Toast'];
var Runnable = java['lang']['Runnable'];
var View = android['view']['View'];
var ColorDrawable = android['graphics']['drawable']['ColorDrawable'];
var Color = android['graphics']['Color'];
var Gravity = android['view']['Gravity'];
var Intent = android['content']['Intent'];
var Uri = android['net']['Uri'];
ModPE['langEdit']('menu.copyright', '\xA74Skiddy\xA76Client: \xA7e81 Modules loaded');
var bg = new android['graphics']['drawable'].GradientDrawable();
bg['setColor'](android['graphics']['Color'].RED);
bg['setStroke'](4, android['graphics']['Color']['rgb'](0, 255, 210));
bg['setCornerRadius'](2);
var ibg = new android['graphics']['drawable'].GradientDrawable();
ibg['setColor'](android['graphics']['Color'].BLACK);
ibg['setStroke'](5, android['graphics']['Color'].RED);
var mbg = new android['graphics']['drawable'].GradientDrawable();
mbg['setColor'](android['graphics']['Color'].BLACK);
mbg['setStroke'](4, android['graphics']['Color']['rgb'](42, 64, 238));
mbg['setCornerRadius'](2);
var fbg = new android['graphics']['drawable'].GradientDrawable();
fbg['setColor'](android['graphics']['Color'].BLACK);
fbg['setStroke'](5, android['graphics']['Color'].RED);
fbg['setCornerRadius'](3);
var xbg = new android['graphics']['drawable'].GradientDrawable();
xbg['setColor'](android['graphics']['Color'].MAGENTA);
xbg['setStroke'](4, android['graphics']['Color']['rgb'](0, 255, 210));
xbg['setCornerRadius'](2);
var nbg = new android['graphics']['drawable'].GradientDrawable();
nbg['setColor'](android['graphics']['Color'].BLACK);
nbg['setAlpha'](100);
var nnbg = new android['graphics']['drawable'].GradientDrawable();
nnbg['setColor'](android['graphics']['Color'].MAGENTA);
nnbg['setStroke'](4, android['graphics']['Color']['rgb'](255, 108, 128));
var iibg = new android['graphics']['drawable'].GradientDrawable();
iibg['setColor'](android['graphics']['Color'].BLACK);
iibg['setAlpha'](250);
iibg['setStroke'](2, android['graphics']['Color'].RED);
var abg = new android['graphics']['drawable'].GradientDrawable();
abg['setAlpha'](150);
abg['setColor'](android['graphics']['Color'].BLACK);
abg['setStroke'](4, android['graphics']['Color']['rgb'](255, 128, 0));
var gmbg = new android['graphics']['drawable'].GradientDrawable();
gmbg['setColor'](android['graphics']['Color'].RED);
gmbg['setStroke'](2, android['graphics']['Color']['rgb'](0, 255, 210));
gmbg['setCornerRadius'](2);
var jbg = new android['graphics']['drawable'].GradientDrawable();
jbg['setColor'](android['graphics']['Color'].TRANSPARENT);
jbg['setCornerRadius'](4);
var destructbg = new android['graphics']['drawable'].GradientDrawable();
destructbg['setColor'](android['graphics']['Color'].RED);
destructbg['setStroke'](4, android['graphics']['Color']['rgb'](0, 255, 210));
var theme = nnbg;
var theme1 = mbg;
var module = nbg;
var Utils = {
    Block: {
        isLiquid: function(_0x2bf6x22) {
            if (_0x2bf6x22 >= 8 && _0x2bf6x22 <= 11) {
                return true
            };
            return false
        },
        fastBreak: function() {
            for (i = 0; i < 256; i++) {
                Block['setDestroyTime'](i, 0)
            }
        },
        isLadder: function(_0x2bf6x22) {
            if (_0x2bf6x22 == 65) {
                return true
            };
            return false
        }
    },
    Velocity: {
        calculateSpeed: function() {
            return Math['sqrt'](Math['pow'](Entity['getVelX'](getPlayerEnt()), 2) + Math['pow'](Entity['getVelZ'](getPlayerEnt()), 2))
        }
    },
    Text: {
        replaceAll: function(_0x2bf6x23, _0x2bf6x24, _0x2bf6x25) {
            var _0x2bf6x26 = _0x2bf6x25;
            return _0x2bf6x26['replace'](new RegExp(_0x2bf6x23, 'g'), _0x2bf6x24)
        }
    },
    Player: {
        isInWater: function() {
            if (Utils['Block']['isLiquid'](getTile(Entity['getX'](getPlayerEnt()), Entity['getY'](getPlayerEnt()) - 1.65, Entity['getZ'](getPlayerEnt())))) {
                return true
            } else {
                return false
            }
        },
        isOnLadder: function() {
            if (Utils['Block']['isLadder'](getTile(getPlayerX(), getPlayerY() + 0.001, getPlayerZ()))) {
                return true
            } else {
                return false
            }
        },
        isOnGround: function() {
            var _0x2bf6x27 = Entity['getY'](getPlayerEnt());
            while (_0x2bf6x27 > 1) {
                _0x2bf6x27 -= 1
            };
            if ((Math['round'](_0x2bf6x27 * 100) >= 61 && Math['round'](_0x2bf6x27 * 100) <= 63) && getTile(Entity['getX'](getPlayerEnt()), Entity['getY'](getPlayerEnt()) - 1.65, Entity['getZ'](getPlayerEnt())) != 0 && !Utils['Block']['isLiquid'](getTile(Entity['getX'](getPlayerEnt()), Entity['getY'](getPlayerEnt()) - 1.65, Entity['getZ'](getPlayerEnt())))) {
                return true
            };
            if ((Math['round'](_0x2bf6x27 * 100) >= 11 && Math['round'](_0x2bf6x27 * 100) <= 13) && getTile(Entity['getX'](getPlayerEnt()), Entity['getY'](getPlayerEnt()) - 1.65, Entity['getZ'](getPlayerEnt())) != 0 && !Utils['Block']['isLiquid'](getTile(Entity['getX'](getPlayerEnt()), Entity['getY'](getPlayerEnt()) - 1.65, Entity['getZ'](getPlayerEnt())))) {
                return true
            } else {
                return false
            }
        },
        isCollidedHorizontally: function() {
            var _0x2bf6x28 = Entity['getX'](getPlayerEnt());
            var _0x2bf6x29 = Entity['getZ'](getPlayerEnt());
            var _0x2bf6x2a = Math['round'](_0x2bf6x28 - 0.5);
            var _0x2bf6x2b = Math['round'](_0x2bf6x29 - 0.5);
            while (_0x2bf6x28 < 1) {
                _0x2bf6x28 += 1
            };
            while (_0x2bf6x29 < 1) {
                _0x2bf6x29 += 1
            };
            while (_0x2bf6x28 > 1) {
                _0x2bf6x28 -= 1
            };
            while (_0x2bf6x29 > 1) {
                _0x2bf6x29 -= 1
            };
            if (Math['round'](_0x2bf6x28 * 100) == 31) {
                _0x2bf6x28 -= 0.01
            };
            if (Math['round'](_0x2bf6x29 * 100) == 31) {
                _0x2bf6x29 -= 0.01
            };
            if (Math['round'](_0x2bf6x28 * 100) == 69) {
                _0x2bf6x28 += 0.01
            };
            if (Math['round'](_0x2bf6x29 * 100) == 69) {
                _0x2bf6x29 += 0.01
            };
            if (Math['round'](_0x2bf6x28 * 100) == 30) {
                _0x2bf6x2a--
            };
            if (Math['round'](_0x2bf6x29 * 100) == 30) {
                _0x2bf6x2b--
            };
            if (Math['round'](_0x2bf6x28 * 100) == 70) {
                _0x2bf6x2a++
            };
            if (Math['round'](_0x2bf6x29 * 100) == 70) {
                _0x2bf6x2b++
            };
            if (getTile(_0x2bf6x2a, Entity['getY'](getPlayerEnt()), _0x2bf6x2b) == 0 && getTile(_0x2bf6x2a, Entity['getY'](getPlayerEnt()) - 1, _0x2bf6x2b) == 0) {
                return false
            };
            if (Block['getDestroyTime'](getTile(_0x2bf6x2a, Entity['getY'](getPlayerEnt()) - 1, _0x2bf6x2b)) <= 0.1 && Block['getDestroyTime'](getTile(_0x2bf6x2a, Entity['getY'](getPlayerEnt()), _0x2bf6x2b)) <= 0.1) {
                return false
            };
            if (Math['round'](_0x2bf6x28 * 100) == 30 || Math['round'](_0x2bf6x28 * 100) == 70) {
                return true
            };
            if (Math['round'](_0x2bf6x29 * 100) == 30 || Math['round'](_0x2bf6x29 * 100) == 70) {
                return true
            };
            return false
        }
    }
};
var GUI;
var GUIj;
var GUIe;
var GUIr;
var GUIa;
var GUIg;
var GUIz;
var GUIs;
var GUIv;
var menu;
var menu1;
var menu2;
var menu3;
var menu4;
var exitUI;
var exitcombatUI;
var exitmotionUI;
var exitplayerUI;
var exitmiscUI;
var gmChange = Level['getGameMode']();
var clr = '\xA7';
var fct = '\xA7l\xA74[\xA7r\xA76Skiddy\xA7l\xA74\xA7l]\xA7r\xA76: ';
var team = new Array();
var leaveG = true;
var VERSION = ' ';
var NAME = ' ';
var DEVELOPERS = ' ';
var MODULES = ' ';
var isDev = false;
var canBeDev = false;
var bypasshitbox;
var bypasshitboxs = false;
var bypasshitboxed = false;
var inpvpfly;
var inpvpflys = false;
var inpvpflyed = false;
var mineplexspeed;
var mineplexspeeds = false;
var mineplexspeeded = false;
var mineplexfly;
var mineplexflys = false;
var mineplexflyed = false;
var hitbox;
var hitboxs = false;
var hitboxed = false;
var antikbs;
var antikbss = false;
var antikbed = false;
var attKbTick;
var kbTick;
var kbHealth;
var ndglides;
var ndglidess = false;
var ndglideed = false;
var aimbots;
var aimbotss = false;
var aimboted = false;
var reachs;
var reachss = false;
var reached = false;
var switchreachs;
var switchreached = false;
var sreached = false;
var switchaims;
var switchaimed = false;
var saimed = false;
var grapples;
var grappless = false;
var grappleed = false;
var autoswords;
var autoswordss = false;
var autosworded = false;
var steps;
var stepss = false;
var steped = false;
var csteps;
var cstepss = false;
var csteped = false;
var criticalss;
var criticales = false;
var criticalsed = false;
var critTick = 0;
var criticalTick = 0;
var tapjumps;
var tapjumpss = false;
var tapjumped = false;
var taptps;
var taptpss = false;
var taptped = false;
var speeds;
var speedss = false;
var speeded = false;
var brightblockss;
var brightblocksed = false;
var blockDataValues = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 141, 15, 16, 17, 18, 20, 21, 22, 24, 26, 30, 31, 32, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 73, 74, 78, 79, 80, 81, 82, 83, 85, 87, 92, 95, 98, 102, 103, 105, 107, 109, 108, 112, 114, 128, 155, 156, 245, 246, 247, 248, 249, 253, 254, 255];
var zoomspeeds;
var zoomspeedss = false;
var zoomspeeded = false;
var jumpspeeds;
var jumpspeedss = false;
var jumpspeeded = false;
var upglides;
var upglidess = false;
var upglideed = false;
var bowaimbots;
var bowaimbotss = false;
var bowaimboted = false;
var criticaltrailss;
var criticaltrailsss = false;
var criticaltrailsed = false;
var highjumps;
var highjumpss = false;
var highjumped = false;
var can = 1;
var canGetHP = 1;
var HP;
var gravity = -0.07840000092983246;
var derps;
var derpss = false;
var derped = false;
var twerks;
var twerkss = false;
var twerked = false;
var tCounter = 0;
var backfaces;
var backfacess = false;
var backfaceed = false;
var autowalks;
var autowalkss = false;
var autowalked = false;
var jetpacks;
var jetpackss = false;
var jetpacked = false;
var cspeeds;
var cspeedss = false;
var cspeeded = false;
var airjumps;
var airjumped = false;
var dolphins;
var dolphinss = false;
var dolphined = false;
var fallbacks;
var fallbackss = false;
var fallbacked = false;
var fallbackX = Player['getX']();
var fallbackY = Player['getY']();
var fallbackZ = Player['getZ']();
var timer = 0;
var solidliquids;
var solidliquidss = false;
var solidliquided = false;
var wallhacks;
var wallhackss = false;
var wallhacked = false;
var stealths;
var stealthss = false;
var stealthed = false;
var glides;
var glidess = false;
var glideed = false;
var glideSpeed = 0.3;
var aimassists;
var aimassistss = false;
var aimassisted = false;
var elevators;
var elevatored = false;
var snipers;
var sniperss = false;
var snipered = false;
var bypassglides;
var bypassglidess = false;
var bypassglideed = false;
var bgtick = 0;
var spams;
var spamss = false;
var spamed = false;
var spamTime = 0;
var spamDelay = 3500;
var ln = 0;
var spamText = 'Remember, no sentence when using !spam';
var hitjumps;
var hitjumpss = false;
var hitjumped = false;
var longhops;
var longhopss = false;
var longhoped = false;
var lhtick = 0;
var placetps;
var placetpss = false;
var placetped = false;
var autoclimbs;
var autoclimbss = false;
var autoclimbed = false;
var acspd = 0.4;
var sglides;
var sglidess = false;
var sglideed = false;
var dmgglides;
var dmgglidess = false;
var dmgglideed = false;
var follows;
var followss = false;
var followed = false;
var forcedestroys;
var forcedestroyss = false;
var forcedestroyed = false;
var fastbreaks;
var fastbreakss = false;
var fastbreaked = false;
var defDestroyTime = [null, 1.5, 0.6, 0.5, 2, 2, 0, -1, null, null, null, null, 0.5, 0.6, 3, 3, 3, 2, 0.2, 0.6, 0.3, 3, 3, null, 0.8, null, 0.2, 0.7, null, null, 4, 0, 0, null, null, 0.8, null, 0, 0, 0, 0, 3, 5, 2, 2, 2, 0, 1.5, 2, 50, 0, 0, null, 2, 2.5, null, 3, 5, 2.5, 0, 0.6, 3.5, 3.5, 1, 3, 0.4, 0.7, 2, 1, null, null, 5, null, 3, 3, null, null, null, 0.1, 0.5, 0.2, 0.4, 0.6, 0, null, 2, 1, 0.4, 0.3, null, 1, 0.5, null, null, -1, 3, null, 1.5, null, null, 5, 0.3, 1, 0, 0, null, 2, 2, 1.5, null, null, 2, null, 2, null, null, null, null, null, null, null, null, null, null, null, null, null, 0.8, null, null, null, null, null, 2, 2, 2, null, null, 2, null, 0, 0, null, null, null, null, null, null, null, null, null, null, null, null, 0.8, 0.8, 2, 2, null, null, null, null, null, null, null, null, null, null, null, 0.5, 0.1, 5, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 0, 3.5, 50, 5, 0.6, 0.6, 5, null, null, null, null, 0];
var nearwarnings;
var nearwarningss = false;
var nearwarninged = false;
var nwrange = 35;
var fullbrights;
var fullbrightss = false;
var fullbrighted = false;
var leetspeaks;
var leetspeakss = false;
var leetspeaked = false;
var regenerations;
var regenerationss = false;
var regenerationed = false;
var regenX = Player['getX']();
var regenZ = Player['getZ']();
var sregens;
var sregenss = false;
var sregend = false;
var sregened = false;
var lbsgspeeds;
var lbsgspeedss = false;
var lbsgspeeded = false;
var ctrlzooms;
var ctrlzoomed = false;
var zoomed = false;
var escapes;
var escapeed = false;
var frostwalkers;
var frostwalkerss = false;
var frostwalkered = false;
var viewchangers;
var viewchangered = false;
var firepunchs;
var firepunchss = false;
var firepunched = false;
var safewalks;
var safewalkss = false;
var safewalked = false;
var scaffoldwalks;
var scaffoldwalkss = false;
var scaffoldwalked = false;
var arrowdodges;
var arrowdodgess = false;
var arrowdodgeed = false;
var behindhits;
var behindhitss = false;
var behindhited = false;
var sidereachs;
var sidereached = false;
var bedbreakers;
var bedbreakerss = false;
var bedbreakered = false;
var fastfalls;
var fastfallss = false;
var fastfalled = false;
var ghosthands;
var ghosthandss = false;
var ghosthanded = false;
var godmode;
var godmodes = false;
var godmodeed = false;

var tos;
//
var 生成随机数字=Math.ceil(Math.random()*88888+10000)
var 物品ID一览表="铁锹, id: 256, 特殊值: 0\n铁镐, id: 257, 特殊值: 0\n铁斧, id: 258, 特殊值: 0\n打火石, id: 259, 特殊值: 0\n红苹果, id: 260, 特殊值: 0\n弓, id: 261, 特殊值: 0\n箭, id: 262, 特殊值: 0\n煤炭, id: 263, 特殊值: 0\n木炭, id: 263, 特殊值: 1\n钻石, id: 264, 特殊值: 0\n铁锭, id: 265, 特殊值: 0\n金锭, id: 266, 特殊值: 0\n铁剑, id: 267, 特殊值: 0\n木剑, id: 268, 特殊值: 0\n木锹, id: 269, 特殊值: 0\n木镐, id: 270, 特殊值: 0\n木斧, id: 271, 特殊值: 0\n石剑, id: 272, 特殊值: 0\n石锹, id: 273, 特殊值: 0\n石镐, id: 274, 特殊值: 0\n石斧, id: 275, 特殊值: 0\n钻石剑, id: 276, 特殊值: 0\n钻石锹, id: 277, 特殊值: 0\n钻石镐, id: 278, 特殊值: 0\n钻石斧, id: 279, 特殊值: 0\n木棍, id: 280, 特殊值: 0\n碗, id: 281, 特殊值: 0\n蘑菇汤, id: 282, 特殊值: 0\n金剑, id: 283, 特殊值: 0\n金铲, id: 284, 特殊值: 0\n金镐, id: 285, 特殊值: 0\n金斧, id: 286, 特殊值: 0\n线, id: 287, 特殊值: 0\n羽毛, id: 288, 特殊值: 0\n火药, id: 289, 特殊值: 0\n木锄, id: 290, 特殊值: 0\n石锄, id: 291, 特殊值: 0\n铁锄, id: 292, 特殊值: 0\n钻石锄, id: 293, 特殊值: 0\n金锄, id: 294, 特殊值: 0\n小麦种子, id: 295, 特殊值: 0\n小麦, id: 296, 特殊值: 0\n面包, id: 297, 特殊值: 0\n皮革帽子, id: 298, 特殊值: 0\n皮革外套, id: 299, 特殊值: 0\n皮革裤子, id: 300, 特殊值: 0\n皮革靴子, id: 301, 特殊值: 0\n锁链头盔, id: 302, 特殊值: 0\n锁链胸甲, id: 303, 特殊值: 0\n锁链护腿, id: 304, 特殊值: 0\n锁链靴子, id: 305, 特殊值: 0\n铁头盔, id: 306, 特殊值: 0\n铁胸甲, id: 307, 特殊值: 0\n铁护腿, id: 308, 特殊值: 0\n铁靴子, id: 309, 特殊值: 0\n钻石头盔, id: 310, 特殊值: 0\n钻石胸甲, id: 311, 特殊值: 0\n钻石护腿, id: 312, 特殊值: 0\n钻石靴子, id: 313, 特殊值: 0\n金头盔, id: 314, 特殊值: 0\n金胸甲, id: 315, 特殊值: 0\n金护腿, id: 316, 特殊值: 0\n金靴子, id: 317, 特殊值: 0\n燧石, id: 318, 特殊值: 0\n生猪排, id: 319, 特殊值: 0\n熟猪排, id: 320, 特殊值: 0\n画, id: 321, 特殊值: 0\n告示牌, id: 323, 特殊值: 0\n木门, id: 324, 特殊值: 0\n桶, id: 325, 特殊值: 0\n牛奶桶, id: 325, 特殊值: 1\n水桶, id: 325, 特殊值: 8\n岩浆桶, id: 325, 特殊值: 10\n矿车, id: 328, 特殊值: 0\n鞍, id: 329, 特殊值: 0\n铁门, id: 330, 特殊值: 0\n红石, id: 331, 特殊值: 0\n雪球, id: 332, 特殊值: 0\n皮革, id: 334, 特殊值: 0\n红砖, id: 336, 特殊值: 0\n粘土, id: 337, 特殊值: 0\n甘蔗, id: 338, 特殊值: 0\n纸, id: 339, 特殊值: 0\n书, id: 340, 特殊值: 0\n粘液球, id: 341, 特殊值: 0\n蛋, id: 344, 特殊值: 0\n指南针, id: 345, 特殊值: 0\n钟, id: 347, 特殊值: 0\n萤石粉, id: 348, 特殊值: 0\n墨囊（染料）, id: 351, 特殊值: 0\n玫瑰红（染料）, id: 351, 特殊值: 1\n仙人掌绿（染料）, id: 351, 特殊值: 2\n可可豆（染料）, id: 351, 特殊值: 3\n青金石（染料）, id: 351, 特殊值: 4\n紫色染料, id: 351, 特殊值: 5\n青色染料, id: 351, 特殊值: 6\n淡灰色染料, id: 351, 特殊值: 7\n灰色染料, id: 351, 特殊值: 8\n粉红色染料, id: 351, 特殊值: 9\n黄绿色染料, id: 351, 特殊值: 10\n蒲公英黄（染料）, id: 351, 特殊值: 11\n淡蓝色染料, id: 351, 特殊值: 12\n品红色染料, id: 351, 特殊值: 13\n橙色染料, id: 351, 特殊值: 14\n骨粉, id: 351, 特殊值: 15\n骨头, id: 352, 特殊值: 0\n糖, id: 353, 特殊值: 0\n蛋糕, id: 354, 特殊值: 0\n床, id: 355, 特殊值: 0\n饼干, id: 357, 特殊值: 0\n剪刀, id: 359, 特殊值: 0\n西瓜片, id: 360, 特殊值: 0\n南瓜种子, id: 261, 特殊值: 0\n西瓜种子, id: 362, 特殊值: 0\n生牛肉, id: 363, 特殊值: 0\n牛排, id: 364, 特殊值: 0\n生鸡肉, id: 365, 特殊值: 0\n熟鸡肉, id: 366, 特殊值: 0\n绿宝石, id: 388, 特殊值: 0\n胡萝卜, id: 391, 特殊值: 0\n马铃薯, id: 392, 特殊值: 0\n烤马铃薯, id: 393, 特殊值: 0\n南瓜派, id: 400, 特殊值: 0\n地狱砖, id: 405, 特殊值: 0\n地狱石英, id: 406, 特殊值: 0\n甜菜, id: 457, 特殊值: 0\n甜菜种子, id: 458, 特殊值: 0\n甜菜汤, id: 459, 特殊值: 0\n弩, id:471,特殊值:0\n隐身药水,id:373,特殊值:8\n附魔苹果,id:466,特殊值:0\n鞘翅,id:444,特殊值:0\n复活图腾,id:450,特殊值:0\n海龟壳,id:469,特殊值:0\n三叉戟,id:455,特殊值:0\n栓绳,id:420,特殊值:0\n唱片机,id:84,特殊值:0\n音符盒,id:25,特殊值:0\n地图,id:395,特殊值:0\n定位地图,id:395,特殊值:2\n头颅模型,id:397,特殊值:0-5\n书与笔,id:386,特殊值:0\nTNT蛋,id:383,特殊值:65\n凋零蛋,id:383,特殊值:52\n末影龙蛋,id:383,特殊值:53\n龙息蛋,id:383,特殊值:79\n闪电蛋,id:383,特殊值:93\n凋零炸弹,id:383,特殊值:89\n大火焰弹,id:383,特殊值: 85\n小火焰弹,id:383,特殊值:94\n铁傀儡蛋,id:383,特殊值:20\n雪傀儡蛋,id:383,特殊值:21\n黑紫棒,id:166,特殊值:0\n手持物品栏,id:456,特殊值:0\n石头, id: 1, 特殊值: 0\n花岗岩, id: 1, 特殊值: 1\n光滑的花岗岩, id: 1, 特殊值: 2\n闪长岩, id: 1, 特殊值: 3\n光滑的闪长岩, id: 1, 特殊值: 4\n安山岩, id: 1, 特殊值: 5\n光滑的安山岩, id: 1, 特殊值: 6\n草方块, id: 2, 特殊值: 0\n泥土, id: 3, 特殊值: 0\n圆石, id: 4, 特殊值: 0\n木板, id: 5, 特殊值: 0\n松木板, id: 5, 特殊值: 1\n桦木板, id: 5, 特殊值: 2\n丛林木板, id: 5, 特殊值: 3\n金合欢木板, id: 5, 特殊值: 4\n黑橡木木板, id: 5, 特殊值: 5\n树苗, id: 6, 特殊值: 0\n松树苗, id: 6, 特殊值: 1\n桦树苗, id: 6, 特殊值: 2\n丛林树苗, id: 6, 特殊值: 3\n金合欢树苗, id: 6, 特殊值: 4\n黑橡树苗, id: 6, 特殊值: 5\n基岩, id: 7, 特殊值: 0\n水, id: 8, 特殊值: 0\n静止的水, id: 9, 特殊值: 0\n岩浆, id: 10, 特殊值: 0\n静止的岩浆, id: 11, 特殊值: 0\n沙子, id: 12, 特殊值: 0\n红沙, id: 12, 特殊值: 1\n砂砾, id: 13, 特殊值: 0\n金矿石, id: 14, 特殊值: 0\n铁矿石, id: 15, 特殊值: 0\n煤矿石, id: 16, 特殊值: 0\n木头, id: 17, 特殊值: 0\n松木, id: 17, 特殊值: 1\n桦木, id: 17, 特殊值: 2\n丛林木, id: 17, 特殊值: 3\n树叶, id: 18, 特殊值: 0\n松树叶, id: 18, 特殊值: 1\n桦树叶, id: 18, 特殊值: 2\n丛林树叶, id: 18, 特殊值: 3\n海绵, id: 19, 特殊值: 0\n玻璃, id: 20, 特殊值: 0\n青金石矿石, id: 21, 特殊值: 0\n青金石块, id: 22, 特殊值: 0\n沙石, id: 24, 特殊值: 0\n錾制沙石, id: 24, 特殊值: 1\n平滑沙石, id: 24, 特殊值: 2\n动力铁轨, id: 27, 特殊值: 0\n蜘蛛网, id: 30, 特殊值: 0\n草, id: 31, 特殊值: 1\n灌木, id: 31, 特殊值: 2\n枯死的灌木, id: 32, 特殊值: 0\n白色羊毛, id: 35, 特殊值: 0\n橙色羊毛, id: 35, 特殊值: 1\n品红色羊毛, id: 35, 特殊值: 2\n淡蓝色羊毛, id: 35, 特殊值: 3\n黄色羊毛, id: 35, 特殊值: 4\n黄绿色羊毛, id: 35, 特殊值: 5\n粉红色羊毛, id: 35, 特殊值: 6\n灰色羊毛, id: 35, 特殊值: 7\n淡灰色羊毛, id: 35, 特殊值: 8\n青色羊毛, id: 35, 特殊值: 9\n紫色羊毛, id: 35, 特殊值: 10\n蓝色羊毛, id: 35, 特殊值: 11\n棕色羊毛, id: 35, 特殊值: 12\n绿色羊毛, id: 35, 特殊值: 13\n红色羊毛, id: 35, 特殊值: 14\n黑色羊毛, id: 35, 特殊值: 15\n蒲公英, id: 37, 特殊值: 0\n罂粟, id: 38, 特殊值: 0\n蓝色的兰花, id: 38, 特殊值: 1\n露西球, id: 38, 特殊值: 2\n矢车菊, id: 38, 特殊值: 3\n红郁金香, id: 38, 特殊值: 4\n橙郁金香, id: 38, 特殊值: 5\n白郁金香, id: 38, 特殊值: 6\n粉郁金香, id: 38, 特殊值: 7\n雏菊, id: 38, 特殊值: 8\n棕色蘑菇, id: 39, 特殊值: 0\n红色蘑菇, id: 40, 特殊值: 0\n金块, id: 41, 特殊值: 0\n铁块, id: 42, 特殊值: 0\n石台阶, id: 44, 特殊值: 0\n沙石台阶, id: 44, 特殊值: 1\n圆石台阶, id: 44, 特殊值: 3\n砖台阶, id: 44, 特殊值: 4\n石砖台阶, id: 44, 特殊值: 5\n石英台阶, id: 44, 特殊值: 7\n砖块, id: 45, 特殊值: 0\nTNT, id: 46, 特殊值: 0\n书架, id: 47, 特殊值: 0\n苔石, id: 48, 特殊值: 0\n黑曜石, id: 49, 特殊值: 0\n火把, id: 50, 特殊值: 0\n火, id: 51, 特殊值: 0\n刷怪笼, id: 52, 特殊值: 0\n木楼梯, id: 53, 特殊值: 0\n箱子, id: 54, 特殊值: 0\n钻石矿石, id: 56, 特殊值: 0\n钻石块, id: 57, 特殊值: 0\n工作台, id: 58, 特殊值: 0\n耕地, id: 60, 特殊值: 0\n熔炉, id: 61, 特殊值: 0\n梯子, id: 65, 特殊值: 0\n铁轨, id: 66, 特殊值: 0\n石楼梯, id: 67, 特殊值: 0\n红石矿石, id: 73, 特殊值: 0\n雪, id: 78, 特殊值: 0\n冰, id: 79, 特殊值: 0\n雪块, id: 80, 特殊值: 0\n仙人掌, id: 81, 特殊值: 0\n粘土块, id: 82, 特殊值: 0\n木栅栏, id: 85, 特殊值: 0\n南瓜, id: 86, 特殊值: 0\n地狱岩, id: 87, 特殊值: 0\n萤石, id: 89, 特殊值: 0\n南瓜灯, id: 91, 特殊值: 0\n隐形基岩, id: 95, 特殊值: 0\n活板门, id: 96, 特殊值: 0\n石砖, id: 98, 特殊值: 0\n苔石砖, id: 98, 特殊值: 1\n裂石砖, id: 98, 特殊值: 2\n回形石砖, id: 98, 特殊值: 3\n棕色蘑菇方块, id: 99, 特殊值: 14\n红色蘑菇方块, id: 100, 特殊值: 14\n蘑菇方块, id: 99, 特殊值: 0\n蘑菇茎, id: 99, 特殊值: 15\n铁栅栏, id: 101, 特殊值: 0\n玻璃板, id: 102, 特殊值: 0\n西瓜, id: 103, 特殊值: 0\n南瓜梗, id: 104, 特殊值: 0\n西瓜梗, id: 105, 特殊值: 0\n藤蔓, id: 106, 特殊值: 0\n栅栏门, id: 107, 特殊值: 0\n砖楼梯, id: 108, 特殊值: 0\n石砖楼梯, id: 109, 特殊值: 0\n菌丝, id: 110, 特殊值: 0\n莲叶, id: 111, 特殊值: 0\n地狱砖, id: 112, 特殊值: 0\n地狱砖楼梯, id: 114, 特殊值: 0\n末地传送门, id: 120, 特殊值: 0\n末地石, id: 121, 特殊值: 0\n可可梗, id: 127, 特殊值: 0\n沙石楼梯, id: 128, 特殊值: 0\n绿宝石矿石, id: 129, 特殊值: 0\n绿宝石块, id: 133, 特殊值: 0\n松木楼梯, id: 134, 特殊值: 0\n桦木楼梯, id: 135, 特殊值: 0\n丛林楼梯, id: 136, 特殊值: 0\n圆石墙, id: 139, 特殊值: 0\n苔石墙, id: 139, 特殊值: 1\n石英方块, id: 155, 特殊值: 0\n錾石英方块, id: 155, 特殊值: 1\n柱石英方块, id: 155, 特殊值: 2\n石英楼梯, id: 156, 特殊值: 0\n木台阶, id: 158, 特殊值: 0\n松木台阶, id: 158, 特殊值: 1\n桦木台阶, id: 158, 特殊值: 2\n丛林木台阶, id: 158, 特殊值: 3\n金合欢木台阶, id: 158, 特殊值: 4\n黑橡木台阶, id: 158, 特殊值: 5\n白色粘土, id: 159, 特殊值: 0\n橙色粘土, id: 159, 特殊值: 1\n品红色粘土, id: 159, 特殊值: 2\n淡蓝色粘土, id: 159, 特殊值: 3\n黄色粘土, id: 159, 特殊值: 4\n黄绿色粘土, id: 159, 特殊值: 5\n粉红色粘土, id: 159, 特殊值: 6\n灰色粘土, id: 159, 特殊值: 7\n淡灰色粘土, id: 159, 特殊值: 8\n青色粘土, id: 159, 特殊值: 9\n紫色粘土, id: 159, 特殊值: 10\n蓝色粘土, id: 159, 特殊值: 11\n棕色粘土, id: 159, 特殊值: 12\n绿色粘土, id: 159, 特殊值: 13\n红色粘土, id: 159, 特殊值: 14\n黑色粘土, id: 159, 特殊值: 15\n金合欢树叶, id: 161, 特殊值: 0\n黑橡木叶, id: 161, 特殊值: 1\n金合欢木, id: 162, 特殊值: 0\n黑橡木, id: 162, 特殊值: 1\n金合欢木楼梯, id: 163, 特殊值: 0\n黑橡木楼梯, id: 164, 特殊值: 0\n干草块, id: 170, 特殊值: 0\n白色地毯, id: 171, 特殊值: 0\n橙色地毯, id: 171, 特殊值: 1\n品红色地毯, id: 171, 特殊值: 2\n淡蓝色地毯, id: 171, 特殊值: 3\n黄色地毯, id: 171, 特殊值: 4\n黄绿色地毯, id: 171, 特殊值: 5\n粉红色地毯, id: 171, 特殊值: 6\n灰色地毯, id: 171, 特殊值: 7\n淡灰色地毯, id: 171, 特殊值: 8\n青色地毯, id: 171, 特殊值: 9\n紫色地毯, id: 171, 特殊值: 10\n蓝色地毯, id: 171, 特殊值: 11\n棕色地毯, id: 171, 特殊值: 12\n绿色地毯, id: 171, 特殊值: 13\n红色地毯, id: 171, 特殊值: 14\n黑色地毯, id: 171, 特殊值: 15\n硬化粘土, id: 172, 特殊值: 0\n煤炭块, id: 173, 特殊值: 0\n浮冰（不知和冰有何区别）, id: 174, 特殊值: 0\n太阳花, id: 175, 特殊值: 0\n丁香花, id: 175, 特殊值: 1\n高草, id: 175, 特殊值: 2\n高大灌木, id: 175, 特殊值: 3\n玫瑰丛, id: 175, 特殊值: 4\n芍药, id: 175, 特殊值: 5\n灰化土, id: 243, 特殊值: 0\n切石机, id: 245, 特殊值: 0\n发光的黑曜石, id: 246, 特殊值: 0\n下界反应核, id: 247, 特殊值: 0\n更新方块1, id: 248, 特殊值: 0\n更新方块2, id: 249, 特殊值: 0\n鸡生物蛋，id: 383，特殊值: 10 \n牛生物蛋，id: 383，特殊值: 11\n猪生物蛋，id: 383，特殊值: 12\n羊生物蛋，id: 383，特殊值: 13\n狼生物蛋，id: 383，特殊值: 14\n村民生物蛋，id: 383，特殊值: 15\n哞菇生物蛋，id: 383，特殊值: 16\n鱿鱼生物蛋，id: 383，特殊值: 17\n兔子生物蛋，id: 383，特殊值: 18\n蝙蝠生物蛋，id: 383，特殊值: 19\n豹猫生物蛋，id， 383，特殊值: 22\n马生物蛋，id: 383，特殊值: 23\n驴生物蛋，id: 383，特殊值: 24\n骡子生物蛋，id: 383，特殊值: 25\n骷髅马生物蛋，id: 383，特殊值: 26\n僵尸马生物蛋，id: 383，特殊值: 27\n北极熊生物蛋，id: 383，特殊值: 28\n羊驼生物蛋，id: 383，特殊值: 29\n鹦鹉生物蛋，id: 383，特殊值: 30\n僵尸生物蛋，id: 383，特殊值: 32\n苦力怕生物蛋，id: 383，特殊值: 33\n骷髅生物蛋，id: 383，特殊值: 34\n蜘蛛生物蛋，id: 383，特殊值: 35\n猪人生物蛋，id: 383，特殊值: 36\n史莱姆生物蛋，id: 383，特殊值: 37\n末影人生物蛋，id: 383，特殊值: 38\n蠹虫生物蛋，id: 383，特殊值: 39\n洞穴蜘蛛生物蛋，id: 383，特殊值: 40\n恶魂生物蛋，id: 383:，特殊值: 41\n岩浆怪生物蛋，id:  383:，特殊值: 42\n烈焰人生物蛋，id: 383，特殊值: 43\n僵尸村民生物蛋，id: 383，特殊值: 44\n女巫生物蛋，id: 383，特殊值: 45\n流浪者生物蛋，id: 383，特殊值: 46\n尸壳生物蛋，id: 383，特殊值: 47\n凋零骷髅生物蛋，id: 383，特殊值: 48\n守卫者生物蛋，id: 383，特殊值: 49\n远古守卫者生物蛋，id: 383，特殊值: 50\n潜影贝生物蛋，id: 383，特殊值: 54\n末影螨生物蛋，id: 383，特殊值: 55\n卫道士生物蛋，id: 383，特殊值: 57\n唤魔者生物蛋，id: 383，特殊值: 104\n恼鬼生物蛋，id: 383，特殊值105"
var 版权="§4CCOSHACK版权\n\nUI 注册机作者：夜红\n自瞄算法：源代码：暗杀部 修改修复：CCOSHACK\n便捷作弊：原xuxiqwq\n因为版权问题本功能有所阉割，保留部分功能\n添加物品作者不详源码来源于网络\n剩下功能由作者整合开发\n如需搬运请先获取相关作者授权，谢谢"
//
var AIMMODE=true
function colortip(文本){ 
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get() 
ctx.runOnUiThread(new java.lang.Runnable({ 
run: function(){ 
android.widget.Toast.makeText(ctx,colorword("§4提示：§3"+文本),0).show() 
}}))}
function colorword(text){
var colors=[[" "," &nbsp;"],["\n","<br/>"],["§l","</b><b>"],["§m","</del><del>"],["§n","</ins><ins>"],["§o","</i><i>"],["§r","</font></b></del></ins></i>"],["§0","</font><font color=#000000>"],["§1","</font><font color=#0000AA>"],["§2","</font><font color=#00AA00>"],["§3","</font><font color=#00AAAA>"],["§4","</font><font color=#AA0000>"],["§5","</font><font color=#AA00AA>"],["§6","</font><font color=#FFAA00>"],["§7","</font><font color=#cccccc>"],["§8","</font><font color=#555555>"],["§9","</font><font color=#5555FF>"],["§a","</font><font color=#55FF55>"],["§b","</font><font color=#55FFFF>"],["§c","</font><font color=#FF5555>"],["§d","</font><font color=#FF55FF>"],["§e","</font><font color=#FFFF55>"],["§f","</font><font color=#FFFFFF>"],["老婆","</font><font color=#66CCFF>"],["下划线","<u> </u> "]]
for(var e in colors){
text=text.split(colors[e][0]).join(colors[e][1])};return android.text.Html.fromHtml(text);}
function fzcp(内容){
ctx.runOnUiThread(new java.lang.Runnable({ 
run: function(){ 
try{
var cm=ctx.getSystemService(ctx.CLIPBOARD_SERVICE)
cm.setText(内容)
}catch(err){
print(err)}
}}))}

function dip2px(ctx,dips){return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density);}

function 传送玩家(x,y,z){setPosition(获取玩家实体(),x,y,z);}

function 获取玩家实体(){return getPlayerEnt()}


running=true
colortip("如果看见这行文字，说明本版本支持目前的我的世界版本")

function dip2px(ctx,dips){return Math.ceil(dips*ctx.getResources().getDisplayMetrics().density);}
function menu(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var PSTIx=0,PSTIy=ctx.getWindowManager().getDefaultDisplay().getHeight()/1.5,PSTIx1,PSTIy1,PSTIx2,PSTIy2;
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var 窗口=new android.widget.PopupWindow();
var layout=new android.widget.LinearLayout(ctx)
窗口.setFocusable(true)
layout.setOrientation(1)

PSTIy=SCH/4.1
PSTIx=SCW/3.25


var layoutmenu1=new GD();
layoutmenu1.setStroke(10,color(200,0,10,25));
layoutmenu1.setCornerRadius(5);
layout.setBackground(layoutmenu1);

var layout2=new android.widget.LinearLayout(ctx)
layout2.setOrientation(1)
layout.addView(layout2)

空=new android.widget.TextView(ctx)
空.setText("")
空.setTextSize(10)
空.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){

}}))
layout2.addView(空)

var layout3=new android.widget.LinearLayout(ctx)
layout3.setOrientation(0)
layout.addView(layout3)


標題=new android.widget.TextView(ctx)
標題.setText(colorword("§6CCOSHACK V7.0\n当前模式：未选择"))
標題.setTextSize(19)
layout3.addView(標題)
if(房间==0){標題.setText(colorword("§6CCOSHACK V7.0\n§4当前模式：未选择"));}
if(房间==1){標題.setText(colorword("§6CCOSHACK V7.0\n§4当前模式：联机模式"));}
if(房间==2){標題.setText(colorword("§6CCOSHACK V7.0\n§4当前模式：服务器模式"));}


var layout4=new android.widget.LinearLayout(ctx)
layout4.setOrientation(0)
layout.addView(layout4)




var 自瞄=new android.widget.Button(ctx)
自瞄.setText(colorword("§6自瞄功能"))
自瞄.setWidth(dip2px(ctx,150));
自瞄.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
if(解锁验证==true){
自瞄窗口();
}else{
colortip("请先激活")
}
}}))
layout4.addView(自瞄)


var 更多=new android.widget.Button(ctx)
更多.setText(colorword("§5辅助功能"))
更多.setWidth(dip2px(ctx,150));
更多.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
if(解锁验证==true){
功能窗口();
}else{
colortip("请先激活")
}
}}))
layout4.addView(更多)


var layout5=new android.widget.LinearLayout(ctx)
layout5.setOrientation(0)
layout.addView(layout5)


var 卡密=new android.widget.Button(ctx)
卡密.setText(colorword("§4激活"))
卡密.setWidth(dip2px(ctx,100));
卡密.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
if(解锁验证==true){
colortip("你已激活，无需再次激活");
}else{
注册机();
colortip("请勿在虚拟机中或模拟器中运行");
colortip("如果手机获取不到ID");
colortip("请将'我的世界' '多玩我的世界盒子' '你的js加载器'的所有权限设置为允许");
}

}}))
layout5.addView(卡密)


var 关于=new android.widget.Button(ctx)
关于.setText(colorword("§2关于"))
关于.setWidth(dip2px(ctx,100));
关于.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){

var dialog=new android.app.AlertDialog.Builder(ctx)
dialog.setTitle("关于")
dialog.setMessage(colorword("§4CCOSHACK7.0更新内容\n\n添加基础自瞄\n自瞄优化算法降低服务器检测\n更稳定的自瞄\n \n在下方复制你的ID\n或在激活处复制"))
dialog.setPositiveButton("确定",new android.content.DialogInterface.OnClickListener(){
onClick: function(dia,w){
/*点确定时执行*/
}})
dialog.setNeutralButton("复制ID",new android.content.DialogInterface.OnClickListener(){
onClick: function(dia,w){
colortip("复制成功")
fzcp(IMEI)
}})
dialog.show()

}}))
layout5.addView(关于)


var 关于=new android.widget.Button(ctx)
关于.setText(colorword("§8版权"))
关于.setWidth(dip2px(ctx,100));
关于.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){

var dialog=new android.app.AlertDialog.Builder(ctx)
dialog.setTitle("版权页")
dialog.setMessage(colorword(版权))
dialog.setPositiveButton("确定",new android.content.DialogInterface.OnClickListener(){
onClick: function(dia,w){
/*点确定时执行*/
}})
dialog.setNeutralButton("",new android.content.DialogInterface.OnClickListener(){
onClick: function(dia,w){
colortip("版权信息复制成功")
fzcp(版权)}})
dialog.show()

}}))
layout5.addView(关于)


窗口.setContentView(layout);
窗口.setWidth(dip2px(ctx,300));
窗口.setHeight(dip2px(ctx,190));
窗口.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0,0,0,0)));
窗口.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.BOTTOM|android.view.Gravity.RIGHT,PSTIx,PSTIy);
}catch(err){print(err);}
}}));}




function 注册机(){
ctx.runOnUiThread(new java.lang.Runnable({run:function(){
  var 对话框=new android.app.Dialog(ctx);
对话框.setCancelable(false);

  var 注册机布局=new 线性布局(ctx);
注册机布局.setOrientation(1);
var 标题=new 文本(ctx)
标题.setText(colorword("§4激活卡密-----请将ID发送给作者                          "));
标题.setTextSize(20);
var id=new 文本(ctx);
id.setText(colorword("§2你的ID:"+IMEI));
id.setOnClickListener(new android.view.View.OnClickListener({onClick:function(view){

}}))
var 输入=new 输入框(ctx);
var 宽=new setST(-1,-2);
var copy=new 按钮(ctx);
copy.setOnClickListener(new android.view.View.OnClickListener({onClick:function(view){
fzcp(String(IMEI));
colortip("复制成功");
}}))
copy.setText(colorword("§6复制ID"));
var 确定=new 按钮(ctx);
确定.setOnClickListener(new android.view.View.OnClickListener({onClick:function(view){
  if(Number(输入.getText())==password){
对话框.dismiss()
colortip("激活成功")
colortip("欢迎用户："+IMEI)
解锁验证=true
}
else{
colortip("错误")};
}}))
确定.setText(colorword("§2确定"));
  var 退出=new 按钮(ctx);
退出.setOnClickListener(new android.view.View.OnClickListener({onClick:function(view){
对话框.dismiss()
}}))
退出.setText(colorword("§7取消")); 
id.setLayoutParams(宽);
输入.setLayoutParams(宽);
copy.setLayoutParams(宽);
确定.setLayoutParams(宽);
退出.setLayoutParams(宽);
注册机布局.addView(标题);
注册机布局.addView(id);
注册机布局.addView(输入);
注册机布局.addView(copy);
注册机布局.addView(确定);
注册机布局.addView(退出);
对话框.setContentView(注册机布局);
对话框.show();
}}));
}

function invalidate(){
  try{
    if(mode){
    players=Array.slice.call(Server.getAllPlayers());
    players.shift();
    }else{
    var ls=[];
    for(var i=0;i<=10000;i++)
    if(Entity.getEntityTypeId(i)==63)
    ls.push(i);
    players=ls;
    }
    var arr=[]
    for(var i in players)if(shield.indexOf(Player.getName(players[i]))>-1)arr.unshift(i);
    for(var i in arr)players.splice(arr[i],1);
  }catch(err){showTip(err,1);}
}

function fly(){
  Entity.setPositionRelative(Player.getEntity(),0,1,0);
  Player.setFlying(!Player.isFlying());
  showTip(Player.isFlying()?"已开启飞行，再次点击关闭":"已关闭飞行");
}

function rapid(){
  Entity.addEffect(Player.getEntity(),3,3276799,255);
  showTip("已开启速掘，长按解除效果");
}

function vision(){
  Entity.addEffect(Player.getEntity(),16,3276799,1);
  showTip("已开启夜视");
}


function searchMode(v,c){
  mode=c;
}

function exp(){
showDialog("增加经验值","请输入要增加的经验值","",{txt:"确定",command:function(){
try{
  Player.addExp(Number(getMessage.getText()));
}catch(err){showTip(err);}
}},{txt:"取消"},null,true);
}

function runCommand(txt){
  try{
  showDialog("JS命令执行","请输入JS命令","",{txt:"执行",command:function(){
  try{
  eval(String(getMessage.getText()));
  }catch(err){showTip(err);}
  }},{txt:"关闭"},null,true);
  }catch(err){showTip(err);}
}

function flash1(){
  try{
  if(flashing){
    flashing=false;
    Player.setFlying(false);
  }else{
  Ui(function(){
    var dialog=new app.AlertDialog.Builder(ctx);
    dialog.setTitle("选择自瞄对象");
    var lay=new wg.LinearLayout(ctx);
    lay.setOrientation(1);
    var check=addCheckBox(lay,"←兼容模式（必须勾选）",function(){},0,14,true);
    invalidate();
    for(var i in players){
      addButton(lay,Player.getName(players[i]),eval("function(){startFlash("+String(players[i])+","+String(check.isChecked())+");}"),null,{wid:-1},15);
    }
    dialog.setView(scroll(lay));
    dialog.setNegativeButton("取消",null);
    dialog.show();
  });
  }
  }catch(err){showTip(err,1);}
}

function flash(){
  try{
  if(flashing){
    flashing=false;
    Player.setFlying(false);
  }else{
  Ui(function(){
    var dialog=new app.AlertDialog.Builder(ctx);
    dialog.setTitle("选择自瞄对象");
    var lay=new wg.LinearLayout(ctx);
    lay.setOrientation(1);
    var check=addCheckBox(lay,"←兼容模式（必须勾选）",function(){},0,14,true);
    invalidate();
    for(var i in players){
      addButton(lay,Player.getName(players[i]),eval("function(){startFlash1("+String(players[i])+","+String(check.isChecked())+");}"),null,{wid:-1},15);
    
    }
    dialog.setView(scroll(lay));
    dialog.setNegativeButton("取消",null);
    dialog.show();
  });
  }
  }catch(err){showTip(err,1);}
}

function startFlash(player,flashMode){
  showTip("自瞄开始，如需停止请再次点击按钮",1);
  runThread(function(){
    try{
    flashing=true;
    while(flashing){
      invalidate();
      if(players.indexOf(player)==-1){
        if(房间=2){flashing=false;
        goHome();
        break;
        }
        showTip("目标退出游戏或死亡");
      }
      var yaw;
      if(AIMMODE=true){
        yaw=Entity.getYaw(player)-180;
      }else{
        yaw=Entity.getYaw(player)-180;
      }
      var pointX=Entity.getX(player)-Math.sin(yaw*Math.PI/180)*2,pointY=Entity.getY(player)+0.5,pointZ=Entity.getZ(player)+Math.cos(yaw*Math.PI/180)*2;
      Entity.setRot(Player.getEntity(),yaw+180,30);
      Entity.setPosition(Player.getEntity(),pointX,pointY,pointZ);
      Player.setFlying(true);
      lang.Thread.sleep(1);
    }
    }catch(err){showTip(err,1);}
  });
}

function startFlash1(player,flashMode){
  showTip("自瞄开始，如需停止请再次点击按钮",1);
  runThread(function(){
    try{
    flashing=true;
    while(flashing){
      invalidate();
      if(players.indexOf(player)==-1){
        if(房间=2){flashing=false;
        goHome();
        break;
        }
        showTip("目标退出游戏或死亡");
      }
      var yaw;
      if(AIMMODE=true){
        yaw=Math.random()*360-180;
      }else{
        yaw=Math.random()*360-180;
      }
      var pointX=Entity.getX(player)-Math.sin(yaw*Math.PI/180)*2,pointY=Entity.getY(player)+0.5,pointZ=Entity.getZ(player)+Math.cos(yaw*Math.PI/180)*2;
      Entity.setRot(Player.getEntity(),yaw+180,30);
      Entity.setPosition(Player.getEntity(),pointX,pointY,pointZ);
      Player.setFlying(true);
      lang.Thread.sleep(150);
    }
    }catch(err){showTip(err,1);}
  });
}

function setHome(){
  home={x:Player.getX(),y:Player.getY()+1,z:Player.getZ()};
  colortip("设置成功");
  return true;
}

function goHome(){
  home?Entity.setPosition(Player.getEntity(),home.x,home.y,home.z):showTip("无法返回传送点，请先设置传送起点");
}


function oneKey(){
  Ui(function(){
  var dialog=new app.AlertDialog.Builder(ctx);
  dialog.setTitle("添加装备");
  var scroll=new wg.ScrollView(ctx);
  var lay=new wg.LinearLayout(ctx);
  lay.setOrientation(1);
    addButton(lay,"钻石剑",function(){
    var slot=Player.getSelectedSlotId();
    Entity.setCarriedItem(Player.getEntity(),276,1);
    Player.enchant(slot,enchId.锋利,32767);
    Player.enchant(slot,enchId.耐久,32767);
    Player.enchant(slot,enchId.击退,32767);
    Player.enchant(slot,enchId.火焰附加,32767);
    dialog.dismiss();
    showTip("添加成功");
    },null,{wid:-1});
    addButton(lay,"弓",function(){
    var slot=Player.getSelectedSlotId();
    Entity.setCarriedItem(Player.getEntity(),261,1);
    Player.enchant(slot,enchId.力量,32767);
    Player.enchant(slot,enchId.耐久,32767);
    Player.enchant(slot,enchId.冲击,32767);
    Player.enchant(slot,enchId.无限,1);
    dialog.dismiss();
    showTip("添加成功");
    },null,{wid:-1});
    addButton(lay,"钻石甲",function(){
    var slot=Player.getSelectedSlotId();
    Entity.setCarriedItem(Player.getEntity(),311,1);
    Player.enchant(slot,enchId.保护,32767);
    Player.enchant(slot,enchId.耐久,32767);
    Player.enchant(slot,enchId.荆棘,32767);
    dialog.dismiss();
    showTip("添加成功");
    },null,{wid:-1});
    addButton(lay,"箭",function(){
    var slot=Player.getSelectedSlotId();
    Entity.setCarriedItem(Player.getEntity(),262,1);
    dialog.dismiss();
    showTip("箭添加成功");
    },null,{wid:-1});
  scroll.addView(lay);
  dialog.setView(scroll);
  dialog.setMessage("请选择");
  dialog=dialog.show();
  });
}




function radar(){
  try{
  if(radarWin){
       if(radarWin.isShowing()){
         state=2;
         radarWin.dismiss();
       }else if(state==3){
       radarWin.showAtLocation(mainView,right|top,0,hei/7);
         state=1;
         scan();
       }
  }else{
 Ui(function(){
    radarWin=new wg.PopupWindow(ctx);
    radarShow=new wg.ImageView(ctx);
    radarShow.setImageBitmap(radarPic);
    radarWin.setContentView(radarShow);
        radarWin.setWidth(radarPic.getWidth());
        radarWin.setHeight(radarPic.getHeight());
    radarWin.setBackgroundDrawable(getColorDrawable("dkgray"));
    radarWin.showAtLocation(mainView,right|top,0,hei/7);
         state=1;
         scan();
  });
       showTip("雷达已开启，再次点击关闭，长按显示所有人名称与距离",1);
  }
  }catch(err){print(err);}
}

function runThread(func){
  var a=new java.lang.Thread(new java.lang.Runnable({run:func}));
  a.start();
  return a;
}

function thread(func){
  var a=new java.lang.Thread(new java.lang.Runnable({run:func}));
  return a;
}

function showTip(text,show){
  Ui(function(){
    var toast=wg.Toast.makeText(ctx,String(text),show?show:0);
    toast.show();
  });
}

function getNames(){
  var arr=[],x=Player.getX(),y=Player.getY(),z=Player.getZ();
  invalidate();
  for(var i in players)arr.push(Player.getName(players[i])+"--"+Math.round(gougu(x-Entity.getX(players[i]),y-Entity.getY(players[i]),z-Entity.getZ(players[i]))));
  showDialog("所有玩家名","若在游戏房间外使用，则列表不会正确显示",arr.join("\n"),{txt:"关闭"});
  return true;
}

function showDialog(title,message,text,negative,positive,neutral,uncancel){
  Ui(function(){
  try{
  var dialog=new app.AlertDialog.Builder(ctx);
  dialog.setTitle(title);
  var scroll=new wg.ScrollView(ctx);
  if(typeof(text)=="string"){
  getMessage=new wg.EditText(ctx);
  getMessage.setText(text);
  scroll.addView(getMessage);
  }else if(typeof(text)=="object"){
  scroll.addView(text);
  }
  dialog.setView(scroll);
  if(negative)dialog.setNegativeButton(negative.txt?negative.txt:"",negative.command?negative.command:null);
  if(positive)dialog.setPositiveButton(positive.txt?positive.txt:"",positive.command?positive.command:null);
  if(neutral)dialog.setNeutralButton(neutral.txt?neutral.txt:"",neutral.command?neutral.command:null);
  dialog.setMessage(message);
  dialog.setCancelable(uncancel?false:true);
  dialog.show();
  }catch(err){showTip(err,1)}
  });
  return true;
}

function addCheckBox(parent,text,command,ave,size,checked){
  try{
  var check=new wg.CheckBox(ctx);
    check.setText(text?text:"");
      check.setChecked(checked?checked:false);
      if(size)check.setTextSize(size);
      if(command)check.setOnCheckedChangeListener(new wg.CompoundButton.OnCheckedChangeListener({onCheckedChanged:command}));
    aveLayout(check,typeof(ave)=="number"?ave:ave.type,ave.wid,ave.hei);
      parent.addView(check);
      return check;
  }catch(err){print(err)}
}

function aveLayout(view,ave,width,height,weight){
  switch(ave){
        case 1:
        view.setLayoutParams(new wg.RelativeLayout.LayoutParams(width?width:-2,height?height:-2,weight?weight:1));
        return view;
        default:
        view.setLayoutParams(new wg.LinearLayout.LayoutParams(width?width:-2,height?height:-2,weight?weight:1));
        return view;
      }
}

function Ui(command){
  ctx.runOnUiThread(new java.lang.Runnable({run:command}));
}

function getColorDrawable(color){
  return new grap.drawable.ColorDrawable(getColor(color));
}

function getColor(color){
  return eval("grap.Color."+color.toUpperCase());
}

function scan(){
  runThread(function(){
    abc:while(1){
      try{
      if(state==1){
      var x=Player.getX(),z=Player.getZ();
      invalidate();
      if(players.length>0){
      var scaleX=null,scaleZ=null;
      for(var i in players){
        if(state==2)break abc;
        var ls=Math.abs(x-Entity.getX(players[i]));
        if(scaleX==null||ls>scaleX){
          scaleX=ls;
        }
        ls=Math.abs(z-Entity.getZ(players[i]));
        if(scaleZ==null||ls>scaleZ){
          scaleZ=ls;
        }
      }
      var distX=scaleX*10/9,distZ=scaleZ*10/9,baseX=x-distX,baseZ=z-distZ,ratioX=lenX/2/distX,ratioZ=lenZ/2/distZ;
      for(var i in players){
        if(state==2)break abc;
        var name=Player.getName(players[i]),color=name.length>3&&name.substr(0,1)=="§"&&getColorValue(name.substr(3,1))?getColorValue(name.substr(3,1)):grap.Color.WHITE,actX=lenX-Math.abs(Entity.getX(players[i])-baseX)*ratioX,actZ=Math.abs(Entity.getZ(players[i])-baseZ)*ratioZ;
        draw(actZ,actX,color);
        drawPoint(players[i],actZ,actX,color);
      }
      }
      draw(lenZ/2,lenX/2,grap.Color.MAGENTA);
      drawPoint(Player.getEntity(),lenZ/2,lenX/2,grap.Color.MAGENTA);
      Ui(function(){
       radarShow.setImageBitmap(radarPic);
      radarPic=grap.Bitmap.createBitmap(lenZ,lenX,grap.Bitmap.Config.ARGB_8888);
      });
      }else{
        break;
      }
      java.lang.Thread.sleep(1000);
      }catch(err){
        showTip(err,1);
        break;
      }
    }
    state=3;
    Ui(function(){if(radarWin.isShowing())radarWin.dismiss();});
  });
}

function draw(x,y,color){
  var canvas=new grap.Canvas(radarPic);
  var paint=getPaint({color:color,dither:true});
  canvas.drawCircle(x,y,radius,paint);
}

function drawPoint(player,x,y,color){
  var ratio=Math.PI/180,yaw=Entity.getYaw(player);
  var x0=radius*1.3*Math.cos(yaw*ratio),y0=radius*1.3*Math.sin(yaw*ratio),x1=x0+radius*Math.cos((yaw-90)*ratio),y1=y0+radius*Math.sin((yaw-90)*ratio),x2=x0+radius*Math.cos((yaw+90)*ratio),y2=y0+radius*Math.sin((yaw+90)*ratio),x3=x0*2,y3=y0*2;
  var canvas=new grap.Canvas(radarPic);
  var paint=getPaint({color:color,dither:true,style:grap.Paint.Style.FILL});
  var path=new grap.Path();
  path.moveTo(x+x3,y+y3);
  path.lineTo(x+x1,y+y1);
  path.lineTo(x+x2,y+y2);
  path.close();
  canvas.drawPath(path,paint);
}

function gougu(){
  if(arguments.length<=3){
    var result=0;
    for(var i in arguments){
      result+=arguments[i]*arguments[i];
    }
    return Math.sqrt(result);
  }else{
    return null;
  }
}

function scroll(view,horizontal){
  var scrollView=horizontal?new wg.HorizontalScrollView(ctx):new wg.ScrollView(ctx);
  scrollView.addView(view);
  return scrollView;
}

function getColorValue(str){
  switch(str){
    case "红":
    return grap.Color.RED;
    case "黄":
    return grap.Color.YELLOW;
    case "蓝":
    return grap.Color.BLUE;
    case "绿":
    return grap.Color.GREEN;
    case "青":
    return grap.Color.CYAN;
    case "紫":
    return grap.Color.rgb(160,32,240);
    case "灰":
    return grap.Color.GRAY;
    case "白":
    return grap.Color.WHITE;
    case "黑":
    return grap.Color.BLACK;
    case "橙":
    return grap.Color.rgb(255,165,0);
    default:
    return null;
  }
}

function getPaint(fields){
  var paint=new grap.Paint();
  if(fields.color)paint.setColor(fields.color);
  if(fields.dither)paint.setDither(fields.dither);
  if(fields.antiAlias)paint.setAntiAlias(fields.antiAlias);
  if(fields.shader)paint.setShader(fields.shader);
  if(fields.width)paint.setStrokeWidth(fields.width);
  if(fields.style)paint.setStyle(fields.style);
  return paint;
}

function addButton(parent,text,command,longCommand,ave,size){
  try{
  var button=new wg.Button(ctx);
    button.setText(text?text:"");
      if(size)button.setTextSize(1,size);
      if(command)button.setOnClickListener(new view.View.OnClickListener({onClick:command}));
    if(longCommand)button.setOnLongClickListener(new view.View.OnLongClickListener({onLongClick:longCommand}));
      aveLayout(button,typeof(ave)=="number"?ave:ave.type,ave.wid,ave.hei);
      parent.addView(button);
      return button;
  }catch(err){print(err)}
}

function 功能窗口(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
var layout=new android.widget.LinearLayout(ctx)
try{
var menu=new android.widget.PopupWindow(layout, dip2px(ctx,75), dip2px(ctx,30));
menu.setFocusable(true)
var layout=new android.widget.LinearLayout(ctx)
layout.setOrientation(1)

var 模式=new android.widget.Button(ctx)
模式.setText("快捷作弊")
模式.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
快捷功能();
colortip("请注意不要重复加载窗口");
}}))
layout.addView(模式)

var 添加经验=new android.widget.Button(ctx)
添加经验.setText("添加经验")
添加经验.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
exp();
colortip("部分服务器或机型可能无效果");
}}))
layout.addView(添加经验)

var 游戏模式切换=new android.widget.Button(ctx)
游戏模式切换.setText("游戏模式切换")
游戏模式切换.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
colortip("部分服务器或联机崩端或无效果，慎用")
if(Level.getGameMode()==0)
{
Level.setGameMode(1)
colortip("创造")
}
else if(Level.getGameMode()==1)
{
Level.setGameMode(0)
colortip("生存")
}


colortip("部分服务器或机型可能无效果");
}}))
layout.addView(游戏模式切换)

var 飞行=new android.widget.Button(ctx)
飞行.setText("飞行")
飞行.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
fly();
colortip("部分服务器或机型可能无效果");
}}))
layout.addView(飞行)

var 雷达=new android.widget.Button(ctx)
雷达.setText("雷达")
雷达.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
radar();
colortip("部分服务器或机型可能无效果");
}}))
layout.addView(雷达)

var vb=new android.widget.Button(ctx)
vb.setText("添加物品")
vb.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
添加物品();
   colortip("部分服务器或机型可能无效果");
}}))
layout.addView(vb)

var vb=new android.widget.Button(ctx)
vb.setText("添加装备")
vb.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
oneKey();
   colortip("部分服务器或机型可能无效果");
}}))
layout.addView(vb)

var vb=new android.widget.Button(ctx)
vb.setText("夜视")
vb.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
vision();
   colortip("部分服务器或机型可能无效果");
}}))
layout.addView(vb)

var 起=new android.widget.Button(ctx)
起.setText("设置传送点")
起.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
setHome();
colortip("部分服务器或机型可能无效果");
}}))
layout.addView(起)

var 回=new android.widget.Button(ctx)
回.setText("返回传送点")
回.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
goHome();
colortip("部分服务器或机型可能无效果");
}}))
layout.addView(回)


var mlayout=makeMenu(ctx,layout)
menu.setContentView(mlayout)
menu.setWidth(dip2px(ctx,150))
menu.setHeight(dip2px(ctx,300))
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(200,0,10,200)))
menu.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,dip2px(ctx,0),dip2px(ctx,0))
}catch(err){
print(err)
}
}


function makeMenu(ctx,layout){ 
var mlayout=new android.widget.RelativeLayout(ctx) 
var svParams=new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT,android.widget.RelativeLayout.LayoutParams.FILL_PARENT) 
var scrollview=new android.widget.ScrollView(ctx) 
var pad=dip2px(ctx,2) 
scrollview.setPadding(pad,pad,pad,pad) 
scrollview.setLayoutParams(svParams) 
scrollview.addView(layout) 
mlayout.addView(scrollview) 
return mlayout 
}
//
function 自瞄窗口(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
var layout=new android.widget.LinearLayout(ctx)
try{
var menu=new android.widget.PopupWindow(layout, dip2px(ctx,75), dip2px(ctx,30));
menu.setFocusable(true)
var layout=new android.widget.LinearLayout(ctx)
layout.setOrientation(1)

var ms=new android.widget.Button(ctx)
ms.setText(colorword("§4模式"))
ms.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
mode=true
if( 房间!==1 ){
  房间=1;
  colortip("当前模式为联机模式");
標題.setText(colorword("§6CCOSHACK V7.0\n§4当前模式：联机模式"));
}else{
  房间=2;
  colortip("当前模式为服务器模式");
 標題.setText(colorword("§6CCOSHACK V7.0\n§4当前模式：服务器模式"));
}
}}))
layout.addView(ms)

var 背后=new android.widget.Button(ctx)
背后.setText("背后自瞄")
背后.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
if(解锁验证==true){
   if(房间==0){colortip("请先选择模式");}else
    {
if(房间=2){colortip("务必设置传送起点，防止卡在虚空");colortip("务必设置传送起点，防止卡在虚空");}
flash1();}
}else{
colortip("请先激活")
}
}}))
layout.addView(背后)

var 环绕=new android.widget.Button(ctx)
环绕.setText("环绕自瞄")
环绕.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
if(解锁验证==true){
  if(房间==0){colortip("请先选择模式");}else  
    {
if(房间=2){colortip("务必设置传送起点，防止卡在虚空");colortip("务必设置传送起点，防止卡在虚空");}
flash();}
}else{
colortip("请先激活")
}
}}))
layout.addView(环绕)

var switchaims = new Switch(ctx);
                                switchaims['setText']('基础自瞄');
                                
                                switchaims['setTextSize'](18);
                             
                                switchaims['setChecked'](switchaimed);
                                switchaims['setOnCheckedChangeListener'](new android['widget']['CompoundButton'].OnCheckedChangeListener({
                                    onCheckedChanged: function() {
                                        if (!switchaimed) {
                                            showAimSwitch();
                                            switchaimed = true
                                        } else {
                                            if (GUIa != null && GUIa['isShowing']()) {
                                                GUIa['dismiss']()
                                            };
                                            switchaimed = false;
                                            aimbotss = false;
                                            saimed = false
                                        };
                                
                                        switchaims['setChecked'](switchaimed);
                                       
                                 }}));
                                layout.addView(switchaims)

var mlayout=makeMenu(ctx,layout)
menu.setContentView(mlayout)
menu.setWidth(dip2px(ctx,150))
menu.setHeight(dip2px(ctx,300))
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(200,0,10,200)))
menu.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.RIGHT | android.view.Gravity.TOP,dip2px(ctx,0),dip2px(ctx,0))
}catch(err){
print(err)
}
}


function makeMenu(ctx,layout){ 
var mlayout=new android.widget.RelativeLayout(ctx) 
var svParams=new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT,android.widget.RelativeLayout.LayoutParams.FILL_PARENT) 
var scrollview=new android.widget.ScrollView(ctx) 
var pad=dip2px(ctx,2) 
scrollview.setPadding(pad,pad,pad,pad) 
scrollview.setLayoutParams(svParams) 
scrollview.addView(layout) 
mlayout.addView(scrollview) 
return mlayout 
}

//
function 快捷功能(){
var View=android.view.View;
var String=java.lang.String;
var Integer=java.lang.Integer;

var LinearLayout=android.widget.LinearLayout;
var Runnable=java.lang.Runnable;
var Color=android.graphics.Color;
var MotionEvent=android.view.MotionEvent;
var Matrix=android.graphics.Matrix;
var Bitmap=android.graphics.Bitmap;
var ScrollView=android.widget.ScrollView;
var FrameLayout=android.widget.FrameLayout;
var Gravity=android.view.Gravity;
var RelativeLayout=android.widget.RelativeLayout;
var InputFilter=android.text.InputFilter;
var TextWatcher=android.text.TextWatcher;
var ColorDrawable=android.graphics.drawable.ColorDrawable;
var StringBuilder=java.lang.StringBuilder;

var Button=android.widget.Button;
var TextView=android.widget.TextView;
var EditText=android.widget.EditText;
var ImageView=android.widget.ImageView;
var ImageButton=android.widget.ImageButton;
var PopupWindow=android.widget.PopupWindow;
var SeekBar=android.widget.SeekBar;


var logobase64="";
var logo=android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(logobase64,0),0,android.util.Base64.decode(logobase64,0).length);

context=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

context.setTheme(android.R.style.Theme_Material_Light_NoActionBar);

//state

var buttonbg={t:-531890357,//e04bff4b
f:-520139957,//e0ff4b4b
s:-526475618//e09e9e9e
}



var Metrics = context.getResources().getDisplayMetrics();

var ScreenWidth=Metrics.widthPixels;
var ScreenHeight=Metrics.heightPixels;

function dip2px(dips){ 
return Math.ceil(dips * Metrics.density); 
}

function sp2px(sp){
return (sp*Metrics.scaledDensity+0.5);
}

function bitmapScale(bitmap,x,y){
var matrix = new Matrix();  
    matrix.postScale(x/bitmap.getWidth(),y/bitmap.getHeight());
    return Bitmap.createBitmap(bitmap, 0, 0,bitmap.getWidth(),bitmap.getHeight() , matrix,true);
}

function setClick(view,executeString,x){view.setOnClickListener(new View.OnClickListener(){onClick:function(v){
return(eval(executeString));//虽然不需要return
}});
}

function setTouch(view,executeString){view.setOnTouchListener(new View.OnTouchListener(){onTouch:function(v,event){
return(eval(executeString));
}});
}

function setDismiss(popwin,executeString){popwin.setOnDismissListener(new PopupWindow.OnDismissListener(){onDismiss:function(){
eval(executeString);
}});
}

function setSeekBarChange(seekbar,executeString,x){
seekbar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener(){
onProgressChanged:function(seekbar,progress,fromUser){
eval(executeString);
},

onStartTrackingTouch:function(seekbar){
// 
},

onStopTrackingTouch:function(seekbar){
//
},

});
}

function addTextChanged(edit,executeString,x){
edit.addTextChangedListener(new TextWatcher(){

beforeTextChanged:function(str,start,count,after){
},

onTextChanged:function(str,start,before,count){
},

afterTextChanged:function(s){
eval(executeString);
},

});
}



//popwin
var $IconPopwin;
var $MemuPopwin;
var $EnchantPopwin;
//var $TpPopwin;
var $TpMemuPopwin;var $TpModeButtonPopwin;


function DrawIcon(showX,showY){
context.runOnUiThread(new Runnable({run:function(){

if($IconPopwin!=null){
$IconPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
return;
}
var view=new LinearLayout(context);
var iconbutton=new ImageButton(context);
iconbutton.setImageBitmap(bitmapScale(logo,dip2px(50),dip2px(50)));


view.addView(iconbutton);
iconbutton.setBackgroundColor(Color.argb(0,0,0,0));

var popwin=new PopupWindow(view,
LinearLayout.LayoutParams.WRAP_CONTENT,
LinearLayout.LayoutParams.WRAP_CONTENT
);
//show
popwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
//state
$IconPopwin=popwin;
setClick(iconbutton,"IconPopwinClick();");
setTouch(iconbutton,"IconPopwinMove(event);");
}}));
}


var MemuButtons=[
//text,rs:[raplace string <eval>],checktest,exe
//replace %$n
{text:"\u624B\u6301\u9644\u9B54",exe:"EnchantHandItem();"},
//{name:"\u6b63\u5728\u98de\u884c",exe:"Player.setFlying(true);"},
{text:"一键退游",exe:"tuiyou();"},
{text:"飞行开关",
checktest:function(){return Player.canFly();},
exe:"Player.setCanFly(!Player.canFly());"},

{text:"玩家传送",checktest:function(){
return !(/*($TpPopwin==null||!$TpPopwin.isShowing())||*/($TpMemuPopwin==null||!$TpMemuPopwin.isShowing()));
},exe:"if($TpMemuPopwin==null||!$TpMemuPopwin.isShowing()){DrawTpMemu();}else{$TpMemuPopwin.dismiss();}"},
{text:"y+穿墙",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY()+5,Player.getZ());"},
{text:"y-穿墙",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY()-5,Player.getZ());"},
{text:"z-穿墙",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY(),Player.getZ()-5);"},
{text:"z+穿墙",exe:"setPosition(Player.getEntity(),Player.getX(),Player.getY(),Player.getZ()+5);"},
{text:"x-穿墙",exe:"setPosition(Player.getEntity(),Player.getX()-5,Player.getY(),Player.getZ());"},
{text:"x+穿墙",exe:"setPosition(Player.getEntity(),Player.getX()+5,Player.getY(),Player.getZ());"}, 

];

function MemuButtonBGDraw(count,bt){
if(MemuButtons[count].checktest()){bt.setBackgroundColor(buttonbg.t);}
else{bt.setBackgroundColor(buttonbg.f);}
}

function MemuButtonDraw(view){
for(var count=0;count<MemuButtons.length;count++){
var bt=new Button(context);
bt.setElevation(10);

bt.setAllCaps(false);
var btext=new String(MemuButtons[count].text);
/*
if(typeof(MemuButtons[count].rs)!="undefined")
for(var i=0;i<MemuButtons[count].rs.length;i++){
btext=btext.replace("%$"+i,MemuButtons[count].rs[i]());
}
*/
bt.setText(btext);

if(typeof(MemuButtons[count].checktest)!="undefined"){
MemuButtonBGDraw(count,bt);
setClick(bt,MemuButtons[count].exe+"MemuButtonBGDraw(x[0],x[1]);",[count,bt]);
}
else{
bt.setBackgroundColor(buttonbg.s);
setClick(bt,MemuButtons[count].exe,[bt,count]);
}

view.addView(bt,-1,-2);//WRAP_CONTENT,WRAP_FILL_PARENT暂且这么写
}
}

function DrawMemu(showX,showY){
//context.runOnUiThread(new Runnable({run:function(){

if($MemuPopwin!=null){
$MemuPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);//ScreenWidth-dip2px(220),dip2px(120));
return;}
var view=new LinearLayout(context);
view.setOrientation(LinearLayout.VERTICAL);
view.setBackgroundColor(-2113882113);//#8200b7ff

var xuxiqwq=new TextView(context);
xuxiqwq.setText("已兼容本网易版本");
view.addView(xuxiqwq,-2,-2);
//add buttons

////////////////
MemuButtonDraw(view);
////////////////

var scrollview=new ScrollView(context);
scrollview.addView(view,
-1,-2//WRAP_CONTENT,WRAP_FILL_PARENT
);
var popwin=new PopupWindow(scrollview,
-1,-1//WRAP_FILL_PARENT
);
popwin.setWidth(dip2px(180));
popwin.setHeight(ScreenHeight/2);
popwin.setOutsideTouchable(true);
popwin.setElevation(10);
setDismiss(popwin,"MenuPopwinDismiss();");
popwin.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
popwin.setFocusable(true);
$MemuPopwin=popwin;
//show
popwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);//ScreenWidth-dip2px(220),dip2px(120));

//}}));
}

//tool win//
var $ToolWinIsShow=false;

//be的id按顺序
var EnchantList=[
{id:0,name:"\u4fdd\u62a4"},
{id:1,name:"\u706b\u7130\u4fdd\u62a4"},
{id:2,name:"\u6389\u843d\u4fdd\u62a4"},
{id:3,name:"\u7206\u70b8\u4fdd\u62a4"},
{id:4,name:"\u5f39\u5c04\u7269\u4fdd\u62a4"},
{id:5,name:"\u8346\u68d8"},
{id:6,name:"\u6c34\u4e0b\u547c\u5438"},
{id:7,name:"\u6df1\u6d77\u63a2\u7d22\u8005"},
{id:8,name:"\u6c34\u4e0b\u901f\u6398"},
{id:9,name:"\u950b\u5229"},
{id:10,name:"\u4ea1\u7075\u6740\u624b"},
{id:11,name:"\u622a\u80a2\u6740\u624b"},
{id:12,name:"\u51fb\u9000"},
{id:13,name:"\u706b\u7130\u9644\u52a0"},
{id:14,name:"\u62a2\u593a"},
{id:15,name:"\u6548\u7387"},
{id:16,name:"\u7cbe\u51c6\u91c7\u96c6"},
{id:17,name:"\u8010\u4e45"},
{id:18,name:"\u65f6\u8fd0"},
{id:19,name:"\u529b\u91cf"},
{id:20,name:"\u51b2\u51fb"},
{id:21,name:"\u706b\u77e2"},
{id:22,name:"\u65e0\u9650"},
{id:23,name:"\u6d77\u4e4b\u7737\u987e"},
{id:24,name:"\u9975\u9493"},
{id:25,name:"\u51b0\u971c\u884c\u8005"},
{id:26,name:"\u7ecf\u9a8c\u4fee\u8865"},
{id:27,name:"\u7ed1\u5b9a\u8bc5\u5492"},
{id:28,name:"\u6d88\u5931\u8bc5\u5492"},
{id:29,name:"\u7a7f\u523a"},
{id:30,name:"\u6fc0\u6d41"},
{id:31,name:"\u5fe0\u8bda"},
{id:32,name:"\u5f15\u96f7"},
{id:33,name:"\u591a\u91cd\u5c04\u51fb"},
{id:34,name:"\u7a7f\u900f"},
{id:35,name:"\u5feb\u901f\u88c5\u586b"},

];

function DrawEnchant(){
$ToolWinIsShow=true;


//context.runOnUiThread(new Runnable({run:function(){

if($EnchantPopwin!=null){
$EnchantPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,ScreenWidth/4,ScreenHeight/4);
return;
}

var view=new LinearLayout(context);
view.setOrientation(LinearLayout.VERTICAL);
view.setBackgroundColor(-2113882113);//#8200b7ff
//text         id 0xa
//button    id 0x1
//SeekBar id 0x2
//edit         id 0x3
//params
var textParams=new RelativeLayout.LayoutParams(sp2px(10*5),-2);
textParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT,RelativeLayout.TRUE);
var buttonParams=new RelativeLayout.LayoutParams(-2,-2);
buttonParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT,RelativeLayout.TRUE);
var editParams=new RelativeLayout.LayoutParams(sp2px(15*5),-2);
editParams.addRule(RelativeLayout.LEFT_OF,0x1);
var sbParams=new RelativeLayout.LayoutParams(-1,-2);
sbParams.addRule(RelativeLayout.RIGHT_OF,0xa);
sbParams.addRule(RelativeLayout.LEFT_OF,0x3);

for(var i=0;i<EnchantList.length;i++){
var relative=new RelativeLayout(context);
var name=new TextView(context);
name.setId(0xa);
var button=new Button(context);
button.setId(0x1);
var sb=new SeekBar(context);
//sb.setId(0x2);
var level=new EditText(context);
level.setId(0x3);

//level.setInputType(InputType.TYPE_CLASS_NUMBER|InputType.TYPE_NUMBER_FLAG_SIGNED);//number
level.setInputType(4098);
level.setText("0");
level.setFocusable(true);
level.setFocusableInTouchMode(true);
level.setFilters([new InputFilter.LengthFilter(6)]);
addTextChanged(level,"EnchantEditChange(s,x);",[level,sb]);

sb.setProgress(32768);
sb.setMax(65535);
sb.setProgress(32768);

sb.setPadding(dip2px(20),0,dip2px(50),0);
setSeekBarChange(sb,"EnchantSeekChange(progress,fromUser,x);",[level]);
name.setText(EnchantList[i].name);
button.setText("\u9644\u9b54");
setClick(button,"EnchantHand("+i+",x[0].getProgress());",[sb]);
//button.setGravity(Gravity.RIGHT);
//name.setGravity(Gravity.LEFT);
//level.setGravity(Gravity.CENTER);
relative.addView(name,textParams);
relative.addView(level,editParams);
relative.addView(button,buttonParams);
relative.addView(sb,sbParams);
view.addView(relative,-1,-2);
}
//dividing line--------
var scrollview=new ScrollView(context);
scrollview.addView(view,
-1,-2//WRAP_FILL_PARENT,WRAP_CONTENT
);
var popwin=new PopupWindow(scrollview,
-1,-1//WRAP_FILL_PARENT
);
popwin.setWidth(ScreenWidth/2);
popwin.setHeight(ScreenHeight/2);
popwin.setOutsideTouchable(true);
popwin.setElevation(10);
setDismiss(popwin,"EnchantPopwinDismiss();");
popwin.setFocusable(true);
popwin.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
popwin.setFocusable(true);
$EnchantPopwin=popwin;
popwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,ScreenWidth/4,ScreenHeight/4);

//}}));
}

/*
function DrawTp(showX,showY){
//context.runOnUiThread(new Runnable({run:function(){

if($TpPopwin!=null){
$TpPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
return;

var view=new LinearLayout(context);
}
//}}));
}*/


function TpPlayerRefresh(){
var view=$TpPlayersView;
view.removeAllViews();
var players=Server.getAllPlayers();
for(var i=0;i<players.length;i++){
var player=players[i];
var name=Player.getName(player);
var bt=new Button(context);
bt.setBackgroundColor(buttonbg.s);
bt.setAllCaps(false);
bt.setText(""+name);
setClick(bt,"TpModes[$TpMode].run(x[0]);",[player]);
view.addView(bt,-1,-2);
}

}


var TpModes=[
{id:0,name:"tp",run:function(player){
setPosition(Player.getEntity(),Entity.getX(player),Entity.getY(player),Entity.getZ(player));
}},

{id:1,name:"tpa",run:function(player){
setPosition(player,Player.getX(),Player.getY(),Player.getZ());
}},

];
var $TpMode=0;



function DrawTpMemu(){
//context.runOnUiThread(new Runnable({run:function(){
var showX=0;var showY=0;
if($TpMemuPopwin!=null){
TpPlayerRefresh();
$TpMemuPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
$TpModeButtonPopwin.getContentView().findViewById(0x1).setText(TpModes[$TpMode].name);
$TpModeButtonPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX+dip2px(180),showY);

return;
}

var view=new LinearLayout(context);
view.setOrientation(LinearLayout.VERTICAL);
view.setBackgroundColor(-2113882113);//#8200b7ff

$TpPlayersView=new LinearLayout(context);
$TpPlayersView.setOrientation(LinearLayout.VERTICAL);
var bt=new Button(context);
bt.setText("刷新");
view.addView(bt,-1,-2);
setClick(bt,"TpPlayerRefresh();");

TpPlayerRefresh();

view.addView($TpPlayersView,-1,-2);

var scrollview=new ScrollView(context);
scrollview.addView(view,
-1,-2//WRAP_FILL_PARENT,WRAP_CONTENT
);
var popwin=new PopupWindow(scrollview,
-1,-1//WRAP_FILL_PARENT
);

popwin.setWidth(dip2px(180));
popwin.setHeight(dip2px(180*1.5));

$TpMemuPopwin=popwin;
setDismiss(popwin,"$TpModeButtonPopwin.dismiss();");
$TpMemuPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);

//Mode Button
var mview=new LinearLayout(context);
var modebutton=new Button(context);

modebutton.setText(TpModes[0].name);
modebutton.setBackgroundColor(buttonbg.s);
setClick(modebutton,"if($TpMode>=TpModes.length-1)$TpMode=0;else ++$TpMode;v.setText(TpModes[$TpMode].name);");
modebutton.setId(0x1);
modebutton.setAllCaps(false);
$TpMode=0;
mview.addView(modebutton,-1,-1);

var mpop=new PopupWindow(mview,dip2px(80),dip2px(40));
$TpModeButtonPopwin=mpop;
$TpModeButtonPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX+dip2px(180),showY);



//}}));
}

//state
var $orgX=null, $orgY=null,$offset=null, $offsetY=null;
var $IconPopwinX=null,$IconPopwinY=null;

function IconPopwinMove(event){
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
$orgX =  event.getX();
$orgY = event.getY();
break;
case MotionEvent.ACTION_MOVE:
$offsetX =  event.getRawX()- $orgX;
$offsetY =  event.getRawY() - $orgY;
$IconPopwin.update($offsetX,$offsetY, -1, -1, true);

break;
case MotionEvent.ACTION_UP:
$IconPopwinX=event.getRawX()-event.getX();
$IconPopwinY=event.getRawY()-event.getY();
break;
}
return false;
}

function IconPopwinClick(){

$IconPopwin.dismiss();
DrawMemu($IconPopwinX,$IconPopwinY);
return false;
}

function MenuPopwinDismiss(){
if(!$ToolWinIsShow)
DrawIcon($IconPopwinX,$IconPopwinY);
}

function EnchantPopwinDismiss(){
$ToolWinIsShow=false;
DrawMemu($IconPopwinX,$IconPopwinY);
}

function EnchantHandItem(){
DrawEnchant();
$MemuPopwin.dismiss();
}

function tuiyou(){
End
}

function EnchantSeekChange(progress,fromUser,x){
if(fromUser)
x[0].setText(""+(progress-32768));
}

function EnchantEditChange(s,x){
if(s.toString()==""||s.toString()=="-"){var progress=-32768;}else
var progress=parseInt(s.toString())+32768;
if(progress>65535){
x[0].setText("32767");

progress=65535;
x[0].setSelection(5);
}

x[1].setProgress(progress);
}

function EnchantHand(id,level){
///Player.getEnchantments(par1int);
Item.setEnchantType(getCarriedItem(),id,1);
Player.enchant(Player.getSelectedSlotId(),id,-98304+level);
}


MC={
getAllPlayers:function(){
var e=Entity.getAll();
var players=new Array();
for(var i=0;i<e.length;i++){
if(Player.isPlayer(e[i]))
players.push(e[i]);
}
print(e.length+","+e[0]+","+e[length-1]);
return players;
},

}



DrawIcon(ScreenWidth,0.5*ScreenHeight-dip2px(40));
/*
function newLevel(){
DrawIcon(ScreenWidth,0.5*ScreenHeight-dip2px(40));
}
function leaveGame(){
context.runOnUiThread(new Runnable({run:function(){
$IconPopwin.dismiss();
}}));
}*/

}

//
function 添加物品(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get() 
ctx.runOnUiThread(new java.lang.Runnable({ 
run: function(){ 
try{
添加物()
}catch(err){print(err)}
}}))
function 添加物(){
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
var layout=new android.widget.LinearLayout(ctx)
try{
var menu=new android.widget.PopupWindow(layout, dip2px(ctx,75), dip2px(ctx,30));
menu.setFocusable(true)
var layout=new android.widget.LinearLayout(ctx)
layout.setOrientation(1)
var 物品ID=new android.widget.EditText(ctx)
物品ID.setText("")
物品ID.setHint("物品ID")
layout.addView(物品ID)

var 物品特殊值=new android.widget.EditText(ctx)
物品特殊值.setText("")
物品特殊值.setHint("物品特殊值")
layout.addView(物品特殊值)

var 确认=new android.widget.Button(ctx)
确认.setText("添加")
确认.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
var 特殊值=物品特殊值.getText()
var ID=物品ID.getText()
//addItemInventory(ID,1,特殊值)
Entity.setCarriedItem(getPlayerEnt(),ID,64,特殊值)
clientMessage("已添加")
}}))
layout.addView(确认)
var vb=new android.widget.Button(ctx)
vb.setText("物品ID表")
vb.setOnClickListener(new android.view.View.OnClickListener({
onClick:function(v){
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var GUI;
ctx.runOnUiThread(new java.lang.Runnable({
run: function(){
try{
var layout2 = new android.widget.LinearLayout(ctx);
layout2.setOrientation(1);
var scroll2 = new android.widget.ScrollView(ctx);
scroll2.addView(layout2);
var txt = new android.widget.TextView(ctx);
var dialog = new android.app.Dialog(ctx);
dialog.setContentView(scroll2);
dialog.setTitle("物品ID表");
layout2.addView(txt);//txt
txt.setText(物品ID一览表);
var zuang = new android.widget.Button(ctx);
zuang.setOnClickListener(new android.view.View.OnClickListener(){
onClick: function(viewarg){
dialog.dismiss()
}});
zuang.setText("确定");
layout2.addView(zuang)
dialog.show();
} catch(err){
print("错误: " + err);
}
}}));
}}))
layout.addView(vb)




var mlayout=makeMenu(ctx,layout)
menu.setContentView(mlayout)
menu.setWidth(dip2px(ctx,200))
menu.setHeight(dip2px(ctx,200))
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(200,0,10,200)))
menu.showAtLocation(ctx.getWindow().getDecorView(),android.view.Gravity.LEFT | android.view.Gravity.TOP,dip2px(ctx,10),dip2px(ctx,10))
}catch(err){
print(err)
}
}


function dip2px(ctx, dips){ 
return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density); 
}


function makeMenu(ctx,layout){ 
var mlayout=new android.widget.RelativeLayout(ctx) 
var svParams=new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT,android.widget.RelativeLayout.LayoutParams.FILL_PARENT) 
var scrollview=new android.widget.ScrollView(ctx) 
var pad=dip2px(ctx,2) 
scrollview.setPadding(pad,pad,pad,pad) 
scrollview.setLayoutParams(svParams) 
scrollview.addView(layout) 
mlayout.addView(scrollview) 
return mlayout 
}}

////






function showJumpBtn() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x130 = new LinearLayout(ctx);
                _0x2bf6x130['setOrientation'](1);
                var _0x2bf6x134 = new Button(ctx);
                _0x2bf6x134['setText'](' ');
                _0x2bf6x134['setTextColor'](Color['rgb'](0, 0, 0));
                _0x2bf6x134['setBackground'](jbg);
                _0x2bf6x134['getBackground']()['setAlpha'](150);
                _0x2bf6x134['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        setVelY(getPlayerEnt(), 0.4)
                    }
                }));
                _0x2bf6x130['addView'](_0x2bf6x134);
                GUIj = new PopupWindow(_0x2bf6x130, RelativeLayout['LayoutParams'].WRAP_CONTENT, RelativeLayout['LayoutParams'].WRAP_CONTENT);
                GUIj['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                GUIj['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['BOTTOM'], 110, 135)
            } catch (err) {
                Toast['makeText'](ctx, 'An error occured: ' + err, 1)['show']()
            }
        }
    }))
}

function showElevatorBtn() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x130 = new LinearLayout(ctx);
                _0x2bf6x130['setOrientation'](1);
                var _0x2bf6x136 = new Button(ctx);
                _0x2bf6x136['setText']('Up');
                _0x2bf6x136['setTextColor'](Color['rgb'](255, 255, 255));
                _0x2bf6x136['setBackground'](theme);
                _0x2bf6x136['setPadding'](10, 10, 10, 10);
                _0x2bf6x136['getBackground']()['setAlpha'](150);
                _0x2bf6x136['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        Entity['setPositionRelative'](getPlayerEnt(), 0, +2.53, 0)
                    }
                }));
                _0x2bf6x130['addView'](_0x2bf6x136);
                var _0x2bf6x137 = new Button(ctx);
                _0x2bf6x137['setText']('Down');
                _0x2bf6x137['setTextColor'](Color['rgb'](0, 255, 220));
                _0x2bf6x137['setBackground'](theme);
                _0x2bf6x137['setPadding'](10, 10, 10, 10);
                _0x2bf6x137['getBackground']()['setAlpha'](150);
                _0x2bf6x137['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        Entity['setPosition'](getPlayerEnt(), getPlayerX(), getPlayerY() - 1.01, getPlayerZ())
                    }
                }));
                _0x2bf6x130['addView'](_0x2bf6x137);
                GUIe = new PopupWindow(_0x2bf6x130, RelativeLayout['LayoutParams'].WRAP_CONTENT, RelativeLayout['LayoutParams'].WRAP_CONTENT);
                GUIe['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                GUIe['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['CENTER'], 0, 0)
            } catch (err) {
                Toast['makeText'](ctx, 'An error occured: ' + err, 1)['show']()
            }
        }
    }))
}

function showEscapeBtn() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x130 = new LinearLayout(ctx);
                _0x2bf6x130['setOrientation'](1);
                var _0x2bf6x139 = new Button(ctx);
                _0x2bf6x139['setText']('冲刺');
                _0x2bf6x139['setTextColor'](Color['rgb'](0, 0, 0));
               
                _0x2bf6x139['getBackground']()['setAlpha'](150);
                _0x2bf6x139['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        var _0x2bf6x13a = [0, 0, 0];
                        toDirectionalVector(_0x2bf6x13a, (getYaw() + 90) * Math['PI'] / 180, getPitch() * Math['PI'] / 180 * -1);
                        setVelX(getPlayerEnt(), 6 * _0x2bf6x13a[0]);
                        setVelZ(getPlayerEnt(), 6 * _0x2bf6x13a[2])
                    }
                }));
                _0x2bf6x130['addView'](_0x2bf6x139);
                GUIs = new PopupWindow(_0x2bf6x130, RelativeLayout['LayoutParams'].WRAP_CONTENT, RelativeLayout['LayoutParams'].WRAP_CONTENT);
                GUIs['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                GUIs['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['LEFT'] | Gravity['CENTER'], 0, 0)
            } catch (err) {
                Toast['makeText'](ctx, 'An error occured: ' + err, 1)['show']()
            }
        }
    }))
}

function showReachSwitch() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x130 = new LinearLayout(ctx);
                _0x2bf6x130['setOrientation'](1);
                var _0x2bf6x13c = new android['widget'].ToggleButton(ctx);
                _0x2bf6x13c['setText']('R');
                _0x2bf6x13c['setTextOn']('R');
                _0x2bf6x13c['setTextOff']('R');
                _0x2bf6x13c['setChecked'](sreached);
                _0x2bf6x13c['setTextSize'](18);
                _0x2bf6x13c['setBackground'](bg);
                _0x2bf6x13c['getBackground']()['setAlpha'](150);
                _0x2bf6x13c['setTextColor'](android['graphics']['Color']['rgb'](0, 255, 210));
                _0x2bf6x13c['setOnClickListener'](new android['view']['View'].OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        if (!sreached) {
                            sreached = true;
                            Level['setGameMode'](1);
                            Player['setCanFly'](false);
                            _0x2bf6x13c['setBackground'](abg)
                        } else {
                            sreached = false;
                            Level['setGameMode'](0);
                            _0x2bf6x13c['setBackground'](bg)
                        };
                        _0x2bf6x13c['setChecked'](sreached)
                    }
                }));
                _0x2bf6x130['addView'](_0x2bf6x13c);
                GUIr = new PopupWindow(_0x2bf6x130, RelativeLayout['LayoutParams'].WRAP_CONTENT, RelativeLayout['LayoutParams'].WRAP_CONTENT);
                GUIr['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                GUIr['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['TOP'], 100, 0)
            } catch (err) {
                Toast['makeText'](ctx, 'An error occured: ' + err, 1)['show']()
            }
        }
    }))
}

function showAimSwitch() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x130 = new LinearLayout(ctx);
                _0x2bf6x130['setOrientation'](1);
                var _0x2bf6x13e = new android['widget'].ToggleButton(ctx);
                _0x2bf6x13e['setText']('Aim');
                _0x2bf6x13e['setTextOn']('开');
                _0x2bf6x13e['setTextOff']('关');
                _0x2bf6x13e['setChecked'](saimed);
                _0x2bf6x13e['setTextSize'](15);
                
                _0x2bf6x13e['getBackground']()['setAlpha'](80);
                _0x2bf6x13e['setTextColor'](android['graphics']['Color']['rgb'](0, 0, 0));
                _0x2bf6x13e['setOnClickListener'](new android['view']['View'].OnClickListener({
                    onClick: function(_0x2bf6x132) {
                      if (!escapeed) {
                                            showEscapeBtn();
                                            escapeed = true
                                        } else {
                                            GUIs['dismiss']();
                                            escapeed = false
                                        };
                                      
                        if (!saimed) {
                            saimed = true;
                            aimbotss = true;
                          
                        } else {
                            saimed = false;
                            aimbotss = false;
                           
                        };
                        _0x2bf6x13e['setChecked'](saimed)
                    }
                }));
                _0x2bf6x130['addView'](_0x2bf6x13e);
                GUIa = new PopupWindow(_0x2bf6x130, RelativeLayout['LayoutParams'].WRAP_CONTENT, RelativeLayout['LayoutParams'].WRAP_CONTENT);
                GUIa['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                GUIa['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['TOP'], 150 * 3, 0)
            } catch (err) {
                Toast['makeText'](ctx, 'An error occured: ' + err, 1)['show']()
            }
        }
    }))
}


function mainMenu() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x147 = new LinearLayout(ctx);
                var _0x2bf6x148 = new ScrollView(ctx);
                var _0x2bf6x149 = new LinearLayout(ctx);
                _0x2bf6x147['setOrientation'](1);
                _0x2bf6x147['setBackground'](theme1);
                _0x2bf6x147['getBackground']()['setAlpha'](150);
                _0x2bf6x149['setOrientation'](1);
                _0x2bf6x148['addView'](_0x2bf6x147);
                _0x2bf6x149['addView'](_0x2bf6x148);
var scrollText = new android.widget.TextView(ctx);

scrollText.setText("LiquidBounce");

scrollText.setTextSize(18);                                                                                  scrollText.setTextColor(android.graphics.Color.MAGENTA);

scrollText.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.RED));
scrollText.getBackground().setAlpha(150);

scrollText.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);

scrollText.setMarqueeRepeatLimit(-1);

scrollText.setSingleLine();

scrollText.setHorizontallyScrolling(true);

scrollText.setSelected(true);

_0x2bf6x147['addView'](scrollText);
                var _0x2bf6x14a = new TextView(ctx);
                _0x2bf6x14a['setTextSize'](20);
                _0x2bf6x14a['setText'](NAME + ' ' + VERSION);
                _0x2bf6x14a['setTextColor'](android['graphics']['Color']['rgb'](50, 220, 0));
                _0x2bf6x14a['setGravity'](Gravity.CENTER);
                _0x2bf6x147['addView'](_0x2bf6x14a);
                var _0x2bf6x14b = new TextView(ctx);
                _0x2bf6x14b['setTextSize'](15);
                _0x2bf6x14b['setText']('ὒf� ' + MODULES);
                _0x2bf6x14b['setTextColor'](android['graphics']['Color']['rgb'](90, 120, 75));
                _0x2bf6x14b['setGravity'](Gravity.CENTER);
                _0x2bf6x147['addView'](_0x2bf6x14b);
                var _0x2bf6x14c = new TextView(ctx);
                _0x2bf6x14c['setText']('战斗');
                _0x2bf6x14c['setTextColor'](Color['rgb'](191, 219, 0));
                _0x2bf6x14c['setTextSize'](24);
                _0x2bf6x14c['setBackground'](theme);
                _0x2bf6x14c['getBackground']()['setAlpha'](100);
                _0x2bf6x14c['setGravity'](Gravity.CENTER);
                _0x2bf6x14c['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        _0x2bf6x14d();
                        exitcombat();
                        if (menu != null && menu['isShowing']()) {
                            menu['dismiss']()
                        };
                        if (GUI != null && GUI['isShowing']()) {
                            GUI['dismiss']()
                        };
                        exitUI['dismiss']()
                    }
                }));
                _0x2bf6x147['addView'](_0x2bf6x14c);

                function _0x2bf6x14d() {
                    ctx['runOnUiThread'](new Runnable({
                        run: function() {
                            try {
                                var _0x2bf6x147 = new LinearLayout(ctx);
                                var _0x2bf6x148 = new ScrollView(ctx);
                                var _0x2bf6x149 = new LinearLayout(ctx);
                                _0x2bf6x147['setOrientation'](1);
                                _0x2bf6x147['setBackground'](theme);
                                _0x2bf6x147['getBackground']()['setAlpha'](120);
                                _0x2bf6x149['setOrientation'](1);
                                _0x2bf6x148['addView'](_0x2bf6x147);
                                _0x2bf6x149['addView'](_0x2bf6x148);
                                var _0x2bf6x14e = new TextView(ctx);
                                _0x2bf6x14e['setTextSize'](20);
                                _0x2bf6x14e['setText']('-| 功能 |-');
                                _0x2bf6x14e['setTextColor'](android['graphics']['Color'].MAGENTA);
                                _0x2bf6x14e['setBackgroundDrawable'](new ColorDrawable(Color.BLACK));
                                _0x2bf6x14e['getBackground']()['setAlpha'](120);
                                _0x2bf6x14e['setGravity'](Gravity.CENTER);
                                _0x2bf6x147['addView'](_0x2bf6x14e);

                                
                                
                                var airjumps = new Switch(ctx);
                                airjumps['setText']('踏空');
                                airjumps['setTextColor'](android['graphics']['Color']['rgb'](0, 255, 255));
                                airjumps['setPadding'](10, 3, 3, 3);
                                airjumps['setTextSize'](15);
                                airjumps['setBackground'](module);
                                airjumps['getBackground']()['setAlpha'](120);
                                airjumps['setChecked'](airjumped);
                                airjumps['setOnCheckedChangeListener'](new android['widget']['CompoundButton'].OnCheckedChangeListener({
                                    onCheckedChanged: function() {
                                        if (!airjumped) {
                                            showJumpBtn();
                                            airjumped = true;
                                            fctoast('可能对某些设备无效')
                                        } else {
                                            GUIj['dismiss']();
                                            airjumped = false
                                        };
                                        airjumps['setChecked'](airjumped)
                                    }
                                }));
                                _0x2bf6x147['addView'](airjumps);                                                                                               
                                var escapes = new Switch(ctx);
                                escapes['setText']('瞬移');
                                escapes['setTextColor'](android['graphics']['Color']['rgb'](0, 255, 255));
                                escapes['setPadding'](10, 3, 3, 3);
                                escapes['setTextSize'](15);
                                escapes['setBackground'](module);
                                escapes['getBackground']()['setAlpha'](120);
                                escapes['setChecked'](escapeed);
                                escapes['setOnCheckedChangeListener'](new android['widget']['CompoundButton'].OnCheckedChangeListener({
                                    onCheckedChanged: function() {
                                        if (!escapeed) {
                                            showEscapeBtn();
                                            escapeed = true
escapes['setBackground'](bg);
                                        } else {
                                            GUIs['dismiss']();
                                            escapeed = false
escapes['setBackground'](module);
                                        };
                                        escapes['setChecked'](escapeed)
                                    }
                                }));
                                _0x2bf6x147['addView'](escapes);                                
                                menu1 = new PopupWindow(_0x2bf6x149, ctx['getWindowManager']()['getDefaultDisplay']()['getWidth']() / 4, ctx['getWindowManager']()['getDefaultDisplay']()['getHeight']());
                                menu1['setAnimationStyle'](android['R']['style'].Animation_InputMethod);
                                menu1['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['LEFT'] | Gravity['TOP'], 0, 0)
                            } catch (error) {
                                Toast['makeText'](ctx, 'Flqme Error: ' + error, 1)['show']()
                            }
                        }
                    }))
                }
                                                                                               
                menu = new PopupWindow(_0x2bf6x149, ctx['getWindowManager']()['getDefaultDisplay']()['getWidth']() / 5, ctx['getWindowManager']()['getDefaultDisplay']()['getHeight']()/1);
                menu['setAnimationStyle'](android['R']['style'].Animation_InputMethod);
                menu['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['LEFT'] | Gravity['TOP'], 0, 0)
            } catch (error) {
                Toast['makeText'](ctx, 'Flqme Error: ' + error, 1)['show']()
            }
        }
    }))
}

function exit() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x15c = new LinearLayout(ctx);
                var _0x2bf6x15d = new Button(ctx);
                _0x2bf6x15d['setText']('X');
                _0x2bf6x15d['setTextColor'](Color['rgb'](0, 255, 210));
                _0x2bf6x15d['setTextSize'](15);
                _0x2bf6x15d['setBackground'](xbg);
                _0x2bf6x15d['getBackground']()['setAlpha'](150);
                _0x2bf6x15d['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        exitUI['dismiss']();
                        menu['dismiss']();
                        showMenuBtn()
                    }
                }));
                _0x2bf6x15c['addView'](_0x2bf6x15d);
                exitUI = new PopupWindow(_0x2bf6x15c, dip2px(40), dip2px(40));
                exitUI['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                exitUI['setAnimationStyle'](android['R']['style'].Animation_Translucent);
                exitUI['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['BOTTOM'], 0, 0)
            } catch (exception) {
                Toast['makeText'](ctx, exception, 1)['show']()
            }
        }
    }))
}

function exitcombat() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x15c = new LinearLayout(ctx);
                var _0x2bf6x15d = new Button(ctx);
                _0x2bf6x15d['setText']('X');
                _0x2bf6x15d['setTextColor'](Color['rgb'](0, 255, 210));
                _0x2bf6x15d['setTextSize'](15);
                _0x2bf6x15d['setBackground'](xbg);
                _0x2bf6x15d['getBackground']()['setAlpha'](150);
                _0x2bf6x15d['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        exitcombatUI['dismiss']();
                        menu1['dismiss']();
                        mainMenu();
                        exit()
                    }
                }));
                _0x2bf6x15c['addView'](_0x2bf6x15d);
                exitcombatUI = new PopupWindow(_0x2bf6x15c, dip2px(40), dip2px(40));
                exitcombatUI['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                exitcombatUI['setAnimationStyle'](android['R']['style'].Animation_Translucent);
                exitcombatUI['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['BOTTOM'], 0, 0)
            } catch (exception) {
                Toast['makeText'](ctx, exception, 1)['show']()
            }
        }
    }))
}

function exitmotion() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x15c = new LinearLayout(ctx);
                var _0x2bf6x15d = new Button(ctx);
                _0x2bf6x15d['setText']('X');
                _0x2bf6x15d['setTextColor'](Color['rgb'](0, 255,210));
                _0x2bf6x15d['setTextSize'](15);
                _0x2bf6x15d['setBackground'](xbg);
                _0x2bf6x15d['getBackground']()['setAlpha'](150);
                _0x2bf6x15d['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        exitmotionUI['dismiss']();
                        menu2['dismiss']();
                        mainMenu();
                        exit()
                    }
                }));
                _0x2bf6x15c['addView'](_0x2bf6x15d);
                exitmotionUI = new PopupWindow(_0x2bf6x15c, dip2px(40), dip2px(40));
                exitmotionUI['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                exitmotionUI['setAnimationStyle'](android['R']['style'].Animation_Translucent);
                exitmotionUI['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['BOTTOM'], 0, 0)
            } catch (exception) {
                Toast['makeText'](ctx, exception, 1)['show']()
            }
        }
    }))
}

function exitplayer() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x15c = new LinearLayout(ctx);
                var _0x2bf6x15d = new Button(ctx);
                _0x2bf6x15d['setText']('X');
                _0x2bf6x15d['setTextColor'](Color['rgb'](0, 255, 210));
                _0x2bf6x15d['setTextSize'](15);
                _0x2bf6x15d['setBackground'](xbg);
                _0x2bf6x15d['getBackground']()['setAlpha'](150);
                _0x2bf6x15d['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        exitplayerUI['dismiss']();
                        menu3['dismiss']();
                        mainMenu();
                        exit()
                    }
                }));
                _0x2bf6x15c['addView'](_0x2bf6x15d);
                exitplayerUI = new PopupWindow(_0x2bf6x15c, dip2px(40), dip2px(40));
                exitplayerUI['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                exitplayerUI['setAnimationStyle'](android['R']['style'].Animation_Translucent);
                exitplayerUI['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['BOTTOM'], 0, 0)
            } catch (exception) {
                Toast['makeText'](ctx, exception, 1)['show']()
            }
        }
    }))
}

function exitmisc() {
    ctx['runOnUiThread'](new Runnable({
        run: function() {
            try {
                var _0x2bf6x15c = new LinearLayout(ctx);
                var _0x2bf6x15d = new Button(ctx);
                _0x2bf6x15d['setText']('X');
                _0x2bf6x15d['setTextColor'](Color['rgb'](0, 255, 210));
                _0x2bf6x15d['setTextSize'](15);
                _0x2bf6x15d['setBackground'](xbg);
                _0x2bf6x15d['getBackground']()['setAlpha'](150);
                _0x2bf6x15d['setOnClickListener'](new View.OnClickListener({
                    onClick: function(_0x2bf6x132) {
                        exitmiscUI['dismiss']();
                        menu4['dismiss']();
                        mainMenu();
                        exit()
                    }
                }));
                _0x2bf6x15c['addView'](_0x2bf6x15d);
                exitmiscUI = new PopupWindow(_0x2bf6x15c, dip2px(40), dip2px(40));
                exitmiscUI['setBackgroundDrawable'](new ColorDrawable(Color.TRANSPARENT));
                exitmiscUI['setAnimationStyle'](android['R']['style'].Animation_Translucent);
                exitmiscUI['showAtLocation'](ctx['getWindow']()['getDecorView'](), Gravity['RIGHT'] | Gravity['BOTTOM'], 0, 0)
            } catch (exception) {
                Toast['makeText'](ctx, exception, 1)['show']()
            }
        }
    }))
}

function getNearestEntity(_0x2bf6x163) {
    var _0x2bf6x164 = Server['getAllPlayers']();
    var _0x2bf6x165 = _0x2bf6x163;
    var _0x2bf6x166 = null;
    for (var _0x2bf6x167 = 0; _0x2bf6x167 < _0x2bf6x164['length']; _0x2bf6x167++) {
        var _0x2bf6x28 = Entity['getX'](_0x2bf6x164[_0x2bf6x167]) - getPlayerX();
        var _0x2bf6x27 = Entity['getY'](_0x2bf6x164[_0x2bf6x167]) - getPlayerY();
        var _0x2bf6x29 = Entity['getZ'](_0x2bf6x164[_0x2bf6x167]) - getPlayerZ();
        var _0x2bf6x168 = Math['sqrt'](Math['pow'](_0x2bf6x28, 2) + Math['pow'](_0x2bf6x27, 2) + Math['pow'](_0x2bf6x29, 2));
        if (_0x2bf6x168 < _0x2bf6x165 && _0x2bf6x168 > 0 && Entity['getHealth'](_0x2bf6x164[_0x2bf6x167]) >= 1 && isNotTeam(_0x2bf6x166)) {
            _0x2bf6x165 = _0x2bf6x168;
            _0x2bf6x166 = _0x2bf6x164[_0x2bf6x167]
        }
    };
    if (isNotTeam(_0x2bf6x166)) {
        return _0x2bf6x166
    }
}

function nearArrow(_0x2bf6x16a) {
    var _0x2bf6x16b = Entity['getAll']();
    var _0x2bf6x165 = _0x2bf6x16a;
    var _0x2bf6x166 = null;
    for (var _0x2bf6x167 = 0; _0x2bf6x167 < _0x2bf6x16b['length']; _0x2bf6x167++) {
        var _0x2bf6x28 = Entity['getX'](_0x2bf6x16b[_0x2bf6x167]) - getPlayerX();
        var _0x2bf6x27 = Entity['getY'](_0x2bf6x16b[_0x2bf6x167]) - getPlayerY();
        var _0x2bf6x29 = Entity['getZ'](_0x2bf6x16b[_0x2bf6x167]) - getPlayerZ();
        var _0x2bf6x168 = Math['sqrt'](Math['pow'](_0x2bf6x28, 2) + Math['pow'](_0x2bf6x27, 2) + Math['pow'](_0x2bf6x29, 2));
        if (_0x2bf6x168 < _0x2bf6x165 && _0x2bf6x168 > 0) {
            _0x2bf6x165 = _0x2bf6x168;
            _0x2bf6x166 = _0x2bf6x16b[_0x2bf6x167]
        }
    };
    return _0x2bf6x166
}

function removeColors(_0x2bf6x25) {
    var _0x2bf6x16d = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'k', 'l', 'm', 'n', 'o', 'r'];
    if (_0x2bf6x25 != null) {
        _0x2bf6x16d['forEach'](function(_0x2bf6x16e) {
            _0x2bf6x25 = _0x2bf6x25['replace'](new RegExp('\xA7' + _0x2bf6x16e, 'g'), '')
        });
        return _0x2bf6x25
    } else {
        return ''
    }
}

function isNotTeam(_0x2bf6x166) {
    var _0x2bf6x170 = true;
    for (i = 0; i < team['length']; i++) {
        var _0x2bf6x171 = removeColors(Entity['getNameTag'](_0x2bf6x166));
        if (_0x2bf6x171 == team[i]) {
            _0x2bf6x170 = false
        }
    };
    return _0x2bf6x170
}

function aimAtEnt(_0x2bf6x166, _0x2bf6x173) {
    if (_0x2bf6x166 != null) {
        var _0x2bf6x174 = Entity['getX'](_0x2bf6x166) - getPlayerX();
        var _0x2bf6x175 = Entity['getY'](_0x2bf6x166) - getPlayerY();
        var _0x2bf6x176 = Entity['getZ'](_0x2bf6x166) - getPlayerZ();
        if (_0x2bf6x173 != null && posinstanceofArray) {
            _0x2bf6x174 = Entity['getX'](_0x2bf6x166) - _0x2bf6x173[0];
            _0x2bf6x175 = Entity['getY'](_0x2bf6x166) - _0x2bf6x173[1];
            _0x2bf6x176 = Entity['getZ'](_0x2bf6x166) - _0x2bf6x173[2]
        };
        var _0x2bf6x177 = '63';
        if (Entity['getEntityTypeId'](_0x2bf6x166) != _0x2bf6x177) {
            _0x2bf6x175 += 0.5
        };
        var _0x2bf6x178 = Entity['getX'](_0x2bf6x166) + 0.5;
        var _0x2bf6x179 = Entity['getY'](_0x2bf6x166);
        var _0x2bf6x17a = Entity['getZ'](_0x2bf6x166) + 0.5;
        var _0x2bf6x17b = Math['sqrt'](_0x2bf6x174 * _0x2bf6x174 + _0x2bf6x175 * _0x2bf6x175 + _0x2bf6x176 * _0x2bf6x176);
        var _0x2bf6x175 = _0x2bf6x175 / _0x2bf6x17b;
        var _0x2bf6x17c = Math['asin'](_0x2bf6x175);
        _0x2bf6x17c = _0x2bf6x17c * 180.0 / Math['PI'];
        _0x2bf6x17c = -_0x2bf6x17c;
        var _0x2bf6x17d = -Math['atan2'](_0x2bf6x178 - (Player['getX']() + 0.5), _0x2bf6x17a - (Player['getZ']() + 0.5)) * (180 / Math['PI']);
        if (_0x2bf6x17c < 89 && _0x2bf6x17c > -89) {
            Entity['setRot'](Player['getEntity'](), _0x2bf6x17d, _0x2bf6x17c)
        }
    }
}

function bowAimAt(_0x2bf6x166) {
    var _0x2bf6x17f = 1;
    var _0x2bf6x180 = Entity['getX'](_0x2bf6x166) - Player['getX']();
    var _0x2bf6x181 = Entity['getEntityTypeId'](_0x2bf6x166) == EntityType['PLAYER'] ? Entity['getY'](_0x2bf6x166) - Player['getY']() : Entity['getY'](_0x2bf6x166) + 1 - Player['getY']();
    var _0x2bf6x182 = Entity['getZ'](_0x2bf6x166) - Player['getZ']();
    var _0x2bf6x17d = (Math['atan2'](_0x2bf6x182, _0x2bf6x180) * 180 / Math['PI']) - 90;
    var _0x2bf6x183 = Math['sqrt'](_0x2bf6x180 * _0x2bf6x180 + _0x2bf6x182 * _0x2bf6x182);
    var _0x2bf6x184 = 0.007;
    var _0x2bf6x185 = (_0x2bf6x17f * _0x2bf6x17f * _0x2bf6x17f * _0x2bf6x17f - _0x2bf6x184 * (_0x2bf6x184 * (_0x2bf6x183 * _0x2bf6x183) + 2 * _0x2bf6x181 * (_0x2bf6x17f * _0x2bf6x17f)));
    var _0x2bf6x17c = -(180 / Math['PI']) * (Math['atan']((_0x2bf6x17f * _0x2bf6x17f - Math['sqrt'](_0x2bf6x185)) / (_0x2bf6x184 * _0x2bf6x183)));
    if (_0x2bf6x17c < 89 && _0x2bf6x17c > -89) {
        setRot(Player['getEntity'](), _0x2bf6x17d, _0x2bf6x17c)
    }
}

function entityHurtHook(_0x2bf6x187, _0x2bf6x188, _0x2bf6x189) {
    if (antikbss) {
        return;
        Entity['setImmobile'](getPlayerEnt, true);
        kbTick = 1
    }
}

function toDirectionalVector(_0x2bf6x18b, _0x2bf6x18c, _0x2bf6x18d) {
    _0x2bf6x18b[0] = Math['cos'](_0x2bf6x18c) * Math['cos'](_0x2bf6x18d);
    _0x2bf6x18b[1] = Math['sin'](_0x2bf6x18d);
    _0x2bf6x18b[2] = Math['sin'](_0x2bf6x18c) * Math['cos'](_0x2bf6x18d)
}

function attackHook(_0x2bf6x187, _0x2bf6x188) {
    if (_0x2bf6x187 == Player['getEntity']() && grappless && Entity['getHealth'](_0x2bf6x188) > 0) {
        setPosition(getPlayerEnt(), Entity['getX'](_0x2bf6x188), Entity['getY'](_0x2bf6x188), Entity['getZ'](_0x2bf6x188))
    };
    if (_0x2bf6x187 == Player['getEntity']() && criticales && Entity['getHealth'](_0x2bf6x188) > 0) {
        if (critTick >= 13) {
            critTick = 0
        }
    };
if(_0x2bf6x187 == Player.getEntity() && bypasshitboxs && Entity.getHealth(_0x2bf6x188) > 0) {
Entity.setCollisionSize(_0x2bf6x188, 10, 30);
}
    if (_0x2bf6x187 == Player['getEntity']() && hitjumpss && Utils['Player']['isOnGround']()) {
        setVelY(getPlayerEnt(), 0.4)
    };
    if (_0x2bf6x187 == Player['getEntity']() && firepunchss) {
        var _0x2bf6x18f = Entity['getX'](_0x2bf6x188);
        var _0x2bf6x190 = Entity['getY'](_0x2bf6x188);
        var _0x2bf6x191 = Entity['getZ'](_0x2bf6x188);
        Level['addParticle'](ParticleType['lava'], _0x2bf6x18f - 0.2, _0x2bf6x190 + 1, _0x2bf6x191, 0, 0, 0, 180);
        Level['addParticle'](ParticleType['flame'], _0x2bf6x18f - 0.2, _0x2bf6x190 + 1, _0x2bf6x191, 0, 0, 0, 400);
        Entity['setFireTicks'](_0x2bf6x188, 999)
    };
    if (_0x2bf6x187 == Player['getEntity']() && behindhitss) {
        var _0x2bf6x192 = getYaw() + 90;
        var _0x2bf6x193 = getPitch() - 180;
        x = Math['cos'](_0x2bf6x192 * (Math['PI'] / 180));
        y = Math['sin'](_0x2bf6x193 * (Math['PI'] / 180));
        z = Math['sin'](_0x2bf6x192 * (Math['PI'] / 180));
        setVelX(Player['getEntity'](), x * 1);
        setVelY(Player['getEntity'](), y * 1);
        setVelZ(Player['getEntity'](), z * 1)
    }
}

function destroyBlock(_0x2bf6x28, _0x2bf6x27, _0x2bf6x29, _0x2bf6x195) {
    if (forcedestroyss && getTile(_0x2bf6x28, _0x2bf6x27, _0x2bf6x29) != 0) {
        Level['setTile'](_0x2bf6x28, _0x2bf6x27, _0x2bf6x29, 0, 0)
    }
}

function useItem(_0x2bf6x28, _0x2bf6x27, _0x2bf6x29, _0x2bf6x197, _0x2bf6x198, _0x2bf6x195, _0x2bf6x199, _0x2bf6x19a) {
    if (tapjumpss) {
        setVelY(getPlayerEnt(), 0.4)
    };
    if (taptpss && getTile(_0x2bf6x28, _0x2bf6x27 + 1, _0x2bf6x29) == 0 && getTile(_0x2bf6x28, _0x2bf6x27 + 2, _0x2bf6x29) == 0) {
        Entity['setPosition'](Player['getEntity'](), _0x2bf6x28 + 0.5, _0x2bf6x27 + 2.63, _0x2bf6x29 + 0.5)
    };
    if (placetpss) {
        if (_0x2bf6x195 == BlockFace['NORTH']) {
            Entity['setPositionRelative'](getPlayerEnt(), 0, 0, -1)
        } else {
            if (_0x2bf6x195 == BlockFace['SOUTH']) {
                Entity['setPositionRelative'](getPlayerEnt(), 0, 0, 1)
            } else {
                if (_0x2bf6x195 == BlockFace['WEST']) {
                    Entity['setPositionRelative'](getPlayerEnt(), -1, 0, 0)
                } else {
                    if (_0x2bf6x195 == BlockFace['EAST']) {
                        Entity['setPositionRelative'](getPlayerEnt(), 1, 0, 0)
                    } else {
                        if (_0x2bf6x195 == BlockFace['UP']) {
                            Entity['setPositionRelative'](getPlayerEnt(), 0, 1, 0)
                        }
                    }
                }
            }
        }
    };
    if (ghosthandss && Player['getCarriedItem']() == 0) {
        Level['setTile'](_0x2bf6x28, _0x2bf6x27, _0x2bf6x29, 0, 0);
        Level['setTile'](_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29, 0, 0)
    }
}

function modTick() {
    timer++;
    var _0x2bf6x19c = Player['getX']();
    var _0x2bf6x19d = Player['getY']();
    var _0x2bf6x19e = Player['getZ']();
    var _0x2bf6x28 = Player['getX']();
    var _0x2bf6x27 = Player['getY']();
    var _0x2bf6x29 = Player['getZ']();
    if (antikbss || Entity['getHealth'](getPlayerEnt()) <= 0) {
        if (kbTick >= 1) {
            kbTick--
        } else {
            Entity['setImmobile'](getPlayerEnt(), false)
        };
        if (kbHealth > Entity['getHealth'](getPlayerEnt())) {
            Entity['setImmobile'](getPlayerEnt(), true);
            kbTick = 1
        };
        kbTick = 0;
        kbHealth = Entity['getHealth'](getPlayerEnt())
    };
    if (ndglidess) {
        setVelY(getPlayerEnt(), 0.00000001)
    };
    if (reachss) {
        if (Level['getGameMode']() == 0) {
            Level['setGameMode'](1);
            Player['setCanFly'](false)
        }
    };
    if (stepss && Utils['Player']['isCollidedHorizontally']()) {
        Entity['setPositionRelative'](getPlayerEnt(), 0, 1.6, 0)
    };
    if (cstepss && Utils['Player']['isCollidedHorizontally']()) {
        setVelY(Player['getEntity'](), 0.6)
    };
    if (speedss && Utils['Player']['isOnGround']()) {
        setVelX(getPlayerEnt(), Entity['getVelX'](getPlayerEnt()) * 1.5);
        setVelZ(getPlayerEnt(), Entity['getVelZ'](getPlayerEnt()) * 1.5)
    };
    if (zoomspeedss) {
        setVelX(getPlayerEnt(), Entity['getVelX'](getPlayerEnt()) * 1.1);
        setVelZ(getPlayerEnt(), Entity['getVelZ'](getPlayerEnt()) * 1.1)
    };
    if (upglidess) {
        setVelY(getPlayerEnt(), 0.3)
    };
    if (criticaltrailsss) {
        Level['addParticle'](ParticleType['crit'], getPlayerX(), getPlayerY(), getPlayerZ(), 0, 0, 0, 10)
    };
    if (highjumpss) {
        if (Entity['getVelY'](getPlayerEnt()) < -0.1) {
            setVelY(getPlayerEnt(), -0.5)
        };
        if (Entity['getVelY'](getPlayerEnt()) < 0.35 && Entity['getVelY'](getPlayerEnt()) > 0.2 && can == 1 && canGetHP == 1) {
            setVelY(getPlayerEnt(), 0.6);
            can = 2;
            HP = Entity['getHealth'](getPlayerEnt());
            canGetHP = 0
        };
        if (Entity['getVelY'](getPlayerEnt()) > gravity && can == 2) {
            Player['setHealth'](HP);
            canGetHP = 1;
            can = 0

        };
        if (Entity['getVelY'](getPlayerEnt()) == gravity && can == 0) {
            Player['setHealth'](HP);
            canGetHP = 1;
            can = 1
        }
    };
    if (isDev == false && Entity['getNameTag'](getPlayerEnt()) == 'FirePro9978' || Entity['getNameTag'](getPlayerEnt()) == 'NNeBBuRR') {
        canBeDev = true
    };
    if (autowalkss) {
        var _0x2bf6x13a = [0, 0, 0];
        toDirectionalVector(_0x2bf6x13a, (getYaw() + 90) * Math['PI'] / 180, getPitch() * Math['PI'] / 180 * -1);
        setVelX(getPlayerEnt(), 0.4 * _0x2bf6x13a[0]);
        setVelZ(getPlayerEnt(), 0.4 * _0x2bf6x13a[2])
    };
    if (jetpackss) {
        var _0x2bf6x192 = getYaw() + 90;
        var _0x2bf6x193 = getPitch() - 180;
        _0x2bf6x28 = Math['cos'](_0x2bf6x192 * (Math['PI'] / 180));
        _0x2bf6x27 = Math['sin'](_0x2bf6x193 * (Math['PI'] / 180));
        _0x2bf6x29 = Math['sin'](_0x2bf6x192 * (Math['PI'] / 180));
        setVelX(Player['getEntity'](), _0x2bf6x28 * 1);
        setVelY(Player['getEntity'](), _0x2bf6x27 * 1);
        setVelZ(Player['getEntity'](), _0x2bf6x29 * 1)
    };
    if (cspeedss) {
        if (Entity['isSneaking'](Player['getEntity']()) == true) {
            setVelY(getPlayerEnt(), -100.0);
            setVelX(getPlayerEnt(), Entity['getVelX'](getPlayerEnt()) * 1.7);
            setVelZ(getPlayerEnt(), Entity['getVelZ'](getPlayerEnt()) * 1.7)
        }
    };
    if (team[0] == null) {
        team['push']('FirePro9978');
        team['push']('iTzPurPle');
        team['push']('Affann');
        team['push']('Affannn');
        team['push']('NNeBBuRR');
        team['push']('QuinnMakkinje')
    };
    if (dolphinss && Utils['Player']['isInWater']()) {
        setVelY(getPlayerEnt(), 0.1)
    };
    if (solidliquidss) {
        Block['setShape'](8, null, null, null, null, null, null);
        Block['setShape'](9, null, null, null, null, null, null);
        Block['setShape'](10, null, null, null, null, null, null);
        Block['setShape'](11, null, null, null, null, null, null);
        Block['defineBlock'](8, 'Water', [
            ['still_water', 0]
        ], 8, true, 4);
        Block['defineBlock'](9, 'Stationary Water', [
            ['still_water', 0]
        ], 9, true, 4);
        Block['defineBlock'](10, 'Lava', [
            ['still_lava', 0]
        ], 10, true, 4);
        Block['defineBlock'](11, 'Stationary Lava', [
            ['still_lava', 0]
        ], 11, true, 4)
    };
    if (wallhackss) {
        Entity['setCollisionSize'](Player['getEntity'](), 0, 0)
    };
    if (glidess) {
        setVelY(getPlayerEnt(), -glideSpeed)
    };
    if (dmgglidess) {
        setPosition(getPlayerEnt(), _0x2bf6x19c, _0x2bf6x19d + 0.19, _0x2bf6x19e);
        setVelY(getPlayerEnt(), -0.3)
    };
    if (criticales && critTick < 22) {
        critTick++;
        if (critTick == 13) {
            Entity['setPositionRelative'](getPlayerEnt(), 0, 2, 0)
        };
        if (critTick == 12) {
            criticalTick = 12
        };
        if (criticalTick > 0) {
            criticalTick--;
            setVelY(getPlayerEnt(), -0.2)
        }
    };
if (hitboxs) {
ent = getNearestEntity(7);
Entity.setCollisionSize(ent, 7.3, 10);
   }
if (mineplexflys) { Player['setCanFly'](true);
        Player['setFlying'](true) };
if (mineplexflys) {
       setVelY(getPlayerEnt(), -0.007);
   }
if (inpvpflys) {
        setPosition(getPlayerEnt(), _0x2bf6x19c, _0x2bf6x19d + 0.19, _0x2bf6x19e);
        setVelY(getPlayerEnt(), -0.2)
    };
    if (autoswordss) {
        var _0x2bf6x19f = 0;
        var _0x2bf6x1a0 = Player['getInventorySlot'](_0x2bf6x19f);
        if (_0x2bf6x1a0 == 276 || _0x2bf6x1a0 == 268 || _0x2bf6x1a0 == 283 || _0x2bf6x1a0 == 267 || _0x2bf6x1a0 == 272) {
            var _0x2bf6x1a1 = _0x2bf6x19f
        } else {
            _0x2bf6x19f++
        };
        if (_0x2bf6x19f = 27) {
            _0x2bf6x19f = 0
        };
        var _0x2bf6x166 = getNearestEntity(7);
        if (_0x2bf6x166 != null && Player['getName'](_0x2bf6x166) != '' && Player['getName'](_0x2bf6x166) != ' ' && Player['getName'](_0x2bf6x166) != '  ' && isNotTeam(_0x2bf6x166)) {
            Player['setSelectedSlotId'](_0x2bf6x1a1)
        }
    };
    if (jumpspeedss && Utils['Player']['isOnGround']()) {
        setVelY(getPlayerEnt(), 0.2);
        setVelX(getPlayerEnt(), Entity['getVelX'](getPlayerEnt()) * 1.7);
        setVelZ(getPlayerEnt(), Entity['getVelZ'](getPlayerEnt()) * 1.7)
    };
    if (bypassglidess) {
        bgtick++;
        if (Entity['getVelY'](getPlayerEnt()) < 1) {
            setVelY(Player['getEntity'](), -0.2);
            if (bgtick == 8) {
                setVelY(getPlayerEnt(), -0.5);
                setVelX(getPlayerEnt(), 0);
                setVelZ(getPlayerEnt(), 0);
                bgtick = 0
            }
        }
    };
    if (longhopss && Utils['Player']['isOnGround']()) {
        lhtick++;
        if (lhtick >= 8) {
            lhtick = 0
        };
        if (Utils['Velocity']['calculateSpeed']() >= 0.106 && lhtick == 0) {
            var _0x2bf6x13a = [0, 0, 0];
            toDirectionalVector(_0x2bf6x13a, (getYaw() + 90) * Math['PI'] / 180, getPitch() * Math['PI'] / 180 * -1);
            setVelX(getPlayerEnt(), _0x2bf6x13a[0]);
            setVelY(getPlayerEnt(), 0.45);
            setVelZ(getPlayerEnt(), _0x2bf6x13a[2])
        } else {
            if (Utils['Velocity']['calculateSpeed']() <= 0.105 && lhtick == 0) {
                setVelX(getPlayerEnt(), 0);
                setVelZ(getPlayerEnt(), 0)
            }
        }
    };
    if (autoclimbss && Utils['Player']['isOnLadder']()) {
        setVelY(getPlayerEnt(), acspd)
    };
    if (sglidess) {
        Entity['setVelY'](getPlayerEnt(), -0.500);
        setVelX(getPlayerEnt(), Entity['getVelX'](getPlayerEnt()) * 1.2);
        setVelZ(getPlayerEnt(), Entity['getVelZ'](getPlayerEnt()) * 1.2)
    };
    if (fastbreakss) {
        Utils['Block']['fastBreak']()
    };
    if (fullbrightss) {
        Block['setLightLevel'](0, 15)
    };
    if (timer % 5 == 0 && Utils['Player']['isOnGround']()) {
        fallbackX = Player['getX']();
        fallbackY = Player['getY']();
        fallbackZ = Player['getZ']()
    };
    if (timer % 2 == 0 && Utils['Player']['isOnGround']()) {
        regenX = Player['getX']();
        regenZ = Player['getX']()
    };
    if (fallbackss) {
        var _0x2bf6x1a2 = Player['getX']();
        var _0x2bf6x1a3 = Player['getY']();
        var _0x2bf6x1a4 = Player['getZ']();
        if (fallbackY - 2 > _0x2bf6x1a3) {
            Entity['setPosition'](Player['getEntity'](), fallbackX, fallbackY, fallbackZ)
        }
    };
    if (fastfallss) {
        if (!Utils['Player']['isOnGround']() && Entity['getVelY'](getPlayerEnt()) <= -0.07840000092983246 || fallbackY - 2 > _0x2bf6x27) {
            setVelY(getPlayerEnt(), -100)
        }
    };
    if (regenerationss) {
        var _0x2bf6x1a2 = Player['getX']();
        var _0x2bf6x1a4 = Player['getZ']();
        if (Entity['getHealth'](getPlayerEnt()) != 20 && Player['getHunger']() == 20 && regenX == _0x2bf6x1a2 || regenZ == _0x2bf6x1a4) {
            ModPE['setGameSpeed'](120)
        } else {
            if (Entity['getHealth'](getPlayerEnt()) == 20 && regenX != _0x2bf6x1a2 || regenZ != _0x2bf6x1a4) {
                ModPE['setGameSpeed'](20)
            }
        }
    };
    if (sregenss) {
        ModPE['setGameSpeed'](120);
        Entity['setImmobile'](Player['getEntity'](), true)
    };
    if (lbsgspeedss) {
        ModPE['setGameSpeed'](30)
    };
    if (frostwalkerss) {
        var _0x2bf6x28 = Player['getX']();
        var _0x2bf6x27 = Player['getY']();
        var _0x2bf6x29 = Player['getZ']();
        if (getTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29) == 8) {
            setTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29, 79, 0)
        };
        if (getTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29) == 9) {
            setTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29, 79, 0)
        };
        if (getTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29) == 10) {
            setTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29, 4, 0)
        };
        if (getTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29) == 11) {
            setTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29, 4, 0)
        };
        if (getTile(_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29) == 8) {
            setTile(_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29, 79, 0);
            setPosition(getPlayerEnt(), _0x2bf6x28, _0x2bf6x27 + 1, _0x2bf6x29)
        };
        if (getTile(_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29) == 9) {
            setTile(_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29, 79, 0);
            setPosition(getPlayerEnt(), _0x2bf6x28, _0x2bf6x27 + 1, _0x2bf6x29)
        };
        if (getTile(_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29) == 10) {
            setTile(_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29, 4, 0);
            setPosition(getPlayerEnt(), _0x2bf6x28, _0x2bf6x27 + 1, _0x2bf6x29)
        };
        if (getTile(_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29) == 11) {
            setTile(_0x2bf6x28, _0x2bf6x27 - 1, _0x2bf6x29, 4, 0);
            setPosition(getPlayerEnt(), _0x2bf6x28, _0x2bf6x27 + 1, _0x2bf6x29)
        }
    };
    if (safewalkss) {
        Entity['setSneaking'](Player['getEntity'](), true)
    };
    if (scaffoldwalkss) {
        var _0x2bf6x28 = Player['getX']();
        var _0x2bf6x27 = Player['getY']();
        var _0x2bf6x29 = Player['getZ']();
        setTile(_0x2bf6x28, _0x2bf6x27 - 2, _0x2bf6x29, 87, 0)
    };
    if (arrowdodgess) {
        var _0x2bf6x1a5 = nearArrow(5);
        if (_0x2bf6x1a5 != null && Entity['getEntityTypeId'](_0x2bf6x1a5) == EntityType['ARROW']) {
            setPosition(getPlayerEnt(), _0x2bf6x28 + 0.5, _0x2bf6x27, _0x2bf6x29)
        }
    };
    if (bedbreakerss) {
        if (Player['getPointedBlockId']() == 26) {
            Level['destroyBlock'](Player['getPointedBlockX'](), Player['getPointedBlockY'](), Player['getPointedBlockZ'](), true)
        }
    };
    if (godmodes) {
        Player.setHealth(20);
    }
}

function chatHook(_0x2bf6x25) {
    var _0x2bf6x1a7 = _0x2bf6x25['split'](' ');
    var fct = '\xA7l\xA74[\xA7r\xA76Skiddy\xA7l\xA74\xA7l]\xA7r\xA76: ';
    if (_0x2bf6x25['charAt'](0) == '!') {
        preventDefault();
        com['mojang']['minecraftpe']['MainActivity']['currentMainActivity']['get']()['updateTextboxText']('')
    };
    if (_0x2bf6x1a7[0] == '!') {
        clientMessage(fct + 'Command not found. check the commands by typing !help <page>');
        preventDefault()
    };
    if (_0x2bf6x1a7[0] == '!help') {
        if (_0x2bf6x1a7[1] == '1' || _0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Help page: 1/5');
            clientMessage(fct + 'Available Commands: ');
            clientMessage(fct + '!help > Shows this kind of page > Usage: !help <page>');
            clientMessage(fct + '!glidespeed > Sets the glide speed when using the Glide module > Usage: !glidespeed <number> or default');
            clientMessage(fct + '!setfov > Sets the fov with the specified number > Usage: !setfov <number or default>');
            clientMessage(fct + '!setspeed > Sets your game speed with the specified number > Usage: !setspeed <number or default>');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] == '2') {
            clientMessage(fct + 'Help page: 2/5');
            clientMessage(fct + 'Available Commands: ');
            clientMessage(fct + '!gamemode > Sets your gamemode into the specified gamemode > Usage: !gamemode <number> or gamemode');
            clientMessage(fct + '!vclip > Teleports you with the chosen number/blocks Usage: !vclip <number, can use - like -3>');
            clientMessage(fct + '!team > Adds or removes Team-Mate on the given name > Usage: !team <add or remove> <nametag>');
            clientMessage(fct + '!teamlist > Shows your Team-Mates in chat > Usage: !teamlist');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] == '3') {
            clientMessage(fct + 'Help page: 3/5');
            clientMessage(fct + 'Available Commands: ');
            clientMessage(fct + '!spam > Sets the word in the chat when using Spam > Usage: !spam <word>');
            clientMessage(fct + 'spamdelay > Sets the delay when using Spam > Usage: !spamdelay <seconds>');
            clientMessage(fct + '!acspeed > Sets the Auto Climb speed > Usage: !acspeed <speed>');
            clientMessage(fct + '!nwrange > Sets the NearWarning range > Usage: !nwrange <range>');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] == '4') {
            clientMessage(fct + 'Help page: 4/5');
            clientMessage(fct + 'Available Commands: ');
            clientMessage(fct + '!freeze > Freezes yourself (you can still see whats going on > Usage: !freeze <on/off>');
            clientMessage(fct + '!info > Gives the info of client and its developers (and testers) > Usage: !info');
            clientMessage(fct + '!tp > Teleports to the given Coordinates > Usage: !tp <x> <y> <z>');
            clientMessage(fct + '!theme > Changes the theme > Usage: !theme <flqme/infqrno>');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] == '5') {
            clientMessage(fct + 'Help page: 5/5');
            clientMessage(fct + 'Available Commands: ');
            clientMessage(fct + '!search > Searches the given text > Usage: !search <text>');
            clientMessage(fct + '!fe > Force enchants the item in your hand > Usage: !fe <sword/bow/tool/armor>');
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!glidespeed') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a number next to a space in !glidespeed. Example: !glidespeed 5 will set the glide speed into 0.5');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null && _0x2bf6x1a7[1] != 'default') {
            glideSpeed = _0x2bf6x1a7[1] * 0.1;
            clientMessage(fct + 'Glide Speed is set into: ' + _0x2bf6x1a7[1] * 0.1);
            preventDefault()
        };
        if (_0x2bf6x1a7[1] == 'default') {
            glideSpeed = 0.3;
            clientMessage(fct + 'Glide Speed is set to default');
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!setfov') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a number next to a space in !setfov. Example: !setfov 15 will set the fov into 15');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null && _0x2bf6x1a7[1] != 'default') {
            ModPE['setFov'](_0x2bf6x1a7[1]);
            clientMessage(fct + 'Fov is set into: ' + _0x2bf6x1a7[1]);
            preventDefault()
        };
        if (_0x2bf6x1a7[1] == 'default') {
            ModPE['resetFov']();
            clientMessage(fct + 'Fov is set to default');
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!setspeed') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a number next to a space in !setspeed. Example: !setspeed 50 will set the game speed into 50');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null && _0x2bf6x1a7[1] != 'default') {
            ModPE['setGameSpeed'](_0x2bf6x1a7[1]);
            clientMessage(fct + 'Game speed is set into: ' + _0x2bf6x1a7[1]);
            preventDefault()
        };
        if (_0x2bf6x1a7[1] == 'default') {
            ModPE['setGameSpeed'](20);
            clientMessage(fct + 'Game Speed is set to default');
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!gamemode') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a gamemode or number next to !gamemode. Example: !gamemode creative or !gamemode 1 will set the gamemode to creative');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null) {
            var _0x2bf6x1a8;
            if (_0x2bf6x1a7[1] == '1') {
                _0x2bf6x1a8 = 1
            } else {
                if (_0x2bf6x1a7[1] == 'creative') {
                    _0x2bf6x1a8 = 1
                } else {
                    if (_0x2bf6x1a7[1] == '0') {
                        _0x2bf6x1a8 = 0
                    } else {
                        if (_0x2bf6x1a7[1] == 'survival') {
                            _0x2bf6x1a8 = 0
                        } else {
                            if (_0x2bf6x1a7[1] == '2') {
                                _0x2bf6x1a8 = 2
                            } else {
                                if (_0x2bf6x1a7[1] == 'adventure') {
                                    _0x2bf6x1a8 = 2
                                } else {
                                    if (_0x2bf6x1a7[1] == '3') {
                                        _0x2bf6x1a8 = 3
                                    } else {
                                        if (_0x2bf6x1a7[1] == 'spectator') {
                                            _0x2bf6x1a8 = 3
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            };
            Level['setGameMode'](_0x2bf6x1a8);
            clientMessage(fct + 'Game Mode is into: ' + _0x2bf6x1a7[1]);
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!vclip') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a number next to !vclip. Example: !vclip -5 will teleport you 5 blocks down');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null) {
            preventDefault();
            if (_0x2bf6x25['charAt'](8) == '-') {
                var _0x2bf6x1a9 = Utils['Text']['replaceAll']('-', '', _0x2bf6x1a7[1]);
                Entity['setPosition'](getPlayerEnt(), getPlayerX(), getPlayerY() - _0x2bf6x1a9, getPlayerZ());
                clientMessage(fct + 'Teleported ' + _0x2bf6x1a7[1] + ' blocks')
            } else {
                if (_0x2bf6x25['charAt'](8) != '-') {
                    Entity['setPositionRelative'](getPlayerEnt(), 0, +_0x2bf6x1a7[1], 0);
                    clientMessage(fct + 'Teleported ' + _0x2bf6x1a7[1] + ' blocks')
                }
            }
        }
    };
    if (_0x2bf6x1a7[0] == '!team') {
        if (_0x2bf6x1a7[1] == null || _0x2bf6x1a7[2] == null) {
            clientMessage(fct + 'Put a remove or add or list after !team and a name after it');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null && _0x2bf6x1a7[2] != null) {
            if (_0x2bf6x1a7[1] == 'add') {
                team['push'](_0x2bf6x1a7[2]);
                clientMessage(fct + 'Added ' + _0x2bf6x1a7[2] + ' to your Team-Mates')
            };
            preventDefault()
        };
        if (_0x2bf6x1a7[1] == 'remove' && _0x2bf6x1a7[2] != 'FirePro9978' && _0x2bf6x1a7[2] != 'iTzPurPle' && _0x2bf6x1a7[2] != 'Affann' && _0x2bf6x1a7[2] != 'Affannn' && _0x2bf6x1a7[2] != 'NNeBBuRR' && _0x2bf6x1a7[2] != 'QuinnMakkinje') {
            for (i = 0; i < team['length']; i++) {
                if (team[i] == _0x2bf6x1a7[2]) {
                    team['splice'](i, 1);
                    clientMessage(fct + 'Removed ' + _0x2bf6x1a7[2] + ' to your Team-Mates')
                }
            };
            if (_0x2bf6x1a7[2] == 'FirePro9978' || _0x2bf6x1a7[2] == 'iTzPurPle' || _0x2bf6x1a7[2] == 'Affann' || _0x2bf6x1a7[2] == 'Affannn' || _0x2bf6x1a7[2] == 'NNeBBuRR' || _0x2bf6x1a7[2] == 'QuinnMakkinje') {
                clientMessage(fct + 'You cant remove us ~Flqme Team')
            };
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!teamlist') {
        clientMessage(fct + 'List of Team-Mates: ' + team);
        preventDefault()
    };
    if (_0x2bf6x1a7[0] == '!spam') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a word (No sentence, sorry) next to a space in !spam. Example: !spam void will set the spam text into void');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null) {
            spamText = _0x2bf6x1a7[1];
            clientMessage(fct + 'Spam text is set into: ' + _0x2bf6x1a7[1]);
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!spamdelay') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a number next to a space in !spam. Example: !spam 3.5 will set the spam delay into 3.5 seconds');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null) {
            spamDelay = _0x2bf6x1a7[1] * 1000;
            if (_0x2bf6x1a7[1] == 1) {
                clientMessage(fct + 'Spam delay is set into: 1 Second');
                preventDefault()
            } else {
                clientMessage(fct + 'Spam delay is set into: ' + _0x2bf6x1a7[1] + ' Seconds');
                preventDefault()
            }
        }
    };
    if (_0x2bf6x1a7[0] == '!acspeed') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a number next to a space in !acspeed. Example: !acspeed 5 will set the Auto Climb speed into 5');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null) {
            acspd = _0x2bf6x1a7[1] * 0.1;
            clientMessage(fct + 'Auto Climb speed is set into: ' + _0x2bf6x1a7[1] * 0.1);
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!devMode') {
        if (canBeDev == true && Entity['getNameTag'](getPlayerEnt()) == 'FirePro9978' || Entity['getNameTag'](getPlayerEnt()) == 'NNeBBuRR') {
            isDev = true;
            preventDefault();
            fctoast('Developer Mode Enabled!')
        } else {
            ccrash();
            fctoast('You are trying to access Developer Mode. Crashing client...');
            preventDefault()
        }
    };
    if (_0x2bf6x1a7[0] == '!nwrange') {
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put a number next to a space in !nwrange. Example: !nwrange 10 will set the NearWarning range into 10');
            preventDefault()
        };
        if (_0x2bf6x1a7[1] != null) {
            nwrange = _0x2bf6x1a7[1];
            clientMessage(fct + 'NearWarning range is set into: ' + _0x2bf6x1a7[1]);
            preventDefault()
        }
    };
    if (leetspeakss) {
        if (_0x2bf6x25['charAt'](0) != '!' && _0x2bf6x25['charAt'](0) != '/') {
            Server['sendChat'](' ' + convertToLeet(_0x2bf6x25))
        };
        preventDefault();
        com['mojang']['minecraftpe']['MainActivity']['currentMainActivity']['get']()['updateTextboxText']('')
    };
    if (_0x2bf6x1a7[0] == '!freeze') {
        if (_0x2bf6x1a7[1] == 'on') {
            Entity['setImmobile'](getPlayerEnt(), true);
            clientMessage(fct + 'You are now frozen!')
        };
        if (_0x2bf6x1a7[1] == 'off') {
            Entity['setImmobile'](getPlayerEnt(), false);
            clientMessage(fct + 'You can move now!')
        };
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put on or off next to !freeze. Example: !freeze on will froze you until you type !freeze off')
        }
    };
    if (_0x2bf6x1a7[0] == '!info') {
        clientMessage(fct + 'FlqmeClient: Alpha 6');
        clientMessage(fct + 'Flqme made by FirePro9978');
        clientMessage(fct + 'Code Developers: NNeBBuRR, Hacker Lastaad, ArceusMatt, JohnMacroCraft');
        clientMessage(fct + 'Testers: MadMinerYT, AmayMask, Affann, iTzPurple, Smasher565, QuinnMakkinje, ImBannable, RealMCPvPER, KaosUlt, DinosaurusRex02');
        clientMessage(fct + 'Special Thanks to GodSoft029, Peacestorm, Apric0cks, NSITF MCPE, Pokey, SoloTroll and Purple xKai');
        clientMessage(fct + 'Contact us: Kik @FirePro9978, Email: coolpro9978@gmail.com');
        clientMessage(fct + 'Other Recommended Clients: Charged, GravePE, Nuke, Crimson, CyberZ, PokeyHack, Storm, NEB, SmashHaxPE, Flame, DragOP, Cloud, Xive, Hydom, Quvon, Vertex');
        fctoast('BehindHit and Escape idea was from Hacker Lastaad');
        fctoast('FallBack and CrouchSpeed Code was from NNeBBuRR')
    };
    if (_0x2bf6x1a7[0] == '!tp') {
        if (_0x2bf6x1a7[1] == null || _0x2bf6x1a7[2] == null || _0x2bf6x1a7[3] == null) {
            clientMessage(fct + 'Put coordinates next to !tp. Example: !tp 1 2 3 will teleport you to coordinates: x:1 y:2 z:3')
        };
        if (_0x2bf6x1a7[1] != null || _0x2bf6x1a7[2] != null || _0x2bf6x1a7[3] != null) {
            setPosition(getPlayerEnt(), _0x2bf6x1a7[1], _0x2bf6x1a7[2], _0x2bf6x1a7[3]);
            clientMessage(fct + 'Succesfully teleported to coordinates: X: ' + _0x2bf6x1a7[1] + ' Y: ' + _0x2bf6x1a7[2] + ' Z: ' + _0x2bf6x1a7[3])
        }
    };
    if (_0x2bf6x1a7[0] == '!theme') {
        if (_0x2bf6x1a7[1] == 'flqme') {
            theme = nbg;
            theme1 = mbg;
            module = nnbg;
            clientMessage(fct + 'Succesfully changed to Flqme Theme!')
        };
        if (_0x2bf6x1a7[1] == 'infqrno') {
            theme = iibg;
            theme1 = fbg;
            module = ibg;
            clientMessage(fct + 'Succesfully changed to Infqrno Theme!')
        };
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Themes available: flqme, infqrno')
        }
    };
    if (_0x2bf6x1a7[0] == '!search') {
        var _0x2bf6x1aa = _0x2bf6x1a7[1];
        ctx['runOnUiThread'](new java['lang'].Runnable({
            run: function() {
                var _0x2bf6x1ab = new android['webkit'].WebView(ctx);
                var _0x2bf6x1ac = _0x2bf6x1ab['getSettings']();
                _0x2bf6x1ac['setJavaScriptEnabled'](true);
                _0x2bf6x1ab['setWebChromeClient'](new android['webkit'].WebChromeClient());
                _0x2bf6x1ab['setWebViewClient'](new android['webkit'].WebViewClient());
                _0x2bf6x1ab['loadUrl']('https://www.google.de/#q=' + _0x2bf6x1aa);
                new android['app']['AlertDialog'].Builder(ctx)['setView'](_0x2bf6x1ab)['show']()
            }
        }))
    };
    if (_0x2bf6x1a7[0] == '!fe') {
        if (_0x2bf6x1a7[1] == 'sword') {
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.UNBREAKING, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.SHARPNESS, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.KNOCKBACK, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.FIRE_ASPECT, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.LOOTING, 15);
            clientMessage(fct + 'Force Enchanted Sword!')
        };
        if (_0x2bf6x1a7[1] == 'bow') {
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.UNBREAKING, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.POWER, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.INFINITY, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.FLAME, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.PUNCH, 15);
            clientMessage(fct + 'Force Enchanted Bow!')
        };
        if (_0x2bf6x1a7[1] == 'tool') {
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.UNBREAKING, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.FORTUNE, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.EFFICIENCY, 15);
            clientMessage(fct + 'Force Enchanted Tool!')
        };
        if (_0x2bf6x1a7[1] == 'armor') {
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.UNBREAKING, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.PROTECTION, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.FIRE_PROTECTION, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.PROJECTILE_PROTECTION, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.BLAST_PROTECTION, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.THORNS, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.DEPTH_STRIDER, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.AQUA_AFFINITY, 15);
            Player['enchant'](Player['getSelectedSlotId'](), Enchantment.FEATHER_FALLING, 15);
            clientMessage(fct + 'Force Enchanted Armor!')
        };
        if (_0x2bf6x1a7[1] == null) {
            clientMessage(fct + 'Put sword, bow, tool or armor next to !fe. Example: !fe sword will force enchant your sword')
        }
    }
}

function ccrash() {
    c1()
}

function c1() {
    ctx['runOnUiThread'](new java['lang'].Runnable({
        run: function() {
            new android['os'].Handler()['postDelayed'](new java['lang'].Runnable({
                run: function() {
                    c2()
                }
            }), 500)
        }
    }))
}

function c2() {
    ctx['runOnUiThread'](new java['lang'].Runnable({
        run: function() {
            new android['os'].Handler()['postDelayed'](new java['lang'].Runnable({
                run: function() {
                    crash()
                }
            }), 1000)
        }
    }))
}

function fctoast(_0x2bf6x25, _0x2bf6x1b1) {
    try {
        var ctx = com['mojang']['minecraftpe']['MainActivity']['currentMainActivity']['get']();
        ctx['runOnUiThread'](new java['lang'].Runnable({
            run: function() {
                var _0x2bf6x1b2 = android['widget']['Toast']['makeText'](com['mojang']['minecraftpe']['MainActivity']['currentMainActivity']['get'](), '' + _0x2bf6x25, android['widget']['Toast'].LENGTH_LONG);
                var _0x2bf6x130 = new android['widget'].LinearLayout(ctx);
                var _0x2bf6x1b3 = new android['widget'].TextView(ctx);
                if (_0x2bf6x1b1 == null) {
                    _0x2bf6x25 = 'SkiddyClient: ' + _0x2bf6x25
                } else {
                    _0x2bf6x25 = _0x2bf6x1b1 + ': ' + _0x2bf6x25
                };
                _0x2bf6x1b3['setText'](_0x2bf6x25);
                _0x2bf6x1b3['setGravity'](android['view']['Gravity'].CENTER);
                _0x2bf6x1b3['setTextSize'](15);
                _0x2bf6x1b3['setPadding'](10, 10, 10, 10);
                _0x2bf6x1b3['setTextColor'](android['graphics']['Color']['rgb'](0, 255, 210));
                var _0x2bf6x1b4 = new android['graphics']['drawable'].GradientDrawable();
                _0x2bf6x1b4['setColor'](android['graphics']['Color'].BLACK);
                _0x2bf6x1b4['setStroke'](5, android['graphics']['Color']['rgb'](0, 255, 210));
                _0x2bf6x130['addView'](_0x2bf6x1b3);
                _0x2bf6x130['setBackground'](_0x2bf6x1b4);
                _0x2bf6x130['getBackground']()['setAlpha'](150);
                _0x2bf6x1b2['setView'](_0x2bf6x130);
                _0x2bf6x1b2['show']()
            }
        }))
    } catch (e) {
        print(e)
    }
}

function convertToLeet(_0x2bf6x25) {
    var _0x2bf6x26 = _0x2bf6x25['toUpperCase']();
    var _0x2bf6x1b6 = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');
    var _0x2bf6x1b7 = new Array('4', '8', '(', '|}', '3', '|=', 'G', '|-|', '1', '_|', '|<', '|_', '|^|', 'N', '0', '|)', 'Q', 'R', '5', '7', '|_|', 'V', 'W', 'X', 'Y', 'Z');
    for (i = 0; i < _0x2bf6x1b6['length']; i++) {
        _0x2bf6x26 = Utils['Text']['replaceAll'](_0x2bf6x1b6[i], _0x2bf6x1b7[i], _0x2bf6x26)
    };
    return _0x2bf6x26
}

function rptask() {
    ctx['runOnUiThread'](new java['lang'].Runnable({
        run: function() {
            new android['os'].Handler()['postDelayed'](new java['lang'].Runnable({
                run: function() {
                    if (aimbotss) {
                        if (Level['getGameMode']() == 1) {
                            _0x2bf6x166 = getNearestEntity(9)
                        } else {
                            _0x2bf6x166 = getNearestEntity(7)
                        };
                        if (_0x2bf6x166 != null && Player['getName'](_0x2bf6x166) != '' && Player['getName'](_0x2bf6x166) != ' ' && Player['getName'](_0x2bf6x166) != '  ' && isNotTeam(_0x2bf6x166)) {
                            aimAtEnt(_0x2bf6x166)
                        }
                    };
                    if (aimassistss) {
                        var _0x2bf6x166 = Player['getPointedEntity']();
                        if (_0x2bf6x166 != null && Player['getName'](_0x2bf6x166) != '' && Player['getName'](_0x2bf6x166) != ' ' && Player['getName'](_0x2bf6x166) != '  ' && isNotTeam(_0x2bf6x166)) {
                            aimAtEnt(_0x2bf6x166)
                        }
                    };
                    if (backfacess) {
                        var _0x2bf6x1b9 = getPlayerEnt();
                        var _0x2bf6x18c = Math['floor'](Entity['getYaw'](_0x2bf6x1b9));
                        var _0x2bf6x18d = Math['floor'](Entity['getPitch'](_0x2bf6x1b9));
                        if (_0x2bf6x18d <= 189) {
                            Entity['setRot'](_0x2bf6x1b9, _0x2bf6x18c, 192)
                        }
                    };
                    if (twerkss) {
                        tCounter++;
                        if (tCounter == 6) {
                            Entity['setSneaking'](Player['getEntity'](), 1)
                        };
                        if (tCounter == 11) {
                            Entity['setSneaking'](Player['getEntity'](), 0);
                            tCounter = 1
                        }
                    };
                    if (derpss) {
                        var _0x2bf6x1b9 = getPlayerEnt();
                        var _0x2bf6x18c = Math['floor'](Entity['getYaw'](_0x2bf6x1b9));
                        var _0x2bf6x18d = Math['floor'](Entity['getPitch'](_0x2bf6x1b9));
                        Entity['setRot'](_0x2bf6x1b9, _0x2bf6x18c + 30, _0x2bf6x18d)
                    };
                    if (followss) {
                        var _0x2bf6x166 = getNearestEntity(15);
                        if (Utils['Player']['isOnGround']() && getPlayerY() - Entity['getY'](_0x2bf6x166) < -0.8) {
                            setVelY(getPlayerEnt(), 0.4)
                        };
                        if (isDev == true) {
                            var _0x2bf6x1ba = getPlayerX();
                            var _0x2bf6x1bb = getPlayerZ();
                            var _0x2bf6x1bc = Entity['getX'](_0x2bf6x166);
                            var _0x2bf6x1bd = Entity['getZ'](_0x2bf6x166);
                            var _0x2bf6x168 = Math['sqrt'](Math['pow'](_0x2bf6x1ba - _0x2bf6x1bc, 2) + Math['pow'](_0x2bf6x1bb - _0x2bf6x1bd, 2));
                            if (_0x2bf6x166 != null && Player['getName'](_0x2bf6x166) != '' && Player['getName'](_0x2bf6x166) != ' ' && Player['getName'](_0x2bf6x166) != '  ' && isNotTeam(_0x2bf6x166)) {
                                setVelX(getPlayerEnt(), -Math['max'](-0.25, Math['min'](0.25, ((_0x2bf6x1ba - _0x2bf6x1bc) / _0x2bf6x168) / 4)));
                                setVelZ(getPlayerEnt(), -Math['max'](-0.25, Math['min'](0.25, ((_0x2bf6x1bb - _0x2bf6x1bd) / _0x2bf6x168) / 4)))
                            }
                        } else {
                            var _0x2bf6x13a = [0, 0, 0];
                            toDirectionalVector(_0x2bf6x13a, (getYaw() + 90) * Math['PI'] / 180, getPitch() * Math['PI'] / 180 * -1);
                            if (_0x2bf6x166 != null && Player['getName'](_0x2bf6x166) != '' && Player['getName'](_0x2bf6x166) != ' ' && Player['getName'](_0x2bf6x166) != '  ' && isNotTeam(_0x2bf6x166)) {
                                setVelX(getPlayerEnt(), 0.3 * _0x2bf6x13a[0]);
                                setVelZ(getPlayerEnt(), 0.3 * _0x2bf6x13a[2]);
                                aimAtEnt(_0x2bf6x166)
                            }
                        }
                    };
                    if (sniperss) {
                        var _0x2bf6x166 = getNearestEntity(100);
                        if (_0x2bf6x166 != null && Player['getCarriedItem']() == 261 && Player['getName'](_0x2bf6x166) != '' && Player['getName'](_0x2bf6x166) != ' ' && Player['getName'](_0x2bf6x166) != '  ' && isNotTeam(_0x2bf6x166)) {
                            bowAimAt(_0x2bf6x166);
                            ModPE['setFov'](13)
                        } else {
                            ModPE['resetFov']()
                        }
                    };
                    if (bowaimbotss && getCarriedItem() == 261) {
                        var _0x2bf6x166 = getNearestEntity(100);
                        if (_0x2bf6x166 != null && Player['getName'](_0x2bf6x166) != '' && Player['getName'](_0x2bf6x166) != ' ' && Player['getName'](_0x2bf6x166) != '  ' && isNotTeam(_0x2bf6x166)) {
                            bowAimAt(_0x2bf6x166)
                        }
                    };
                    nx = getPlayerX();
                    ny = getPlayerY();
                    nz = getPlayerZ();
                    eval(rptask())
                }
            }), 900 / 70)
        }
    }))
}
rptask();

function rptask2() {
    ctx['runOnUiThread'](new java['lang'].Runnable({
        run: function() {
            new android['os'].Handler()['postDelayed'](new java['lang'].Runnable({
                run: function() {
                    if (nearwarningss) {
                        var _0x2bf6x166 = getNearestEntity(nwrange);
                        if (_0x2bf6x166 != null && Player['getName'](_0x2bf6x166) != '' && Player['getName'](_0x2bf6x166) != ' ' && Player['getName'](_0x2bf6x166) != '  ' && isNotTeam(_0x2bf6x166)) {
                            var _0x2bf6x14a = removeColors(Entity['getNameTag'](_0x2bf6x166));
                            fctoast('\x0A' + _0x2bf6x14a + '\x0A' + 'x: ' + Math['floor'](Entity['getX'](_0x2bf6x166)) + '\x0A' + ' y: ' + Math['floor'](Entity['getY'](_0x2bf6x166)) + '\x0A' + ' z: ' + Math['floor'](Entity['getZ'](_0x2bf6x166)), 'NearWarning')
                        }
                    };
                    nx = getPlayerX();
                    ny = getPlayerY();
                    nz = getPlayerZ();
                    eval(rptask2())
                }
            }), 2500)
        }
    }))
}
rptask2();

function rptask3() {
    ctx['runOnUiThread'](new java['lang'].Runnable({
        run: function() {
            new android['os'].Handler()['postDelayed'](new java['lang'].Runnable({
                run: function() {
                    if (spamss) {
                        var _0x2bf6x1c0 = [' ', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
                        spamTime++;
                        ln++;
                        if (ln == 27) {
                            ln = 0
                        };
                        Server['sendChat'](_0x2bf6x1c0[ln] + '=' + spamTime + ' ' + spamText + ' ' + spamTime + '=' + _0x2bf6x1c0[ln])
                    };
                    nx = getPlayerX();
                    ny = getPlayerY();
                    nz = getPlayerZ();
                    eval(rptask3())
                }
            }), spamDelay)
        }
    }))
}
rptask3();