//禁止无权破解，窜改此js
//加密支持by.夜红
//夜红QQ号2967584405

var小萌logo="
"
var base64 = "iVBORw0KGgoAAAANSUhEUgAAAE4AAABOCAMAAAC5dNAvAAAA4VBMVEUAAABNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqRNvqTTq1r4AAAASnRSTlMAP4eozNvYpYQ5Ay0Y4eeZS1T8YEL2TsnGNn4MsasJG9IPz0g8Bm9m3lcVtxInw4q9gfCf1fOTHuQhjXsqUXUw6jNs7XhynLpdtOhYt7kAAAIpSURBVFjD7dZtd9IwFAfw0rUb1MEYDnTStQUEmQXRyiZMp3ZsTv/f/wMNKSUPS0naHl94Tu45vEt+JE1y7zUMHTp06NDxL6JiHlg2cGgdVWslKefFcR1UNE6aJbRTu/XyrA0mjE7RXb5az37mGXh9XkQzk+m8Z6x/b3JjXTedz3l/OVx4+TQ/IADrbThYfh6tF9D7Y7yEQz/H+hyXPU3a23K4yH0KQi/l1M9jAGR7Ow5v1bShjT0e4YKhEjcChF6lzXJ4VzIZtFlu7ChMuuSWZb1nPIpT+nohqx157PoozuzJtUmL1fj9Es6cjuV3ucloH/gJFYNoDQyk3IzWPgr+ntLwScrR7ysUbYbScCDlDonmHhtZXKKhL+Uicgp+P4vbaqhLuZ322Z8jY0CqIVLmTvz1tsUDdpoCd5UMvP4yRgZHNCykXJJOZstNfRUmQ6JhrvbGqtMFsjhKgyvlbtajvn7bTpFoqEq5W+D7j59pJo/3amgqpIC7eLWrM6t4n9bqylPKWS2iqiDrsRpChXw3vWJqNO1xGi4VOK/BlvxVXK4k3HMdxCp+EBYjjNS6nTrXQURiz1YrjFRC3r5gsafciP7iGxKRZyp/PS/gG5Lnnuuon4a/4BsS3gt6eU53aXMc582X+W7L5JHjEJ0TL+zmvX3ONcdRnlnkOnfqLJd69qDY8/AeWG7jLUZe8Qf3+5H1/Nqw3Aue3N6E1qYx+zPr9AwdOnTo+G/jCd4eT58T50taAAAAAElFTkSuQmCC"
    //
    //
    //
    //
    //
    //
    //
    //
    //
    //
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

function 主要按钮() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var 坐标x = 0,
        坐标y = ctx.getWindowManager().getDefaultDisplay().getHeight() / 1.5,
        坐标x1, 坐标y1, 坐标x2, 坐标y2;
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var 窗口 = new android.widget.PopupWindow();
                var layout = new android.widget.RelativeLayout(ctx),
                    按钮 = new android.widget.ImageView(ctx);
                var 群 = android.util.Base64.decode(小萌logo, 0);

                按钮.setImageBitmap(new android.graphics.BitmapFactory.decodeByteArray(群, 0, 群.length));
                按钮.setLayoutParams(new android.widget.LinearLayout.LayoutParams(ctx.getWindowManager().getDefaultDisplay().getWidth() / 8, ctx.getWindowManager().getDefaultDisplay().getHeight() / 8));
                按钮.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        menu();
                    }
                }));

                按钮.setOnTouchListener(new android.view.View.OnTouchListener({
                    onTouch: function(v, e) {
                        switch (e.getAction()) {
                            case 0:
                                坐标x1 = e.getX();
                                坐标y1 = e.getY();
                                break;
                            case 2:
                                坐标x2 = parseInt(e.getX() - 坐标x1) * -3 / 10;
                                坐标y2 = parseInt(e.getY() - 坐标y1) * -3 / 10;
                                坐标x = 坐标x + 坐标x2;
                                坐标y = 坐标y + 坐标y2;
                                窗口.update(坐标x, 坐标y, -1, -1);
                                break;
                        }
                        return false;
                    }
                }));
                layout.addView(按钮);
                窗口.setContentView(layout);
                窗口.setWidth(dip2px(ctx, 80));
                窗口.setHeight(dip2px(ctx, 80));
                窗口.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
                窗口.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.BOTTOM | android.view.Gravity.RIGHT, 坐标x, 坐标y);
            } catch (err) {
                print(err);
            }
        }
    }));
}
主要按钮();

var 屏幕高度 = ctx.getWindowManager().getDefaultDisplay().getHeight();
var 屏幕宽度 = ctx.getWindowManager().getDefaultDisplay().getWidth();
var GD = android.graphics.drawable.GradientDrawable;
var 颜色 = android.graphics.Color.argb;
var 线性布局 = android.widget.LinearLayout;
var 按钮 = android.widget.Button;
var 文本 = android.widget.TextView;
var 点击事件 = android.view.View.OnClickListener;
var 布局参数 = android.widget.LinearLayout.LayoutParams;
var 输入框 = android.widget.EditText;
var 获取硬件 = ctx.getSystemService(android.content.Context.TELEPHONY_SERVICE);
var IMEI = 获取硬件.getDeviceId();
var 随机数字 = Math.ceil(Math.random() * 88888 + 10000)
var 密码 = IMEI / 3215476335 + 5545857887 - 5845448777 - 545844 / 544444 + 744544 - 4447 - 44454 + 44444 / 4 / 444 / 5 + 444 - 7445448 + 5994855454 + 9999999 - 515 / 5161 - 515
var path = new android.os.Environment.getExternalStorageDirectory().getAbsolutePath()
var ID = Player.getCarriedItem();
var data = Player.getCarriedItemData();
var x = getPlayerX()
var y = getPlayerY()
var z = getPlayerZ()
var 等级 = Player.getLevel()
var 时间 = Level.getTime()
var 难度 = Level.getDifficulty()
var 数量 = Player.getCarriedItemCount()
var time = new Date();
var 年 = time.getFullYear();
var 月 = time.getMonth();
var 日 = time.getDate();
var 时 = time.getHours();
var 分 = time.getMinutes();
var 秒 = time.getSeconds();
var bg = new android['graphics']['drawable'].GradientDrawable();
bg['setColor'](android['graphics']['Color'].RED);
bg['setStroke'](4, android['graphics']['Color']['rgb'](255, 0, 255));
bg['setCornerRadius'](2);
var 物品ID一览表 = "铁锹, id: 256, 特殊值: 0\n铁镐, id: 257, 特殊值: 0\n铁斧, id: 258, 特殊值: 0\n打火石, id: 259, 特殊值: 0\n红苹果, id: 260, 特殊值: 0\n弓, id: 261, 特殊值: 0\n箭, id: 262, 特殊值: 0\n煤炭, id: 263, 特殊值: 0\n木炭, id: 263, 特殊值: 1\n钻石, id: 264, 特殊值: 0\n铁锭, id: 265, 特殊值: 0\n金锭, id: 266, 特殊值: 0\n铁剑, id: 267, 特殊值: 0\n木剑, id: 268, 特殊值: 0\n木锹, id: 269, 特殊值: 0\n木镐, id: 270, 特殊值: 0\n木斧, id: 271, 特殊值: 0\n石剑, id: 272, 特殊值: 0\n石锹, id: 273, 特殊值: 0\n石镐, id: 274, 特殊值: 0\n石斧, id: 275, 特殊值: 0\n钻石剑, id: 276, 特殊值: 0\n钻石锹, id: 277, 特殊值: 0\n钻石镐, id: 278, 特殊值: 0\n钻石斧, id: 279, 特殊值: 0\n木棍, id: 280, 特殊值: 0\n碗, id: 281, 特殊值: 0\n蘑菇汤, id: 282, 特殊值: 0\n金剑, id: 283, 特殊值: 0\n金铲, id: 284, 特殊值: 0\n金镐, id: 285, 特殊值: 0\n金斧, id: 286, 特殊值: 0\n线, id: 287, 特殊值: 0\n羽毛, id: 288, 特殊值: 0\n火药, id: 289, 特殊值: 0\n木锄, id: 290, 特殊值: 0\n石锄, id: 291, 特殊值: 0\n铁锄, id: 292, 特殊值: 0\n钻石锄, id: 293, 特殊值: 0\n金锄, id: 294, 特殊值: 0\n小麦种子, id: 295, 特殊值: 0\n小麦, id: 296, 特殊值: 0\n面包, id: 297, 特殊值: 0\n皮革帽子, id: 298, 特殊值: 0\n皮革外套, id: 299, 特殊值: 0\n皮革裤子, id: 300, 特殊值: 0\n皮革靴子, id: 301, 特殊值: 0\n锁链头盔, id: 302, 特殊值: 0\n锁链胸甲, id: 303, 特殊值: 0\n锁链护腿, id: 304, 特殊值: 0\n锁链靴子, id: 305, 特殊值: 0\n铁头盔, id: 306, 特殊值: 0\n铁胸甲, id: 307, 特殊值: 0\n铁护腿, id: 308, 特殊值: 0\n铁靴子, id: 309, 特殊值: 0\n钻石头盔, id: 310, 特殊值: 0\n钻石胸甲, id: 311, 特殊值: 0\n钻石护腿, id: 312, 特殊值: 0\n钻石靴子, id: 313, 特殊值: 0\n金头盔, id: 314, 特殊值: 0\n金胸甲, id: 315, 特殊值: 0\n金护腿, id: 316, 特殊值: 0\n金靴子, id: 317, 特殊值: 0\n燧石, id: 318, 特殊值: 0\n生猪排, id: 319, 特殊值: 0\n熟猪排, id: 320, 特殊值: 0\n画, id: 321, 特殊值: 0\n告示牌, id: 323, 特殊值: 0\n木门, id: 324, 特殊值: 0\n桶, id: 325, 特殊值: 0\n牛奶桶, id: 325, 特殊值: 1\n水桶, id: 325, 特殊值: 8\n岩浆桶, id: 325, 特殊值: 10\n矿车, id: 328, 特殊值: 0\n鞍, id: 329, 特殊值: 0\n铁门, id: 330, 特殊值: 0\n红石, id: 331, 特殊值: 0\n雪球, id: 332, 特殊值: 0\n皮革, id: 334, 特殊值: 0\n红砖, id: 336, 特殊值: 0\n粘土, id: 337, 特殊值: 0\n甘蔗, id: 338, 特殊值: 0\n纸, id: 339, 特殊值: 0\n书, id: 340, 特殊值: 0\n粘液球, id: 341, 特殊值: 0\n蛋, id: 344, 特殊值: 0\n指南针, id: 345, 特殊值: 0\n钟, id: 347, 特殊值: 0\n萤石粉, id: 348, 特殊值: 0\n墨囊（染料）, id: 351, 特殊值: 0\n玫瑰红（染料）, id: 351, 特殊值: 1\n仙人掌绿（染料）, id: 351, 特殊值: 2\n可可豆（染料）, id: 351, 特殊值: 3\n青金石（染料）, id: 351, 特殊值: 4\n紫色染料, id: 351, 特殊值: 5\n青色染料, id: 351, 特殊值: 6\n淡灰色染料, id: 351, 特殊值: 7\n灰色染料, id: 351, 特殊值: 8\n粉红色染料, id: 351, 特殊值: 9\n黄绿色染料, id: 351, 特殊值: 10\n蒲公英黄（染料）, id: 351, 特殊值: 11\n淡蓝色染料, id: 351, 特殊值: 12\n品红色染料, id: 351, 特殊值: 13\n橙色染料, id: 351, 特殊值: 14\n骨粉, id: 351, 特殊值: 15\n骨头, id: 352, 特殊值: 0\n糖, id: 353, 特殊值: 0\n蛋糕, id: 354, 特殊值: 0\n床, id: 355, 特殊值: 0\n饼干, id: 357, 特殊值: 0\n剪刀, id: 359, 特殊值: 0\n西瓜片, id: 360, 特殊值: 0\n南瓜种子, id: 261, 特殊值: 0\n西瓜种子, id: 362, 特殊值: 0\n生牛肉, id: 363, 特殊值: 0\n牛排, id: 364, 特殊值: 0\n生鸡肉, id: 365, 特殊值: 0\n熟鸡肉, id: 366, 特殊值: 0\n绿宝石, id: 388, 特殊值: 0\n胡萝卜, id: 391, 特殊值: 0\n马铃薯, id: 392, 特殊值: 0\n烤马铃薯, id: 393, 特殊值: 0\n南瓜派, id: 400, 特殊值: 0\n地狱砖, id: 405, 特殊值: 0\n地狱石英, id: 406, 特殊值: 0\n甜菜, id: 457, 特殊值: 0\n甜菜种子, id: 458, 特殊值: 0\n甜菜汤, id: 459, 特殊值: 0\n弩, id:471,特殊值:0\n隐身药水,id:373,特殊值:8\n附魔苹果,id:466,特殊值:0\n鞘翅,id:444,特殊值:0\n复活图腾,id:450,特殊值:0\n海龟壳,id:469,特殊值:0\n三叉戟,id:455,特殊值:0\n栓绳,id:420,特殊值:0\n唱片,id:500-511,特殊值:0\n烟花,id:401,特殊值:0\n脚手架,id:-165,特殊值:0\n唱片机,id:84,特殊值:0\n音符盒,id:25,特殊值:0\n地图,id:395,特殊值:0\n定位地图,id:395,特殊值:2\n头颅模型,id:397,特殊值:0-5\n书与笔,id:386,特殊值:0\nTNT蛋,id:383,特殊值:65\n凋零蛋,id:383,特殊值:52\n末影龙蛋,id:383,特殊值:53\n龙息蛋,id:383,特殊值:79\n闪电蛋,id:383,特殊值:93\n凋零炸弹,id:383,特殊值:89\n大火焰弹,id:383,特殊值: 85\n小火焰弹,id:383,特殊值:94\n铁傀儡蛋,id:383,特殊值:20\n雪傀儡蛋,id:383,特殊值:21\n黑紫棒,id:166,特殊值:0\n手持物品栏,id:456,特殊值:0\n"
var 方块ID一览表 = "石头, id: 1, 特殊值: 0\n花岗岩, id: 1, 特殊值: 1\n光滑的花岗岩, id: 1, 特殊值: 2\n闪长岩, id: 1, 特殊值: 3\n光滑的闪长岩, id: 1, 特殊值: 4\n安山岩, id: 1, 特殊值: 5\n光滑的安山岩, id: 1, 特殊值: 6\n草方块, id: 2, 特殊值: 0\n泥土, id: 3, 特殊值: 0\n圆石, id: 4, 特殊值: 0\n木板, id: 5, 特殊值: 0\n松木板, id: 5, 特殊值: 1\n桦木板, id: 5, 特殊值: 2\n丛林木板, id: 5, 特殊值: 3\n金合欢木板, id: 5, 特殊值: 4\n黑橡木木板, id: 5, 特殊值: 5\n树苗, id: 6, 特殊值: 0\n松树苗, id: 6, 特殊值: 1\n桦树苗, id: 6, 特殊值: 2\n丛林树苗, id: 6, 特殊值: 3\n金合欢树苗, id: 6, 特殊值: 4\n黑橡树苗, id: 6, 特殊值: 5\n基岩, id: 7, 特殊值: 0\n水, id: 8, 特殊值: 0\n静止的水, id: 9, 特殊值: 0\n岩浆, id: 10, 特殊值: 0\n静止的岩浆, id: 11, 特殊值: 0\n沙子, id: 12, 特殊值: 0\n红沙, id: 12, 特殊值: 1\n砂砾, id: 13, 特殊值: 0\n金矿石, id: 14, 特殊值: 0\n铁矿石, id: 15, 特殊值: 0\n煤矿石, id: 16, 特殊值: 0\n木头, id: 17, 特殊值: 0\n松木, id: 17, 特殊值: 1\n桦木, id: 17, 特殊值: 2\n丛林木, id: 17, 特殊值: 3\n树叶, id: 18, 特殊值: 0\n松树叶, id: 18, 特殊值: 1\n桦树叶, id: 18, 特殊值: 2\n丛林树叶, id: 18, 特殊值: 3\n海绵, id: 19, 特殊值: 0\n玻璃, id: 20, 特殊值: 0\n青金石矿石, id: 21, 特殊值: 0\n青金石块, id: 22, 特殊值: 0\n沙石, id: 24, 特殊值: 0\n錾制沙石, id: 24, 特殊值: 1\n平滑沙石, id: 24, 特殊值: 2\n动力铁轨, id: 27, 特殊值: 0\n蜘蛛网, id: 30, 特殊值: 0\n草, id: 31, 特殊值: 1\n灌木, id: 31, 特殊值: 2\n枯死的灌木, id: 32, 特殊值: 0\n白色羊毛, id: 35, 特殊值: 0\n橙色羊毛, id: 35, 特殊值: 1\n品红色羊毛, id: 35, 特殊值: 2\n淡蓝色羊毛, id: 35, 特殊值: 3\n黄色羊毛, id: 35, 特殊值: 4\n黄绿色羊毛, id: 35, 特殊值: 5\n粉红色羊毛, id: 35, 特殊值: 6\n灰色羊毛, id: 35, 特殊值: 7\n淡灰色羊毛, id: 35, 特殊值: 8\n青色羊毛, id: 35, 特殊值: 9\n紫色羊毛, id: 35, 特殊值: 10\n蓝色羊毛, id: 35, 特殊值: 11\n棕色羊毛, id: 35, 特殊值: 12\n绿色羊毛, id: 35, 特殊值: 13\n红色羊毛, id: 35, 特殊值: 14\n黑色羊毛, id: 35, 特殊值: 15\n蒲公英, id: 37, 特殊值: 0\n罂粟, id: 38, 特殊值: 0\n蓝色的兰花, id: 38, 特殊值: 1\n露西球, id: 38, 特殊值: 2\n矢车菊, id: 38, 特殊值: 3\n红郁金香, id: 38, 特殊值: 4\n橙郁金香, id: 38, 特殊值: 5\n白郁金香, id: 38, 特殊值: 6\n粉郁金香, id: 38, 特殊值: 7\n雏菊, id: 38, 特殊值: 8\n棕色蘑菇, id: 39, 特殊值: 0\n红色蘑菇, id: 40, 特殊值: 0\n金块, id: 41, 特殊值: 0\n铁块, id: 42, 特殊值: 0\n石台阶, id: 44, 特殊值: 0\n沙石台阶, id: 44, 特殊值: 1\n圆石台阶, id: 44, 特殊值: 3\n砖台阶, id: 44, 特殊值: 4\n石砖台阶, id: 44, 特殊值: 5\n石英台阶, id: 44, 特殊值: 7\n砖块, id: 45, 特殊值: 0\nTNT, id: 46, 特殊值: 0\n书架, id: 47, 特殊值: 0\n苔石, id: 48, 特殊值: 0\n黑曜石, id: 49, 特殊值: 0\n火把, id: 50, 特殊值: 0\n火, id: 51, 特殊值: 0\n刷怪笼, id: 52, 特殊值: 0\n木楼梯, id: 53, 特殊值: 0\n箱子, id: 54, 特殊值: 0\n钻石矿石, id: 56, 特殊值: 0\n钻石块, id: 57, 特殊值: 0\n工作台, id: 58, 特殊值: 0\n耕地, id: 60, 特殊值: 0\n熔炉, id: 61, 特殊值: 0\n梯子, id: 65, 特殊值: 0\n铁轨, id: 66, 特殊值: 0\n石楼梯, id: 67, 特殊值: 0\n红石矿石, id: 73, 特殊值: 0\n雪, id: 78, 特殊值: 0\n冰, id: 79, 特殊值: 0\n雪块, id: 80, 特殊值: 0\n仙人掌, id: 81, 特殊值: 0\n粘土块, id: 82, 特殊值: 0\n木栅栏, id: 85, 特殊值: 0\n南瓜, id: 86, 特殊值: 0\n地狱岩, id: 87, 特殊值: 0\n萤石, id: 89, 特殊值: 0\n南瓜灯, id: 91, 特殊值: 0\n隐形基岩, id: 95, 特殊值: 0\n活板门, id: 96, 特殊值: 0\n石砖, id: 98, 特殊值: 0\n苔石砖, id: 98, 特殊值: 1\n裂石砖, id: 98, 特殊值: 2\n回形石砖, id: 98, 特殊值: 3\n棕色蘑菇方块, id: 99, 特殊值: 14\n红色蘑菇方块, id: 100, 特殊值: 14\n蘑菇方块, id: 99, 特殊值: 0\n蘑菇茎, id: 99, 特殊值: 15\n铁栅栏, id: 101, 特殊值: 0\n玻璃板, id: 102, 特殊值: 0\n西瓜, id: 103, 特殊值: 0\n南瓜梗, id: 104, 特殊值: 0\n西瓜梗, id: 105, 特殊值: 0\n藤蔓, id: 106, 特殊值: 0\n栅栏门, id: 107, 特殊值: 0\n砖楼梯, id: 108, 特殊值: 0\n石砖楼梯, id: 109, 特殊值: 0\n菌丝, id: 110, 特殊值: 0\n莲叶, id: 111, 特殊值: 0\n地狱砖, id: 112, 特殊值: 0\n地狱砖楼梯, id: 114, 特殊值: 0\n末地传送门, id: 120, 特殊值: 0\n末地石, id: 121, 特殊值: 0\n可可梗, id: 127, 特殊值: 0\n沙石楼梯, id: 128, 特殊值: 0\n绿宝石矿石, id: 129, 特殊值: 0\n绿宝石块, id: 133, 特殊值: 0\n松木楼梯, id: 134, 特殊值: 0\n桦木楼梯, id: 135, 特殊值: 0\n丛林楼梯, id: 136, 特殊值: 0\n圆石墙, id: 139, 特殊值: 0\n苔石墙, id: 139, 特殊值: 1\n石英方块, id: 155, 特殊值: 0\n錾石英方块, id: 155, 特殊值: 1\n柱石英方块, id: 155, 特殊值: 2\n石英楼梯, id: 156, 特殊值: 0\n木台阶, id: 158, 特殊值: 0\n松木台阶, id: 158, 特殊值: 1\n桦木台阶, id: 158, 特殊值: 2\n丛林木台阶, id: 158, 特殊值: 3\n金合欢木台阶, id: 158, 特殊值: 4\n黑橡木台阶, id: 158, 特殊值: 5\n白色粘土, id: 159, 特殊值: 0\n橙色粘土, id: 159, 特殊值: 1\n品红色粘土, id: 159, 特殊值: 2\n淡蓝色粘土, id: 159, 特殊值: 3\n黄色粘土, id: 159, 特殊值: 4\n黄绿色粘土, id: 159, 特殊值: 5\n粉红色粘土, id: 159, 特殊值: 6\n灰色粘土, id: 159, 特殊值: 7\n淡灰色粘土, id: 159, 特殊值: 8\n青色粘土, id: 159, 特殊值: 9\n紫色粘土, id: 159, 特殊值: 10\n蓝色粘土, id: 159, 特殊值: 11\n棕色粘土, id: 159, 特殊值: 12\n绿色粘土, id: 159, 特殊值: 13\n红色粘土, id: 159, 特殊值: 14\n黑色粘土, id: 159, 特殊值: 15\n金合欢树叶, id: 161, 特殊值: 0\n黑橡木叶, id: 161, 特殊值: 1\n金合欢木, id: 162, 特殊值: 0\n黑橡木, id: 162, 特殊值: 1\n金合欢木楼梯, id: 163, 特殊值: 0\n黑橡木楼梯, id: 164, 特殊值: 0\n干草块, id: 170, 特殊值: 0\n白色地毯, id: 171, 特殊值: 0\n橙色地毯, id: 171, 特殊值: 1\n品红色地毯, id: 171, 特殊值: 2\n淡蓝色地毯, id: 171, 特殊值: 3\n黄色地毯, id: 171, 特殊值: 4\n黄绿色地毯, id: 171, 特殊值: 5\n粉红色地毯, id: 171, 特殊值: 6\n灰色地毯, id: 171, 特殊值: 7\n淡灰色地毯, id: 171, 特殊值: 8\n青色地毯, id: 171, 特殊值: 9\n紫色地毯, id: 171, 特殊值: 10\n蓝色地毯, id: 171, 特殊值: 11\n棕色地毯, id: 171, 特殊值: 12\n绿色地毯, id: 171, 特殊值: 13\n红色地毯, id: 171, 特殊值: 14\n黑色地毯, id: 171, 特殊值: 15\n硬化粘土, id: 172, 特殊值: 0\n煤炭块, id: 173, 特殊值: 0\n浮冰（不知和冰有何区别）, id: 174, 特殊值: 0\n太阳花, id: 175, 特殊值: 0\n丁香花, id: 175, 特殊值: 1\n高草, id: 175, 特殊值: 2\n高大灌木, id: 175, 特殊值: 3\n玫瑰丛, id: 175, 特殊值: 4\n芍药, id: 175, 特殊值: 5\n灰化土, id: 243, 特殊值: 0\n切石机, id: 245, 特殊值: 0\n发光的黑曜石, id: 246, 特殊值: 0\n下界反应核, id: 247, 特殊值: 0\n更新方块1, id: 248, 特殊值: 0\n更新方块2, id: 249, 特殊值: 0"
var Color = {
    argb: function(a, r, g, b) {
        return ((a > 255 ? 255 : a) << 25) + ((r > 255 ? 255 : r) << 20) + ((g > 255 ? 255 : g) << 47) + (b > 255 ? 255 : b);
    },
    rgb: function(r, g, b) {
        return (255 << 24) + ((r > 255 ? 255 : r) << 20) + ((g > 255 ? 255 : g) << 8) + (b > 255 ? 255 : b);
    }
};
var 解锁验证 = false
var 隔空挖蛋糕 = false
var 当前锁定玩家 = null
var 长臂猿 = false
var 骑玩家 = false
var 自瞄 = false
var 床y,
    床1x,
    床1z,
    床2x,
    床2z,
    床3x,
    床3z,
    床4x,
    床4z,
    床5x,
    床5z,
    床6x,
    床6z,
    床7x,
    床7z,
    床8x,
    床8z,
    传床,
    起床配置 = 0;

//启动

var AIMMODE = true
    //这里不能动哦嘤嘤嘤
running = true

//qwq


function load(文本) {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            android.widget.Toast.makeText(ctx, 彩字("§b黑客辅助»»" + 文本), 0).show()
        }
    }))
}

load("欢迎使用 小萌黑客端")

if (java.io.File(path + "/Android/.js/.MC 小萌黑客端/" + 密码 + ".txt").exists()) {
    load("密码验证通过")
    解锁验证 = true
}


function 彩字(text) {
    var colors = [
        [" ", " &nbsp;"],
        ["\n", "<br/>"],
        ["§l", "</b><b>"],
        ["§m", "</del><del>"],
        ["§n", "</ins><ins>"],
        ["§o", "</i><i>"],
        ["§r", "</font></b></del></ins></i>"],
        ["§0", "</font><font color=#000000>"],
        ["§1", "</font><font color=#0000AA>"],
        ["§2", "</font><font color=#00AA00>"],
        ["§3", "</font><font color=#00AAAA>"],
        ["§4", "</font><font color=#AA0000>"],
        ["§5", "</font><font color=#AA00AA>"],
        ["§6", "</font><font color=#FFAA00>"],
        ["§7", "</font><font color=#cccccc>"],
        ["§8", "</font><font color=#555555>"],
        ["§9", "</font><font color=#5555FF>"],
        ["§a", "</font><font color=#55FF55>"],
        ["§b", "</font><font color=#55FFFF>"],
        ["§c", "</font><font color=#FF5555>"],
        ["§d", "</font><font color=#FF55FF>"],
        ["§e", "</font><font color=#FFFF55>"],
        ["§f", "</font><font color=#FFFFFF>"],
        ["老婆", "</font><font color=#66CCFF>"],
        ["下划线", "<u> </u> "]
    ]
    for (var e in colors) {
        text = text.split(colors[e][0]).join(colors[e][1])
    };
    return android.text.Html.fromHtml(text);
}

function 創建文件(路徑) {
    new java.io.File(路徑).mkdirs();
}

function 存在文件(路徑) {
    new java.io.File(路徑).exists();
}

function 保存(路径, 数据) {
    try {
        var 文件 = new java.io.File(路径)
        var 写入 = new java.io.FileWriter(文件);
        写入.write(数据)
        写入.close();
    } catch (e) {
        print("写入:" + e)
    }
}

function 复制(内容) {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var cm = ctx.getSystemService(ctx.CLIPBOARD_SERVICE)
                cm.setText(内容)
            } catch (err) {
                print(err)
            }
        }
    }))
}

function dip2px(ctx, dips) {
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function 传送玩家(x, y, z) {
    setPosition(获取玩家实体(), x, y, z);
}

function 获取玩家实体() {
    return getPlayerEnt()
}

var Thread = new java.lang.Thread(
    new java.lang.Runnable({
        run: function() {
            while (true) {
                if (当前锁定玩家 == null) {} else
                if (骑玩家 == true) {
                    var x = Entity.getX(当前锁定玩家)
                    var y = Entity.getY(当前锁定玩家)
                    var z = Entity.getZ(当前锁定玩家)
                    传送玩家(x, y + 3, z)
                }
                if (自瞄 == true) {
                    crosshairAimAt(当前锁定玩家)
                }
            }
        }
    }));
Thread.start();



function dip2px(ctx, dips) {
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function menu() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var 坐标x = 0,
        坐标y = ctx.getWindowManager().getDefaultDisplay().getHeight() / 1.5,
        坐标x1, 坐标y1, 坐标x2, 坐标y2;
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var 窗口 = new android.widget.PopupWindow();
                var layout = new android.widget.LinearLayout(ctx)
                窗口.setFocusable(true)
                layout.setOrientation(1)

                坐标y = 屏幕高度 / 4.1
                坐标x = 屏幕宽度 / 3.25


                var 菜单布局1背景 = new GD();
                菜单布局1背景.setStroke(10, 颜色(200, 0, 221, 100));
                菜单布局1背景.setCornerRadius(5);
                layout.setBackground(菜单布局1背景);

                //菜单顶栏布局 开始
                var 菜單頂欄 = new android.widget.LinearLayout(ctx)
                菜單頂欄.setOrientation(0)
                菜單頂欄.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
                layout.addView(菜單頂欄)


                按钮 = new android.widget.TextView(ctx)
                按钮.setText(" 小萌黑客端")
                按钮.setTextSize(20)
                按钮.setWidth(dip2px(ctx, 230));
                按钮.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        load("小萌黑客端")
                    }
                }))
                按钮.setOnTouchListener(new android.view.View.OnTouchListener({
                    onTouch: function(v, e) {
                        switch (e.getAction()) {
                            case 0:
                                坐标x1 = e.getX();
                                坐标y1 = e.getY();
                                break;
                            case 2:
                                坐标x2 = parseInt(e.getX() - 坐标x1) * -3 / 10;
                                坐标y2 = parseInt(e.getY() - 坐标y1) * -3 / 10;
                                坐标x = 坐标x + 坐标x2;
                                坐标y = 坐标y + 坐标y2;
                                窗口.update(坐标x, 坐标y, -1, -1);
                                break;
                        }
                        return false;
                    }
                }));
                菜單頂欄.addView(按钮)

                關閉 = new android.widget.TextView(ctx)
                關閉.setText("X")
                關閉.setTextSize(20)
                關閉.setWidth(dip2px(ctx, 20));
                關閉.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        窗口.dismiss();
                    }
                }))
                菜單頂欄.addView(關閉)

                //菜单顶栏布局 结束

                //标题布局 开始

                var layout2 = new android.widget.LinearLayout(ctx)
                layout2.setOrientation(1)
                layout.addView(layout2)

                空 = new android.widget.TextView(ctx)
                空.setText("")
                空.setTextSize(10)
                空.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {

                    }
                }))
                layout2.addView(空)

                var layout3 = new android.widget.LinearLayout(ctx)
                layout3.setOrientation(0)
                layout.addView(layout3)

                var 按钮 = new android.widget.ImageView(ctx);
                var 群 = android.util.Base64.decode(小萌logo, 0);
                按钮.setImageBitmap(new android.graphics.BitmapFactory.decodeByteArray(群, 0, 群.length));
                按钮.setLayoutParams(new android.widget.LinearLayout.LayoutParams(ctx.getWindowManager().getDefaultDisplay().getWidth() / 8, ctx.getWindowManager().getDefaultDisplay().getHeight() / 6));
                layout3.addView(按钮)

                標題 = new android.widget.TextView(ctx)
                標題.setText(彩字("§b小萌黑客端 \n v1.13"))
                標題.setTextSize(19)
                layout3.addView(標題)

                //标题布局 结束


                //                              分割线


                //内容布局 开始

                var layout4 = new android.widget.LinearLayout(ctx)
                layout4.setOrientation(0)
                layout.addView(layout4)


                var 功能 = new android.widget.Button(ctx)
                功能.setText("主要功能")
                功能.setWidth(dip2px(ctx, 250));
                功能.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        if (解锁验证 == true) {
                            功能窗口();
                        } else {
                            load("请先激活卡密")
                        }
                    }
                }))
                layout4.addView(功能)



                var layout5 = new android.widget.LinearLayout(ctx)
                layout5.setOrientation(0)
                layout.addView(layout5)


                var 卡密 = new android.widget.Button(ctx)
                卡密.setText("激活卡密")
                卡密.setWidth(dip2px(ctx, 190));
                卡密.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        注册机();

                    }
                }))
                layout5.addView(卡密)

                var 关于 = new android.widget.Button(ctx)
                关于.setText("关于")
                关于.setWidth(dip2px(ctx, 60));
                关于.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {

                        var dialog = new android.app.AlertDialog.Builder(ctx)
                        dialog.setTitle("关于")
                        dialog.setMessage("此js由Hacker'、麦块小萌制作\nQQ：3215476335\n这里借用了叶红的UI\n已获得授权\n欢迎加入小萌Hacker交流群，群聊号码：370702105")
                        dialog.setPositiveButton("我知道了", new android.content.DialogInterface.OnClickListener() {
                            onClick: function(dia, w) {
                                /*点确定时执行*/
                            }
                        })
                        dialog.setNeutralButton("复制群号", new android.content.DialogInterface.OnClickListener() {
                            onClick: function(dia, w) {
                                load("复制成功")
                                复制("370702105")
                            }
                        })
                        dialog.show()

                    }
                }))
                layout5.addView(关于)

                //内容布局 结束

                窗口.setContentView(layout);
                窗口.setWidth(dip2px(ctx, 250));
                窗口.setHeight(dip2px(ctx, 200));
                窗口.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)));
                窗口.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.BOTTOM | android.view.Gravity.RIGHT, 坐标x, 坐标y);
            } catch (err) {
                print(err);
            }
        }
    }));
}

//下方代码

function 功能窗口() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx)
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)

        var 坐标传送 = new android.widget.Button(ctx)
        坐标传送.setText("坐标◎传送")
        坐标传送.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();
                传送();
            }
        }))
        layout.addView(坐标传送)

        var s466 = new android.widget.Button(ctx)
        s466.setText("游戏◎公告")
        s466.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                挂墙();
            }
        }))
        layout.addView(s466)

        var s466 = new android.widget.Button(ctx)
        s466.setText("碰撞◎显示")
        s466.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                碰撞箱();
            }
        }))
        layout.addView(s466)

        var s466 = new android.widget.Button(ctx)
        s466.setText("打开◎网页")
        s466.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                浏览器();
            }
        }))
        layout.addView(s466)


        var 管理 = new android.widget.Button(ctx)
        管理.setText("玩家◎管理")
        管理.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();
                玩家管理按键();
            }
        }))
        layout.addView(管理)

        var zm = new android.widget.Button(ctx)
        zm.setText("围绕◎自瞄")
        zm.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();
                围绕自瞄();
            }
        }))
        layout.addView(zm)

        var 实用 = new android.widget.Button(ctx)
        实用.setText("按键◎实用")
        实用.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();
                设();
                飞();
                回();
                上();
                下();
                跳();
                冲();
                换();
                挖();
            }
        }))
        layout.addView(实用)



        var 网易熊房 = new android.widget.Button(ctx)
        网易熊房.setText("网易◎熊房")
        网易熊房.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();

                var View = android.view.View;
                var String = java.lang.String;
                var Integer = java.lang.Integer;

                var LinearLayout = android.widget.LinearLayout;
                var Runnable = java.lang.Runnable;
                var Color = android.graphics.Color;
                var MotionEvent = android.view.MotionEvent;
                var Matrix = android.graphics.Matrix;
                var Bitmap = android.graphics.Bitmap;
                var ScrollView = android.widget.ScrollView;
                var FrameLayout = android.widget.FrameLayout;
                var Gravity = android.view.Gravity;
                var RelativeLayout = android.widget.RelativeLayout;
                var InputFilter = android.text.InputFilter;
                var TextWatcher = android.text.TextWatcher;
                var ColorDrawable = android.graphics.drawable.ColorDrawable;
                var StringBuilder = java.lang.StringBuilder;

                var Button = android.widget.Button;
                var TextView = android.widget.TextView;
                var EditText = android.widget.EditText;
                var ImageView = android.widget.ImageView;
                var ImageButton = android.widget.ImageButton;
                var PopupWindow = android.widget.PopupWindow;
                var SeekBar = android.widget.SeekBar;


                var 爱吃萝卜的小兔叽 = "";
                var logo = android.graphics.BitmapFactory.decodeByteArray(android.util.Base64.decode(爱吃萝卜的小兔叽, 0), 0, android.util.Base64.decode(爱吃萝卜的小兔叽, 0).length)

                context = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

                context.setTheme(android.R.style.Theme_Material_Light_NoActionBar);
                //state
                var buttonbg = {
                    t: -531890357, //e04bff4b
                    f: -520139957, //e0ff4b4b
                    s: -526475618 //e09e9e9e
                }

                var Metrics = context.getResources().getDisplayMetrics();

                var ScreenWidth = Metrics.widthPixels;
                var ScreenHeight = Metrics.heightPixels;

                function dip2px(dips) {
                    return Math.ceil(dips * Metrics.density);
                }

                function sp2px(sp) {
                    return (sp * Metrics.scaledDensity + 0.5);
                }

                function bitmapScale(bitmap, x, y) {
                    var matrix = new Matrix();
                    matrix.postScale(x / bitmap.getWidth(), y / bitmap.getHeight());
                    return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
                }

                function setClick(view, executeString, x) {
                    view.setOnClickListener(new View.OnClickListener() {
                        onClick: function(v) {
                            return (eval(executeString)); //虽然不需要return
                        }
                    });
                }

                function setTouch(view, executeString) {
                    view.setOnTouchListener(new View.OnTouchListener() {
                        onTouch: function(v, event) {
                            return (eval(executeString));
                        }
                    });
                }

                function setDismiss(popwin, executeString) {
                    popwin.setOnDismissListener(new PopupWindow.OnDismissListener() {
                        onDismiss: function() {
                            eval(executeString);
                        }
                    });
                }

                function setSeekBarChange(seekbar, executeString, x) {
                    seekbar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
                        onProgressChanged: function(seekbar, progress, fromUser) {
                            eval(executeString);
                        },

                        onStartTrackingTouch: function(seekbar) {
                            // 
                        },

                        onStopTrackingTouch: function(seekbar) {
                            //
                        },

                    });
                }

                function addTextChanged(edit, executeString, x) {
                    edit.addTextChangedListener(new TextWatcher() {

                        beforeTextChanged: function(str, start, count, after) {},

                        onTextChanged: function(str, start, before, count) {},

                        afterTextChanged: function(s) {
                            eval(executeString);
                        },

                    });
                }



                //popwin
                var $IconPopwin;
                var $MemuPopwin;
                var $EnchantPopwin;
                //var $TpPopwin;
                var $TpMemuPopwin;
                var $TpModeButtonPopwin;


                function DrawIcon(showX, showY) {
                    context.runOnUiThread(new Runnable({
                        run: function() {

                            if ($IconPopwin != null) {
                                $IconPopwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, showX, showY);
                                return;
                            }
                            var view = new LinearLayout(context);
                            var iconbutton = new ImageButton(context);
                            iconbutton.setImageBitmap(bitmapScale(logo, dip2px(50), dip2px(50)));


                            view.addView(iconbutton);
                            iconbutton.setBackgroundColor(Color.argb(0, 0, 0, 0));

                            var popwin = new PopupWindow(view,
                                LinearLayout.LayoutParams.WRAP_CONTENT,
                                LinearLayout.LayoutParams.WRAP_CONTENT
                            );
                            //show
                            popwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, showX, showY);
                            //state
                            $IconPopwin = popwin;
                            setClick(iconbutton, "IconPopwinClick();");
                            setTouch(iconbutton, "IconPopwinMove(event);");
                        }
                    }));
                }


                //可能是因为太好改了所以。。。。。
                var MemuButtons = [
                    //text,rs:[raplace string <eval>],checktest,exe//--把//删除试试 （滑稽）

                    {
                        text: "上天",
                        exe: "setPosition(Player.getEntity(),Player.getX(),Player.getY()+15,Player.getZ());Player.setFlying(true);"
                    }, {
                        text: "入地",
                        exe: "setPosition(Player.getEntity(),Player.getX(),Player.getY()-10,Player.getZ());Player.setFlying(true);"
                    }, {
                        text: "稳定飞行",
                        checktest: function() {
                            return Player.canFly();
                        },
                        exe: "Player.setCanFly(!Player.canFly());"
                    }, {
                        text: "究极神器:崩服蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,259)"
                    }, {
                        text: "添加隐身药水",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),373,1,8)"
                    }, {
                        text: "y+穿墙",
                        exe: "setPosition(Player.getEntity(),Player.getX(),Player.getY()+5,Player.getZ());"
                    }, {
                        text: "y-穿墙",
                        exe: "setPosition(Player.getEntity(),Player.getX(),Player.getY()-5,Player.getZ());"
                    }, {
                        text: "添加钻石镐",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),278,1,0)"
                    }, {
                        text: "添加篮球打蔡徐坤",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,54)"
                    }, {
                        text: "时运&锋利&效率&击退&耐久附魔",
                        exe: "Player.enchant(Player.getSelectedSlotId(),Enchantment.FORTUNE,-98305);" + "Player.enchant(Player.getSelectedSlotId(),Enchantment.SHARPNESS,-98305);" + "Player.enchant(Player.getSelectedSlotId(),Enchantment.EFFICIENCY,-98305);" + "Player.enchant(Player.getSelectedSlotId(),Enchantment.KNOCKBACK,-98305);" + "Player.enchant(Player.getSelectedSlotId(),Enchantment.UNBREAKING,-98305);"
                    }, {
                        text: "SuperKB附魔",
                        exe: "Player.enchant(Player.getSelectedSlotId(),Enchantment.KNOCKBACK,-98305);" + "Player.enchant(Player.getSelectedSlotId(),Enchantment.UNBREAKING,-98305);" + "Player.enchant(Player.getSelectedSlotId(),Enchantment.UNBREAKING,-98305);"
                    }, {
                        text: "添加钻石剑",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),276,1,0)"
                    }, {
                        text: "添加卡房神器",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),21,64,0)"
                    }, {
                        text: "添加隐形基岩",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),95,64,0)"
                    }, {
                        text: "添加基岩",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),7,64,0)"
                    }, {
                        text: "添加刷怪笼",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),52,64,0)"
                    }, {
                        text: "一键苏维埃",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),325,5,10)"
                    }, {
                        text: "炫富装B",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),57,64,0)"
                    }, {
                        text: "推荐:末影水晶蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,71)"
                    }, {
                        text: "推荐:添加卫道士蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,57)"
                    }, {
                        text: "获取苦力怕蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,33)"
                    }, {
                        text: "获取附魔苹果",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),466,64,0)"
                    }, {
                        text: "添加末影龙蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,53)"
                    }, {
                        text: "添加凋零蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,52)"
                    }, {
                        text: "添加闪电蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,93)"
                    }, {
                        text: "爆破屑运营",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,65)"
                    }, {
                        text: "添加龙息蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,79)"
                    }, {
                        text: "添加凋灵头蛋（蓝）",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,91)"
                    }, {
                        text: "添加火球蛋",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),383,64,85)"
                    }, {
                        text: "z-穿墙",
                        exe: "setPosition(Player.getEntity(),Player.getX(),Player.getY(),Player.getZ()-5);"
                    }, {
                        text: "z+穿墙",
                        exe: "setPosition(Player.getEntity(),Player.getX(),Player.getY(),Player.getZ()+5);"
                    }, {
                        text: "x-穿墙",
                        exe: "setPosition(Player.getEntity(),Player.getX()-5,Player.getY(),Player.getZ());"
                    }, {
                        text: "x+穿墙",
                        exe: "setPosition(Player.getEntity(),Player.getX()+5,Player.getY(),Player.getZ());"
                    },   {
                        text: "添加滞留伤害",
                        exe: "Entity.setCarriedItem(getPlayerEnt(),441,1,24)"
                    }, {
                        text: "打开望远镜",
                        exe: "Entity.addEffect(Player.getEntity(),2,100,1000000,false,false);" //沙雕效果
                    }, {
                        text: "添加药水效果",
                        exe: "Entity.addEffect(Player.getEntity(),3,1000000,1000000,false,false);" +
                            "Entity.addEffect(Player.getEntity(),8,1000000,5,false,false);" +
                            "Entity.addEffect(Player.getEntity(),16,1000000,1000000,false,false);"
                    },

                ];

                //这里醉了(›´ω`‹ )
                function MemuButtonBGDraw(count, bt) {
                    if (MemuButtons[count].checktest()) {
                        bt.setBackgroundColor(buttonbg.t);
                    } else {
                        bt.setBackgroundColor(buttonbg.f);
                    }
                }

                function MemuButtonDraw(view) {
                    for (var count = 0; count < MemuButtons.length; count++) {
                        var bt = new Button(context);
                        bt.setElevation(10);

                        bt.setAllCaps(false);
                        var btext = new String(MemuButtons[count].text);
                        /*
                        if(typeof(MemuButtons[count].rs)!="undefined")
                        for(var i=0;i<MemuButtons[count].rs.length;i++){
                        btext=btext.replace("%$"+i,MemuButtons[count].rs[i]());
                        }
                        */
                        bt.setText(btext);

                        if (typeof(MemuButtons[count].checktest) != "undefined") {
                            MemuButtonBGDraw(count, bt);
                            setClick(bt, MemuButtons[count].exe + "MemuButtonBGDraw(x[0],x[1]);", [count, bt]);
                        } else {
                            bt.setBackgroundColor(buttonbg.s);
                            setClick(bt, MemuButtons[count].exe, [bt, count]);
                        }

                        view.addView(bt, -1, -2); //WRAP_CONTENT,WRAP_FILL_PARENT暂且这么写
                    }
                }

                function DrawMemu(showX, showY) {
                    //context.runOnUiThread(new Runnable({run:function(){

                    if ($MemuPopwin != null) {
                        $MemuPopwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, showX, showY); //ScreenWidth-dip2px(220),dip2px(120));
                        return;
                    }
                    var view = new LinearLayout(context);
                    view.setOrientation(LinearLayout.VERTICAL);
                    view.setBackgroundColor(-2113870013); //#8200b7ff

                    var xuxiqwq = new TextView(context);
                    xuxiqwq.setText("魔改版 xuxiqwq ");
                    xuxiqwq.setText("魔改版xuxiqwq ");
                    view.addView(xuxiqwq, -2, -2);
                    //add buttons

                    ////////////////
                    MemuButtonDraw(view);
                    ////////////////

                    var scrollview = new ScrollView(context);
                    scrollview.addView(view, -1, -2 //WRAP_CONTENT,WRAP_FILL_PARENT
                    );
                    var popwin = new PopupWindow(scrollview, -1, -1 //WRAP_FILL_PARENT
                    );
                    popwin.setWidth(dip2px(180));
                    popwin.setHeight(ScreenHeight / 2);
                    popwin.setOutsideTouchable(true);
                    popwin.setElevation(10);
                    setDismiss(popwin, "MenuPopwinDismiss();");
                    popwin.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                    popwin.setFocusable(true);
                    $MemuPopwin = popwin;
                    //show
                    popwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, showX, showY); //ScreenWidth-dip2px(220),dip2px(120));

                    //}}));
                }

                //tool win//
                var $ToolWinIsShow = false;

                //be的id按顺序
                var EnchantList = [{
                        id: 0,
                        name: "保护"
                    }, {
                        id: 1,
                        name: "火焰保护"
                    }, {
                        id: 2,
                        name: "掉落保护"
                    }, {
                        id: 3,
                        name: "爆炸保护"
                    }, {
                        id: 4,
                        name: "弹射物保护"
                    }, {
                        id: 5,
                        name: "荆棘"
                    }, {
                        id: 6,
                        name: "水下呼吸"
                    }, {
                        id: 7,
                        name: "深海探索者"
                    }, {
                        id: 8,
                        name: "水下速掘"
                    }, {
                        id: 9,
                        name: "锋利"
                    }, {
                        id: 10,
                        name: "亡灵杀手"
                    }, {
                        id: 11,
                        name: "截肢杀手"
                    }, {
                        id: 12,
                        name: "击退"
                    }, {
                        id: 13,
                        name: "火焰附加"
                    }, {
                        id: 14,
                        name: "抢夺"
                    }, {
                        id: 15,
                        name: "效率"
                    }, {
                        id: 16,
                        name: "精准采集"
                    }, {
                        id: 17,
                        name: "耐久"
                    }, {
                        id: 18,
                        name: "时运"
                    }, {
                        id: 19,
                        name: "力量"
                    }, {
                        id: 20,
                        name: "冲击"
                    }, {
                        id: 21,
                        name: "火矢"
                    }, {
                        id: 22,
                        name: "无限"
                    }, {
                        id: 23,
                        name: "海之眷顾"
                    }, {
                        id: 24,
                        name: "饵钓"
                    }, {
                        id: 25,
                        name: "冰霜行者"
                    }, {
                        id: 26,
                        name: "经验修补"
                    }, {
                        id: 27,
                        name: "绑定诅咒"
                    }, {
                        id: 28,
                        name: "消失诅咒"
                    }, {
                        id: 29,
                        name: "穿刺"
                    }, {
                        id: 30,
                        name: "激流"
                    }, {
                        id: 31,
                        name: "忠诚"
                    }, {
                        id: 32,
                        name: "引雷"
                    }, {
                        id: 33,
                        name: "多重射击"
                    }, {
                        id: 34,
                        name: "穿透"
                    }, {
                        id: 35,
                        name: "快速装填"
                    },
                    //加了一个。

                ];

                function DrawEnchant() {
                    $ToolWinIsShow = true;


                    //context.runOnUiThread(new Runnable({run:function(){

                    if ($EnchantPopwin != null) {
                        $EnchantPopwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, ScreenWidth / 4, ScreenHeight / 4);
                        return;
                    }

                    var view = new LinearLayout(context);
                    view.setOrientation(LinearLayout.VERTICAL);
                    view.setBackgroundColor(-2113882113); //#8200b7ff
                    //text         id 0xa
                    //button    id 0x1
                    //SeekBar id 0x2
                    //edit         id 0x3
                    //params
                    var textParams = new RelativeLayout.LayoutParams(sp2px(10 * 5), -2);
                    textParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);
                    var buttonParams = new RelativeLayout.LayoutParams(-2, -2);
                    buttonParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE);
                    var editParams = new RelativeLayout.LayoutParams(sp2px(15 * 5), -2);
                    editParams.addRule(RelativeLayout.LEFT_OF, 0x1);
                    var sbParams = new RelativeLayout.LayoutParams(-1, -2);
                    sbParams.addRule(RelativeLayout.RIGHT_OF, 0xa);
                    sbParams.addRule(RelativeLayout.LEFT_OF, 0x3);

                    for (var i = 0; i < EnchantList.length; i++) {
                        var relative = new RelativeLayout(context);
                        var name = new TextView(context);
                        name.setId(0xa);
                        var button = new Button(context);
                        button.setId(0x1);
                        var sb = new SeekBar(context);
                        //sb.setId(0x2);
                        var level = new EditText(context);
                        level.setId(0x3);

                        //level.setInputType(InputType.TYPE_CLASS_NUMBER|InputType.TYPE_NUMBER_FLAG_SIGNED);//number
                        level.setInputType(4098);
                        level.setText("0");
                        level.setFocusable(true);
                        level.setFocusableInTouchMode(true);
                        level.setFilters([new InputFilter.LengthFilter(6)]);
                        addTextChanged(level, "EnchantEditChange(s,x);", [level, sb]);

                        sb.setProgress(32768);
                        sb.setMax(65535);
                        sb.setProgress(32768);

                        sb.setPadding(dip2px(20), 0, dip2px(50), 0);
                        setSeekBarChange(sb, "EnchantSeekChange(progress,fromUser,x);", [level]);
                        name.setText(EnchantList[i].name);
                        button.setText("附魔");
                        setClick(button, "EnchantHand(" + i + ",x[0].getProgress());", [sb]);
                        //button.setGravity(Gravity.RIGHT);
                        //name.setGravity(Gravity.LEFT);
                        //level.setGravity(Gravity.CENTER);
                        relative.addView(name, textParams);
                        relative.addView(level, editParams);
                        relative.addView(button, buttonParams);
                        relative.addView(sb, sbParams);
                        view.addView(relative, -1, -2);
                    }
                    //dividing line--------
                    var scrollview = new ScrollView(context);
                    scrollview.addView(view, -1, -2 //WRAP_FILL_PARENT,WRAP_CONTENT
                    );
                    var popwin = new PopupWindow(scrollview, -1, -1 //WRAP_FILL_PARENT
                    );
                    popwin.setWidth(ScreenWidth / 2);
                    popwin.setHeight(ScreenHeight / 2);
                    popwin.setOutsideTouchable(true);
                    popwin.setElevation(10);
                    setDismiss(popwin, "EnchantPopwinDismiss();");
                    popwin.setFocusable(true);
                    popwin.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                    popwin.setFocusable(true);
                    $EnchantPopwin = popwin;
                    popwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, ScreenWidth / 4, ScreenHeight / 4);

                    //}}));
                }

                /*
                function DrawTp(showX,showY){
                //context.runOnUiThread(new Runnable({run:function(){

                if($TpPopwin!=null){
                $TpPopwin.showAtLocation(context.getWindow().getDecorView(),android.view.Gravity.LEFT| android.view.Gravity.TOP,showX,showY);
                return;

                var view=new LinearLayout(context);
                }
                //}}));
                }*/
                //嘻嘻嘻(♡˙︶˙♡)

                function TpPlayerRefresh() {
                    var view = $TpPlayersView;
                    view.removeAllViews();
                    var players = Server.getAllPlayers();
                    for (var i = 0; i < players.length; i++) {
                        var player = players[i];
                        var name = Player.getName(player);
                        var bt = new Button(context);
                        bt.setBackgroundColor(buttonbg.s);
                        bt.setAllCaps(false);
                        bt.setText("" + name);
                        setClick(bt, "TpModes[$TpMode].run(x[0]);", [player]);
                        view.addView(bt, -1, -2);
                    }

                }


                var TpModes = [{
                        id: 0,
                        name: "tp",
                        run: function(player) {
                            setPosition(Player.getEntity(), Entity.getX(player), Entity.getY(player), Entity.getZ(player));
                        }
                    },

                    {
                        id: 1,
                        name: "tpa",
                        run: function(player) {
                            setPosition(player, Player.getX(), Player.getY(), Player.getZ());
                        }
                    },

                ];
                var $TpMode = 0;



                function DrawTpMemu() {
                    //context.runOnUiThread(new Runnable({run:function(){
                    var showX = 0;
                    var showY = 0;
                    if ($TpMemuPopwin != null) {
                        TpPlayerRefresh();
                        $TpMemuPopwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, showX, showY);
                        $TpModeButtonPopwin.getContentView().findViewById(0x1).setText(TpModes[$TpMode].name);
                        $TpModeButtonPopwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, showX + dip2px(180), showY);

                        return;
                    }

                    var view = new LinearLayout(context);
                    view.setOrientation(LinearLayout.VERTICAL);
                    view.setBackgroundColor(-2113882113); //#8200b7ff

                    $TpPlayersView = new LinearLayout(context);
                    $TpPlayersView.setOrientation(LinearLayout.VERTICAL);
                    var bt = new Button(context);
                    bt.setText("刷新");
                    view.addView(bt, -1, -2);
                    setClick(bt, "TpPlayerRefresh();");

                    TpPlayerRefresh();

                    view.addView($TpPlayersView, -1, -2);

                    var scrollview = new ScrollView(context);
                    scrollview.addView(view, -1, -2 //WRAP_FILL_PARENT,WRAP_CONTENT
                    );
                    var popwin = new PopupWindow(scrollview, -1, -1 //WRAP_FILL_PARENT
                    );

                    popwin.setWidth(dip2px(180));
                    popwin.setHeight(dip2px(180 * 1.5));

                    $TpMemuPopwin = popwin;
                    setDismiss(popwin, "$TpModeButtonPopwin.dismiss();");
                    $TpMemuPopwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, showX, showY);

                    //Mode Button
                    var mview = new LinearLayout(context);
                    var modebutton = new Button(context);

                    modebutton.setText(TpModes[0].name);
                    modebutton.setBackgroundColor(buttonbg.s);
                    setClick(modebutton, "if($TpMode>=TpModes.length-1)$TpMode=0;else ++$TpMode;v.setText(TpModes[$TpMode].name);");
                    modebutton.setId(0x1);
                    modebutton.setAllCaps(false);
                    $TpMode = 0;
                    mview.addView(modebutton, -1, -1);

                    var mpop = new PopupWindow(mview, dip2px(80), dip2px(40));
                    $TpModeButtonPopwin = mpop;
                    $TpModeButtonPopwin.showAtLocation(context.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, showX + dip2px(180), showY);



                    //}}));
                }

                //state
                var $orgX = null,
                    $orgY = null,
                    $offset = null,
                    $offsetY = null;
                var $IconPopwinX = null,
                    $IconPopwinY = null;

                function IconPopwinMove(event) {
                    switch (event.getAction()) {
                        case MotionEvent.ACTION_DOWN:
                            $orgX = event.getX();
                            $orgY = event.getY();
                            break;
                        case MotionEvent.ACTION_MOVE:
                            $offsetX = event.getRawX() - $orgX;
                            $offsetY = event.getRawY() - $orgY;
                            $IconPopwin.update($offsetX, $offsetY, -1, -1, true);

                            break;
                        case MotionEvent.ACTION_UP:
                            $IconPopwinX = event.getRawX() - event.getX();
                            $IconPopwinY = event.getRawY() - event.getY();
                            break;
                    }
                    return false;
                }

                function IconPopwinClick() {

                    $IconPopwin.dismiss();
                    DrawMemu($IconPopwinX, $IconPopwinY);
                    return false;
                }

                function MenuPopwinDismiss() {
                    if (!$ToolWinIsShow)
                        DrawIcon($IconPopwinX, $IconPopwinY);
                }

                function EnchantPopwinDismiss() {
                    $ToolWinIsShow = false;
                    DrawMemu($IconPopwinX, $IconPopwinY);
                }

                function EnchantHandItem() {
                    DrawEnchant();
                    $MemuPopwin.dismiss();
                }

                function EnchantSeekChange(progress, fromUser, x) {
                    if (fromUser)
                        x[0].setText("" + (progress - 32768));
                }

                function EnchantEditChange(s, x) {
                    if (s.toString() == "" || s.toString() == "-") {
                        var progress = -32768;
                    } else
                        var progress = parseInt(s.toString()) + 32768;
                    if (progress > 65535) {
                        x[0].setText("32767");

                        progress = 65535;
                        x[0].setSelection(5);
                    }

                    x[1].setProgress(progress);
                }

                function EnchantHand(id, level) {
                    ///Player.getEnchantments(par1int);
                    Item.setEnchantType(getCarriedItem(), id, 1);
                    Player.enchant(Player.getSelectedSlotId(), id, -98304 + level);
                }


                MC = {
                    getAllPlayers: function() {
                        var e = Entity.getAll();
                        var players = new Array();
                        for (var i = 0; i < e.length; i++) {
                            if (Player.isPlayer(e[i]))
                                players.push(e[i]);
                        }
                        print(e.length + "," + e[0] + "," + e[length - 1]);
                        return players;
                    },

                }
                DrawIcon(ScreenWidth, 0.5 * ScreenHeight - dip2px(40));


            }
        }))
        layout.addView(网易熊房)

        var 开启黑客端 = new android.widget.Button(ctx)
        开启黑客端.setText("开启◎黑客")
        开启黑客端.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();
                //看你妈
                var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get(),
                    wg = android.widget,
                    app = android.app,
                    wid = ctx.getWindowManager().getDefaultDisplay().getWidth(),
                    hei = ctx.getWindowManager().getDefaultDisplay().getHeight(),
                    gravity = android.view.Gravity,
                    left = gravity.LEFT,
                    top = gravity.TOP,
                    right = gravity.RIGHT,
                    bottom = gravity.BOTTOM,
                    center = gravity.CENTER,
                    mainView = ctx.getWindow().getDecorView(),
                    view = android.view,
                    grap = android.graphics,
                    lang = java.lang,
                    util = android.util,
                    io = java.io,
                    interface = android.content.DialogInterface,
                    root = android.os.Environment.getExternalStorageDirectory().getAbsolutePath(),
                    iniPath = root + "/games/com.mojang",
                    iniName = "-049592568.ini",
                    shield = ["闪电侠", "超级跳跃", "末影使者", "点我使用展示功能", "跳跃信标", "entity"];
                var radarPic = grap.Bitmap.createBitmap(hei / 3, hei / 3, grap.Bitmap.Config.ARGB_8888),
                    radarShow, radarWin, state = 0,
                    lenZ = radarPic.getWidth(),
                    lenX = radarPic.getHeight(),
                    radius = lenZ / 30,
                    speeding = false,
                    running = false,
                    players, flashing = false,
                    home = null,
                    getMessage, mode = false;
                var enchId = {
                        耐久: Enchantment.UNBREAKING,
                        锋利: Enchantment.SHARPNESS,
                        火焰附加: Enchantment.FIRE_ASPECT,
                        击退: Enchantment.KNOCKBACK,
                        力量: Enchantment.POWER,
                        冲击: Enchantment.PUNCH,
                        火矢: Enchantment.FLAME,
                        无限: Enchantment.INFINITY,
                        保护: Enchantment.PROTECTION,
                        荆棘: Enchantment.THORNS,
                        火焰保护: Enchantment.FIRE_PROTECTION,
                        掉落保护: Enchantment.FEATHER_FALLING,
                        爆炸保护: Enchantment.BLAST_PROTECTION,
                        弹射物保护: Enchantment.PROJECTILE_PROTECTION,
                        水下呼吸: Enchantment.RESPIRATION,
                        深海探索者: Enchantment.AQUA_AFFINITY,
                        水下速掘: Enchantment.DEPTH_STRIDER,
                        亡灵杀手: Enchantment.SMITE,
                        节肢杀手: Enchantment.BANE_OF_ARTHROPODS,
                        抢夺: Enchantment.LOOTING,
                        效率: Enchantment.EFFICIENCY,
                        精准采集: Enchantment.SILK_TOUCH,
                        时运: Enchantment.FORTUNE,
                        海之眷顾: Enchantment.LUCK_OF_THE_SEA,
                        钓饵: Enchantment.LURE
                            //经验修补:26,
                            //冰霜行者:25,
                            //穿刺:29,
                            //引雷:32,
                            //忠诚:31,
                    }
                    //var permission=false,endTerm;

                if (!running) {
                    running = true;
                    Ui(function() {
                        try {
                            var win = new wg.PopupWindow(ctx);
                            var lay = new wg.LinearLayout(ctx);
                            addCheckBox(lay, "模式", searchMode, 0, 10, mode);
                            addButton(lay, "飞行", fly, null, 0, 14);
                            addButton(lay, "速掘", rapid, removeRapid, 0, 14);
                            addButton(lay, "暗杀", flash, null, 0, 14);
                            addButton(lay, "回家", goHome, setHome, 0, 14);
                            addButton(lay, "变速", speed, null, 0, 14);
                            addButton(lay, "高跳", jump, removeJump, 0, 14)
                            addButton(lay, "夜视", vision, removeVision, 0, 14);
                            addButton(lay, "雷达", radar, getNames, 0, 14);
                            addButton(lay, "附魔", enchant, null, 0, 14);
                            addButton(lay, "经验", exp, null, 0, 14);
                            addButton(lay, "执行", runCommand, null, 0, 14);
                            addButton(lay, "望远", wangyuan, null, 0, 14); //这个功能可能很傻吊
                            addButton(lay, "神装", shenzhuang, null, 0, 14);
                            addButton(lay, "药效", effect, null, 0, 14);
                            addButton(lay, "物品", wupin, null, 0, 14);
                            addButton(lay, "炸房实用", zhafang, null, 0, 14);
                            win.setWidth(wid / 8 * 2);
                            //win.setHeight(hei/9);
                            win.setContentView(scroll(lay, true));
                            win.setBackgroundDrawable(getColorDrawable("transparent"));
                            win.showAtLocation(mainView, right | top, wid / 8, 0);
                        } catch (err) {
                            print(err);
                        }
                    });
                }


                function invalidate() {
                    try {
                        if (mode) {
                            players = Array.slice.call(Server.getAllPlayers());
                            players.shift();
                        } else {
                            var ls = [];
                            for (var i = 0; i <= 10000; i++)
                                if (Entity.getEntityTypeId(i) == 63)
                                    ls.push(i);
                            players = ls;
                        }
                        var arr = []
                        for (var i in players)
                            if (shield.indexOf(Player.getName(players[i])) > -1) arr.unshift(i);
                        for (var i in arr) players.splice(arr[i], 1);
                    } catch (err) {
                        showTip(err, 1);
                    }
                }

                function fly() {
                    Entity.setPositionRelative(Player.getEntity(), 0, 1, 0);
                    Player.setFlying(!Player.isFlying());
                    showTip(Player.isFlying() ? "已开启飞行，再次点击关闭" : "已关闭飞行");
                }




                function wangyuan() {
                    Entity.addEffect(Player.getEntity(), 2, 100, 1000000, false, false);
                    showTip("你会走的很慢")
                }

                function shenzhuang() {
                    clientMessage("§aHacker、麦块小萌➡§4作者QQ：3215476335");
                    clientMessage("§aHacker、麦块小萌➡§4作者：Hacker、麦块小萌");
                    clientMessage("§aHacker、麦块小萌➡§4请把要附魔的物品放在物品栏");
                    Player.enchant(0, Enchantment.SHARPNESS, -32769)
                    Player.enchant(0, Enchantment.UNBREAKING, -32769)
                    Player.enchant(0, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(0, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(0, Enchantment.LOOTING, -32769)
                    Player.enchant(0, Enchantment.INFINITY, -32769)
                    Player.enchant(0, Enchantment.POWER, -32769)
                    Player.enchant(0, Enchantment.PUNCH, -32769)
                    Player.enchant(0, Enchantment.FLAME, -32769)
                    Player.enchant(0, Enchantment.PROTECTION, -32769)
                    Player.enchant(0, Enchantment.THORNS, -32769)
                    Player.enchant(0, Enchantment.FORTUNE, -32769)
                    Player.enchant(0, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(1, Enchantment.SHARPNESS, -32769)
                    Player.enchant(1, Enchantment.UNBREAKING, -32769)
                    Player.enchant(1, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(1, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(1, Enchantment.LOOTING, -32769)
                    Player.enchant(1, Enchantment.INFINITY, -32769)
                    Player.enchant(1, Enchantment.POWER, -32769)
                    Player.enchant(1, Enchantment.PUNCH, -32769)
                    Player.enchant(1, Enchantment.FLAME, -32769)
                    Player.enchant(1, Enchantment.PROTECTION, -32769)
                    Player.enchant(1, Enchantment.THORNS, -32769)
                    Player.enchant(1, Enchantment.FORTUNE, -32769)
                    Player.enchant(1, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(2, Enchantment.SHARPNESS, -32769)
                    Player.enchant(2, Enchantment.UNBREAKING, -32769)
                    Player.enchant(2, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(2, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(2, Enchantment.LOOTING, -32769)
                    Player.enchant(2, Enchantment.INFINITY, -32769)
                    Player.enchant(2, Enchantment.POWER, -32769)
                    Player.enchant(2, Enchantment.PUNCH, -32769)
                    Player.enchant(2, Enchantment.FLAME, -32769)
                    Player.enchant(2, Enchantment.PROTECTION, -32769)
                    Player.enchant(2, Enchantment.THORNS, -32769)
                    Player.enchant(2, Enchantment.FORTUNE, -32769)
                    Player.enchant(2, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(3, Enchantment.SHARPNESS, -32769)
                    Player.enchant(3, Enchantment.UNBREAKING, -32769)
                    Player.enchant(3, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(3, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(3, Enchantment.LOOTING, -32769)
                    Player.enchant(3, Enchantment.INFINITY, -32769)
                    Player.enchant(3, Enchantment.POWER, -32769)
                    Player.enchant(3, Enchantment.PUNCH, -32769)
                    Player.enchant(3, Enchantment.FLAME, -32769)
                    Player.enchant(3, Enchantment.PROTECTION, -32769)
                    Player.enchant(3, Enchantment.THORNS, -32769)
                    Player.enchant(3, Enchantment.FORTUNE, -32769)
                    Player.enchant(3, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(4, Enchantment.SHARPNESS, -32769)
                    Player.enchant(4, Enchantment.UNBREAKING, -32769)
                    Player.enchant(4, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(4, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(4, Enchantment.LOOTING, -32769)
                    Player.enchant(4, Enchantment.INFINITY, -32769)
                    Player.enchant(4, Enchantment.POWER, -32769)
                    Player.enchant(4, Enchantment.PUNCH, -32769)
                    Player.enchant(4, Enchantment.FLAME, -32769)
                    Player.enchant(4, Enchantment.PROTECTION, -32769)
                    Player.enchant(4, Enchantment.THORNS, -32769)
                    Player.enchant(4, Enchantment.FORTUNE, -32769)
                    Player.enchant(4, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(5, Enchantment.SHARPNESS, -32769)
                    Player.enchant(5, Enchantment.UNBREAKING, -32769)
                    Player.enchant(5, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(5, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(5, Enchantment.LOOTING, -32769)
                    Player.enchant(5, Enchantment.INFINITY, -32769)
                    Player.enchant(5, Enchantment.POWER, -32769)
                    Player.enchant(5, Enchantment.PUNCH, -32769)
                    Player.enchant(5, Enchantment.FLAME, -32769)
                    Player.enchant(5, Enchantment.PROTECTION, -32769)
                    Player.enchant(5, Enchantment.THORNS, -32769)
                    Player.enchant(5, Enchantment.FORTUNE, -32769)
                    Player.enchant(5, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(6, Enchantment.SHARPNESS, -32769)
                    Player.enchant(6, Enchantment.UNBREAKING, -32769)
                    Player.enchant(6, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(6, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(6, Enchantment.LOOTING, -32769)
                    Player.enchant(6, Enchantment.INFINITY, -32769)
                    Player.enchant(6, Enchantment.POWER, -32769)
                    Player.enchant(6, Enchantment.PUNCH, -32769)
                    Player.enchant(6, Enchantment.FLAME, -32769)
                    Player.enchant(6, Enchantment.PROTECTION, -32769)
                    Player.enchant(6, Enchantment.THORNS, -32769)
                    Player.enchant(6, Enchantment.FORTUNE, -32769)
                    Player.enchant(6, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(7, Enchantment.SHARPNESS, -32769)
                    Player.enchant(7, Enchantment.UNBREAKING, -32769)
                    Player.enchant(7, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(7, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(7, Enchantment.LOOTING, -32769)
                    Player.enchant(7, Enchantment.INFINITY, -32769)
                    Player.enchant(7, Enchantment.POWER, -32769)
                    Player.enchant(7, Enchantment.PUNCH, -32769)
                    Player.enchant(7, Enchantment.FLAME, -32769)
                    Player.enchant(7, Enchantment.PROTECTION, -32769)
                    Player.enchant(7, Enchantment.THORNS, -32769)
                    Player.enchant(7, Enchantment.FORTUNE, -32769)
                    Player.enchant(7, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(8, Enchantment.SHARPNESS, -32769)
                    Player.enchant(8, Enchantment.UNBREAKING, -32769)
                    Player.enchant(8, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(8, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(8, Enchantment.LOOTING, -32769)
                    Player.enchant(8, Enchantment.INFINITY, -32769)
                    Player.enchant(8, Enchantment.POWER, -32769)
                    Player.enchant(8, Enchantment.PUNCH, -32769)
                    Player.enchant(8, Enchantment.FLAME, -32769)
                    Player.enchant(8, Enchantment.PROTECTION, -32769)
                    Player.enchant(8, Enchantment.THORNS, -32769)
                    Player.enchant(8, Enchantment.FORTUNE, -32769)
                    Player.enchant(8, Enchantment.EFFICIENCY, -32769)

                    Player.enchant(9, Enchantment.SHARPNESS, -32769)
                    Player.enchant(9, Enchantment.UNBREAKING, -32769)
                    Player.enchant(9, Enchantment.FIRE_ASPECT, -32769)
                    Player.enchant(9, Enchantment.KNOCKBACK, -32769)
                    Player.enchant(9, Enchantment.LOOTING, -32769)
                    Player.enchant(9, Enchantment.INFINITY, -32769)
                    Player.enchant(9, Enchantment.POWER, -32769)
                    Player.enchant(9, Enchantment.PUNCH, -32769)
                    Player.enchant(9, Enchantment.FLAME, -32769)
                    Player.enchant(9, Enchantment.PROTECTION, -32769)
                    Player.enchant(9, Enchantment.THORNS, -32769)
                    Player.enchant(9, Enchantment.FORTUNE, -32769)
                    Player.enchant(9, Enchantment.EFFICIENCY, -32769)
                    showTip("神装到手，天下我有")
                }

                function rapid() {
                    Entity.addEffect(Player.getEntity(), 3, 3276799, 255);
                    showTip("已开启速掘，长按解除效果");
                }

                function vision() {
                    Entity.addEffect(Player.getEntity(), 16, 3276799, 1);
                    showTip("已开启夜视，长按解除效果");
                }

                function speed() {
                    if (speeding) {
                        ModPE.setGameSpeed(20);
                        showTip("已恢复，再次点击加速");
                    } else {
                        ModPE.setGameSpeed(100);
                        showTip("已加速，再次点击恢复");
                    }
                    speeding = !speeding;
                }

                function jump() {
                    Entity.addEffect(Player.getEntity(), 8, 3276799, 4);
                    showTip("已开启高跳，长按解除效果");
                }

                function removeRapid() {
                    Entity.removeEffect(Player.getEntity(), 3);
                    return true;
                }

                function removeVision() {
                    Entity.removeEffect(Player.getEntity(), 16);
                    return true;
                }

                function removeJump() {
                    Entity.removeEffect(Player.getEntity(), 8);
                    return true;
                }

                function searchMode(v, c) {
                    mode = c;
                }

                function exp() {
                    showDialog("增加经验值", "请输入要增加的经验值", "", {
                        txt: "确定",
                        command: function() {
                            try {
                                Player.addExp(Number(getMessage.getText()));
                            } catch (err) {
                                showTip(err);
                            }
                        }
                    }, {
                        txt: "取消"
                    }, null, true);
                }

                function runCommand(txt) {
                    try {
                        showDialog("JS命令执行", "请输入JS命令", "", {
                            txt: "执行",
                            command: function() {
                                try {
                                    eval(String(getMessage.getText()));
                                } catch (err) {
                                    showTip(err);
                                }
                            }
                        }, {
                            txt: "关闭"
                        }, null, true);
                    } catch (err) {
                        showTip(err);
                    }
                }

                function flash() {
                    try {
                        if (flashing) {
                            flashing = false;
                            Player.setFlying(true);
                        } else {
                            Ui(function() {
                                var dialog = new app.AlertDialog.Builder(ctx);
                                dialog.setTitle("选择暗杀对象");
                                var lay = new wg.LinearLayout(ctx);
                                lay.setOrientation(1);
                                var check = addCheckBox(lay, "(勾选/不勾选)随机闪现/背后闪现", function() {}, 0, 14, true);
                                invalidate();
                                for (var i in players) {
                                    addButton(lay, Player.getName(players[i]), eval("function(){startFlash(" + String(players[i]) + "," + String(check.isChecked()) + ");}"), null, {
                                        wid: -1
                                    }, 15);
                                }
                                dialog.setView(scroll(lay));
                                dialog.setNegativeButton("取消", null);
                                dialog.show();
                            });
                        }
                    } catch (err) {
                        showTip(err, 1);
                    }
                }

                function startFlash(player, flashMode) {
                    showTip("➡暗杀现开始，如需停止请再次点击按钮", 1);
                    runThread(function() {
                        try {
                            flashing = true;
                            while (flashing) {
                                invalidate();
                                if (players.indexOf(player) == -1) {
                                    flashing = false;
                                    Player.setFlying(true);
                                    showTip("➡目标已死亡，自动结束暗杀");
                                    break;
                                }
                                var yaw;
                                if (flashMode) {
                                    yaw = Math.random() * 360 - 180;
                                } else {
                                    yaw = Entity.getYaw(player) - 180;
                                }
                                var pointX = Entity.getX(player) - Math.sin(yaw * Math.PI / 180) * 2,
                                    pointY = Entity.getY(player) + 0.5,
                                    pointZ = Entity.getZ(player) + Math.cos(yaw * Math.PI / 180) * 2;
                                Entity.setRot(Player.getEntity(), yaw + 180, 30);
                                Entity.setPosition(Player.getEntity(), pointX, pointY, pointZ);
                                Player.setFlying(true);
                                lang.Thread.sleep(300);
                            }
                        } catch (err) {
                            showTip(err, 1);
                        }
                    });
                }

                function setHome() {
                    home = {
                        x: Player.getX(),
                        y: Player.getY() + 1,
                        z: Player.getZ()
                    };
                    showTip("设置家成功");
                    return true;
                }

                function goHome() {
                    home ? Entity.setPosition(Player.getEntity(), home.x, home.y, home.z) : showTip("请先长按设置此处为家");
                }

                function effect() {
                        Ui(function() {
                            try {
                                var dialog = new app.AlertDialog.Builder(ctx);
                                dialog.setTitle("添加物品");
                                var lay = new wg.LinearLayout(ctx);
                                lay.setOrientation(1);
                                var lay4 = new wg.LinearLayout(ctx);
                                lay4.setOrientation(1);
                                var txt = new wg.TextView(ctx);
                                txt.setText("等级为10");
                                txt.setTextSize(15);
                                txt.setTextColor(getColor("green"));
                                txt.setGravity(center);
                                lay4.addView(txt);
                                addButton(lay4, "药效", function() {
                                    effectui();
                                    dialog.dismiss();
                                }, null, {
                                    wid: -1
                                })
                                lay.addView(scroll(lay4));
                                dialog.setView(lay);
                                dialog = dialog.show();
                            } catch (err) {
                                showTip(err, 1)
                            }
                        });
                    }
                    /*□药水效果ID：
                    ◇1速度，Entity.addEffect(Player.getEntity(),1,3276799,1);
                    ◇2缓慢，Entity.addEffect(Player.getEntity(),2,3276799,1);
                    ◇3急迫，Entity.addEffect(Player.getEntity(),3,3276799,1);
                    ◇4挖机疲劳，Entity.addEffect(Player.getEntity(),4,3276799,1);
                    ◇5力量，Entity.addEffect(Player.getEntity(),5,3276799,1);
                    ◇6瞬间治疗，Entity.addEffect(Player.getEntity(),6,3276799,1);
                    ◇7瞬间伤害，Entity.addEffect(Player.getEntity(),7,3276799,1);
                    ◇8跳跃提升，Entity.addEffect(Player.getEntity(),8,3276799,1);
                    ◇9反胃，Entity.addEffect(Player.getEntity(),9,3276799,1);
                    ◇10生命恢复，Entity.addEffect(Player.getEntity(),10,3276799,1);
                    ◇11抗性提升，Entity.addEffect(Player.getEntity(),11,3276799,1);
                    ◇12防火，Entity.addEffect(Player.getEntity(),12,3276799,1);
                    ◇13水下呼吸，Entity.addEffect(Player.getEntity(),13,3276799,1);
                    ◇14隐身，Entity.addEffect(Player.getEntity(),14,3276799,1);
                    ◇15失明，Entity.addEffect(Player.getEntity(),15,3276799,1);
                    ◇16夜视，Entity.addEffect(Player.getEntity(),16,3276799,1);
                    ◇17饥饿，Entity.addEffect(Player.getEntity(),17,3276799,1);
                    ◇18虚弱，Entity.addEffect(Player.getEntity(),18,3276799,1);
                    ◇19中毒，Entity.addEffect(Player.getEntity(),19,3276799,1);
                    ◇20凋零，Entity.addEffect(Player.getEntity(),20,3276799,1);
                    ◇21生命提升，Entity.addEffect(Player.getEntity(),21,3276799,1);
                    ◇22伤害吸收，Entity.addEffect(Player.getEntity(),22,3276799,1);
                    ◇23饱和。Entity.addEffect(Player.getEntity(),23,3276799,1);
                    */

                function zhafang() {
                    function effectui() {
                        Ui(function() {
                            var dialog = new app.AlertDialog.Builder(ctx);
                            dialog.setTitle("炸房实用");
                            var scroll = new wg.ScrollView(ctx);
                            var lay = new wg.LinearLayout(ctx);
                            lay.setOrientation(1);
                            addButton(lay, "◇神装附魔◇", function() {
                                Player.enchant(0, Enchantment.SHARPNESS, -32769)
                                Player.enchant(0, Enchantment.UNBREAKING, -32769)
                                Player.enchant(0, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(0, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(0, Enchantment.LOOTING, -32769)
                                Player.enchant(0, Enchantment.INFINITY, -32769)
                                Player.enchant(0, Enchantment.POWER, -32769)
                                Player.enchant(0, Enchantment.PUNCH, -32769)
                                Player.enchant(0, Enchantment.FLAME, -32769)
                                Player.enchant(0, Enchantment.PROTECTION, -32769)
                                Player.enchant(0, Enchantment.THORNS, -32769)
                                Player.enchant(0, Enchantment.FORTUNE, -32769)
                                Player.enchant(0, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(1, Enchantment.SHARPNESS, -32769)
                                Player.enchant(1, Enchantment.UNBREAKING, -32769)
                                Player.enchant(1, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(1, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(1, Enchantment.LOOTING, -32769)
                                Player.enchant(1, Enchantment.INFINITY, -32769)
                                Player.enchant(1, Enchantment.POWER, -32769)
                                Player.enchant(1, Enchantment.PUNCH, -32769)
                                Player.enchant(1, Enchantment.FLAME, -32769)
                                Player.enchant(1, Enchantment.PROTECTION, -32769)
                                Player.enchant(1, Enchantment.THORNS, -32769)
                                Player.enchant(1, Enchantment.FORTUNE, -32769)
                                Player.enchant(1, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(2, Enchantment.SHARPNESS, -32769)
                                Player.enchant(2, Enchantment.UNBREAKING, -32769)
                                Player.enchant(2, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(2, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(2, Enchantment.LOOTING, -32769)
                                Player.enchant(2, Enchantment.INFINITY, -32769)
                                Player.enchant(2, Enchantment.POWER, -32769)
                                Player.enchant(2, Enchantment.PUNCH, -32769)
                                Player.enchant(2, Enchantment.FLAME, -32769)
                                Player.enchant(2, Enchantment.PROTECTION, -32769)
                                Player.enchant(2, Enchantment.THORNS, -32769)
                                Player.enchant(2, Enchantment.FORTUNE, -32769)
                                Player.enchant(2, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(3, Enchantment.SHARPNESS, -32769)
                                Player.enchant(3, Enchantment.UNBREAKING, -32769)
                                Player.enchant(3, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(3, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(3, Enchantment.LOOTING, -32769)
                                Player.enchant(3, Enchantment.INFINITY, -32769)
                                Player.enchant(3, Enchantment.POWER, -32769)
                                Player.enchant(3, Enchantment.PUNCH, -32769)
                                Player.enchant(3, Enchantment.FLAME, -32769)
                                Player.enchant(3, Enchantment.PROTECTION, -32769)
                                Player.enchant(3, Enchantment.THORNS, -32769)
                                Player.enchant(3, Enchantment.FORTUNE, -32769)
                                Player.enchant(3, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(4, Enchantment.SHARPNESS, -32769)
                                Player.enchant(4, Enchantment.UNBREAKING, -32769)
                                Player.enchant(4, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(4, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(4, Enchantment.LOOTING, -32769)
                                Player.enchant(4, Enchantment.INFINITY, -32769)
                                Player.enchant(4, Enchantment.POWER, -32769)
                                Player.enchant(4, Enchantment.PUNCH, -32769)
                                Player.enchant(4, Enchantment.FLAME, -32769)
                                Player.enchant(4, Enchantment.PROTECTION, -32769)
                                Player.enchant(4, Enchantment.THORNS, -32769)
                                Player.enchant(4, Enchantment.FORTUNE, -32769)
                                Player.enchant(4, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(5, Enchantment.SHARPNESS, -32769)
                                Player.enchant(5, Enchantment.UNBREAKING, -32769)
                                Player.enchant(5, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(5, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(5, Enchantment.LOOTING, -32769)
                                Player.enchant(5, Enchantment.INFINITY, -32769)
                                Player.enchant(5, Enchantment.POWER, -32769)
                                Player.enchant(5, Enchantment.PUNCH, -32769)
                                Player.enchant(5, Enchantment.FLAME, -32769)
                                Player.enchant(5, Enchantment.PROTECTION, -32769)
                                Player.enchant(5, Enchantment.THORNS, -32769)
                                Player.enchant(5, Enchantment.FORTUNE, -32769)
                                Player.enchant(5, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(6, Enchantment.SHARPNESS, -32769)
                                Player.enchant(6, Enchantment.UNBREAKING, -32769)
                                Player.enchant(6, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(6, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(6, Enchantment.LOOTING, -32769)
                                Player.enchant(6, Enchantment.INFINITY, -32769)
                                Player.enchant(6, Enchantment.POWER, -32769)
                                Player.enchant(6, Enchantment.PUNCH, -32769)
                                Player.enchant(6, Enchantment.FLAME, -32769)
                                Player.enchant(6, Enchantment.PROTECTION, -32769)
                                Player.enchant(6, Enchantment.THORNS, -32769)
                                Player.enchant(6, Enchantment.FORTUNE, -32769)
                                Player.enchant(6, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(7, Enchantment.SHARPNESS, -32769)
                                Player.enchant(7, Enchantment.UNBREAKING, -32769)
                                Player.enchant(7, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(7, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(7, Enchantment.LOOTING, -32769)
                                Player.enchant(7, Enchantment.INFINITY, -32769)
                                Player.enchant(7, Enchantment.POWER, -32769)
                                Player.enchant(7, Enchantment.PUNCH, -32769)
                                Player.enchant(7, Enchantment.FLAME, -32769)
                                Player.enchant(7, Enchantment.PROTECTION, -32769)
                                Player.enchant(7, Enchantment.THORNS, -32769)
                                Player.enchant(7, Enchantment.FORTUNE, -32769)
                                Player.enchant(7, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(8, Enchantment.SHARPNESS, -32769)
                                Player.enchant(8, Enchantment.UNBREAKING, -32769)
                                Player.enchant(8, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(8, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(8, Enchantment.LOOTING, -32769)
                                Player.enchant(8, Enchantment.INFINITY, -32769)
                                Player.enchant(8, Enchantment.POWER, -32769)
                                Player.enchant(8, Enchantment.PUNCH, -32769)
                                Player.enchant(8, Enchantment.FLAME, -32769)
                                Player.enchant(8, Enchantment.PROTECTION, -32769)
                                Player.enchant(8, Enchantment.THORNS, -32769)
                                Player.enchant(8, Enchantment.FORTUNE, -32769)
                                Player.enchant(8, Enchantment.EFFICIENCY, -32769)

                                Player.enchant(9, Enchantment.SHARPNESS, -32769)
                                Player.enchant(9, Enchantment.UNBREAKING, -32769)
                                Player.enchant(9, Enchantment.FIRE_ASPECT, -32769)
                                Player.enchant(9, Enchantment.KNOCKBACK, -32769)
                                Player.enchant(9, Enchantment.LOOTING, -32769)
                                Player.enchant(9, Enchantment.INFINITY, -32769)
                                Player.enchant(9, Enchantment.POWER, -32769)
                                Player.enchant(9, Enchantment.PUNCH, -32769)
                                Player.enchant(9, Enchantment.FLAME, -32769)
                                Player.enchant(9, Enchantment.PROTECTION, -32769)
                                Player.enchant(9, Enchantment.THORNS, -32769)
                                Player.enchant(9, Enchantment.FORTUNE, -32769)
                                Player.enchant(9, Enchantment.EFFICIENCY, -32769)
                                dialog.dismiss();
                                showTip("已添加");
                            }, null, {
                                wid: -1
                            });
                            scroll.addView(lay);
                            dialog.setView(scroll);
                            dialog.setMessage("炸房实用功能  By Hacker、麦块小萌");
                            dialog = dialog.show();
                        });
                    }




                }




                function effectui() {
                    Ui(function() {
                        var dialog = new app.AlertDialog.Builder(ctx);
                        dialog.setTitle("添加药效");
                        var scroll = new wg.ScrollView(ctx);
                        var lay = new wg.LinearLayout(ctx);
                        lay.setOrientation(1);
                        addButton(lay, "◇1速度◇", function() {
                            Entity.addEffect(Player.getEntity(), 1, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇2缓慢◇", function() {
                            Entity.addEffect(Player.getEntity(), 2, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇3急迫◇", function() {
                            Entity.addEffect(Player.getEntity(), 3, 3276799, 255);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇4挖掘疲劳◇", function() {
                            Entity.addEffect(Player.getEntity(), 4, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇5力量◇", function() {
                            Entity.addEffect(Player.getEntity(), 5, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇6瞬间治疗◇", function() {
                            Entity.addEffect(Player.getEntity(), 6, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇7快乐水◇", function() {
                            Entity.addEffect(Player.getEntity(), 7, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇8跳跃提升◇", function() {
                            Entity.addEffect(Player.getEntity(), 8, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇9反胃◇", function() {
                            Entity.addEffect(Player.getEntity(), 9, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇10生命恢复◇", function() {
                            Entity.addEffect(Player.getEntity(), 10, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇11抗性提升◇", function() {
                            Entity.addEffect(Player.getEntity(), 11, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇12防火◇", function() {
                            Entity.addEffect(Player.getEntity(), 12, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇13水下呼吸◇", function() {
                            Entity.addEffect(Player.getEntity(), 13, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇14隐身◇", function() {
                            Entity.addEffect(Player.getEntity(), 14, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇15失明◇", function() {
                            Entity.addEffect(Player.getEntity(), 15, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇16夜视◇", function() {
                            Entity.addEffect(Player.getEntity(), 16, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇17饥饿◇", function() {
                            Entity.addEffect(Player.getEntity(), 17, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇18虚弱◇", function() {
                            Entity.addEffect(Player.getEntity(), 18, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇19中毒◇", function() {
                            Entity.addEffect(Player.getEntity(), 19, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇20凋零◇", function() {
                            Entity.addEffect(Player.getEntity(), 20, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇21生命提升◇", function() {
                            Entity.addEffect(Player.getEntity(), 21, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇22伤害吸收◇", function() {
                            Entity.addEffect(Player.getEntity(), 22, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇23饱和◇", function() {
                            Entity.addEffect(Player.getEntity(), 23, 3276799, 10);
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "◇关闭所有◇", function() {
                            Entity.removeAllEffects(Player.getEntity());
                            showTip("完毕");
                        }, null, {
                            wid: -1
                        });
                        scroll.addView(lay);
                        dialog.setView(scroll);
                        dialog.setMessage("请选择药水类型  By Hacker、麦块小萌");
                        dialog = dialog.show();
                    });
                }


                function wupin() {
                    Ui(function() {
                        try {
                            var dialog = new app.AlertDialog.Builder(ctx);
                            dialog.setTitle("添加物品");
                            var lay = new wg.LinearLayout(ctx);
                            lay.setOrientation(1);
                            var lay3 = new wg.LinearLayout(ctx);
                            lay3.setOrientation(1);
                            var txt = new wg.TextView(ctx);
                            txt.setText("物品将会在你手上");
                            txt.setTextSize(15);
                            txt.setTextColor(getColor("green"));
                            txt.setGravity(center);
                            lay3.addView(txt);
                            addButton(lay3, "蛋卵", function() {
                                danluan();
                                dialog.dismiss();
                            }, null, {
                                wid: -1
                            })
                            addButton(lay3, "方块(没多少)", function() {
                                blocks();
                                dialog.dismiss();
                            }, null, {
                                wid: -1
                            })
                            lay.addView(scroll(lay3));
                            dialog.setView(lay);
                            dialog = dialog.show();
                        } catch (err) {
                            showTip(err, 1)
                        }
                    });
                }

                function blocks() {
                    Ui(function() {
                        var dialog = new app.AlertDialog.Builder(ctx);
                        dialog.setTitle("添加方块");
                        var scroll = new wg.ScrollView(ctx);
                        var lay = new wg.LinearLayout(ctx);
                        lay.setOrientation(1);
                        addButton(lay, "鸡岩", function() {
                            addItemInventory(7, 64, 0)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        scroll.addView(lay);
                        dialog.setView(scroll);
                        dialog.setMessage("请选择方块类型  By Hacker、麦块小萌");
                        dialog = dialog.show();
                    });
                }

                function danluan() {
                    Ui(function() {
                        var dialog = new app.AlertDialog.Builder(ctx);
                        dialog.setTitle("添加蛋卵");
                        var scroll = new wg.ScrollView(ctx);
                        var lay = new wg.LinearLayout(ctx);
                        lay.setOrientation(1);
                        addButton(lay, "炸服蛋", function() {
                            Entity.setCarriedItem(getPlayerEnt(), 383, 64, 259)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "末影水晶蛋", function() {
                            Entity.setCarriedItem(getPlayerEnt(), 383, 64, 71)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "末影龙蛋", function() {
                            Entity.setCarriedItem(getPlayerEnt(), 383, 64, 53)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "凋零蛋", function() {
                            Entity.setCarriedItem(getPlayerEnt(), 383, 64, 52)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "闪电蛋", function() {
                            Entity.setCarriedItem(getPlayerEnt(), 383, 64, 93)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "TNT蛋", function() {
                            Entity.setCarriedItem(getPlayerEnt(), 383, 64, 65)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "龙吸蛋", function() {
                            Entity.setCarriedItem(getPlayerEnt(), 383, 64, 79)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "火球蛋", function() {
                            Entity.setCarriedItem(getPlayerEnt(), 383, 64, 85)
                            dialog.dismiss();
                            showTip("已添加");
                        }, null, {
                            wid: -1
                        });
                        scroll.addView(lay);
                        dialog.setView(scroll);
                        dialog.setMessage("请选择蛋卵类型  By Hacker、麦块小萌");
                        dialog = dialog.show();
                    });
                }



                function enchant() {
                    Ui(function() {
                        try {
                            var dialog = new app.AlertDialog.Builder(ctx);
                            dialog.setTitle("高级附魔");
                            var lay = new wg.LinearLayout(ctx);
                            lay.setOrientation(1);
                            var lay2 = new wg.LinearLayout(ctx);
                            lay2.setOrientation(1);
                            var txt = new wg.TextView(ctx);
                            txt.setText("请将要附魔的物品拿在手上");
                            txt.setTextSize(15);
                            txt.setTextColor(getColor("green"));
                            txt.setGravity(center);
                            lay2.addView(txt);
                            addButton(lay2, "一键神装", function() {
                                oneKey();
                                dialog.dismiss();
                            }, null, {
                                wid: -1
                            })
                            var txt = new wg.TextView(ctx);
                            txt.setText("等级:32767");
                            lay2.addView(txt);
                            var bar = new wg.SeekBar(ctx);
                            bar.setMax(32766);
                            bar.setProgress(32766);
                            bar.setOnSeekBarChangeListener(new wg.SeekBar.OnSeekBarChangeListener({
                                onProgressChanged: function(v) {
                                    txt.setText("等级:" + (Number(v.getProgress()) + 1));
                                }
                            }));
                            lay2.addView(bar);
                            lay.addView(lay2);
                            var lay1 = new wg.LinearLayout(ctx);
                            lay1.setOrientation(1);
                            for (var i in enchId) addButton(lay1, i, function(v) {
                                try {
                                    Player.enchant(Player.getSelectedSlotId(), enchId[String(v.getText())], Number(bar.getProgress()) + 1);
                                } catch (err) {
                                    showTip(err);
                                }
                                dialog.dismiss();
                                showTip("已附魔" + v.getText());
                            }, null, {
                                wid: -1
                            });
                            lay.addView(scroll(lay1));
                            dialog.setView(lay);
                            dialog = dialog.show();
                        } catch (err) {
                            showTip(err, 1)
                        }
                    });
                }

                function oneKey() {
                    Ui(function() {
                        var dialog = new app.AlertDialog.Builder(ctx);
                        dialog.setTitle("一剑神装");
                        var scroll = new wg.ScrollView(ctx);
                        var lay = new wg.LinearLayout(ctx);
                        lay.setOrientation(1);
                        addButton(lay, "神剑", function() {
                            var slot = Player.getSelectedSlotId();
                            Entity.setCarriedItem(Player.getEntity(), 276, 1);
                            Player.enchant(slot, enchId.锋利, 32767);
                            Player.enchant(slot, enchId.耐久, 32767);
                            Player.enchant(slot, enchId.击退, 32767);
                            Player.enchant(slot, enchId.火焰附加, 32767);
                            dialog.dismiss();
                            showTip("神装制作完成");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "神弓", function() {
                            var slot = Player.getSelectedSlotId();
                            Entity.setCarriedItem(Player.getEntity(), 261, 1);
                            Player.enchant(slot, enchId.力量, 32767);
                            Player.enchant(slot, enchId.耐久, 32767);
                            Player.enchant(slot, enchId.冲击, 32767);
                            Player.enchant(slot, enchId.无限, 1);
                            dialog.dismiss();
                            showTip("神装制作完成");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "神甲", function() {
                            var slot = Player.getSelectedSlotId();
                            Entity.setCarriedItem(Player.getEntity(), 311, 1);
                            Player.enchant(slot, enchId.保护, 32767);
                            Player.enchant(slot, enchId.耐久, 32767);
                            Player.enchant(slot, enchId.荆棘, 32767);
                            dialog.dismiss();
                            showTip("神装制作完成");
                        }, null, {
                            wid: -1
                        });
                        addButton(lay, "箭", function() {
                            var slot = Player.getSelectedSlotId();
                            Entity.setCarriedItem(Player.getEntity(), 262, 1);
                            dialog.dismiss();
                            showTip("箭添加完成");
                        }, null, {
                            wid: -1
                        });
                        scroll.addView(lay);
                        dialog.setView(scroll);
                        dialog.setMessage("请选择神装类型");
                        dialog = dialog.show();
                    });
                }

                function radar() {
                    try {
                        if (radarWin) {
                            if (radarWin.isShowing()) {
                                state = 2;
                                radarWin.dismiss();
                            } else if (state == 3) {
                                radarWin.showAtLocation(mainView, right | top, 0, hei / 7);
                                state = 1;
                                scan();
                            }
                        } else {
                            Ui(function() {
                                radarWin = new wg.PopupWindow(ctx);
                                radarShow = new wg.ImageView(ctx);
                                radarShow.setImageBitmap(radarPic);
                                radarWin.setContentView(radarShow);
                                radarWin.setWidth(radarPic.getWidth());
                                radarWin.setHeight(radarPic.getHeight());
                                radarWin.setBackgroundDrawable(getColorDrawable("dkgray"));
                                radarWin.showAtLocation(mainView, right | top, 0, hei / 7);
                                state = 1;
                                scan();
                            });
                            showTip("雷达已开启，再次点击关闭，长按显示所有人名称与距离", 1);
                        }
                    } catch (err) {
                        print(err);
                    }
                }

                function runThread(func) {
                    var a = new java.lang.Thread(new java.lang.Runnable({
                        run: func
                    }));
                    a.start();
                    return a;
                }

                function thread(func) {
                    var a = new java.lang.Thread(new java.lang.Runnable({
                        run: func
                    }));
                    return a;
                }

                function showTip(text, show) {
                    Ui(function() {
                        var toast = wg.Toast.makeText(ctx, String(text), show ? show : 0);
                        toast.show();
                    });
                }

                function getNames() {
                    var arr = [],
                        x = Player.getX(),
                        y = Player.getY(),
                        z = Player.getZ();
                    invalidate();
                    for (var i in players) arr.push(Player.getName(players[i]) + "--" + Math.round(gougu(x - Entity.getX(players[i]), y - Entity.getY(players[i]), z - Entity.getZ(players[i]))));
                    showDialog("所有玩家名", "若在游戏房间外使用，则列表不会正确显示", arr.join("\n"), {
                        txt: "关闭"
                    });
                    return true;
                }

                function showDialog(title, message, text, negative, positive, neutral, uncancel) {
                    Ui(function() {
                        try {
                            var dialog = new app.AlertDialog.Builder(ctx);
                            dialog.setTitle(title);
                            var scroll = new wg.ScrollView(ctx);
                            if (typeof(text) == "string") {
                                getMessage = new wg.EditText(ctx);
                                getMessage.setText(text);
                                scroll.addView(getMessage);
                            } else if (typeof(text) == "object") {
                                scroll.addView(text);
                            }
                            dialog.setView(scroll);
                            if (negative) dialog.setNegativeButton(negative.txt ? negative.txt : "", negative.command ? negative.command : null);
                            if (positive) dialog.setPositiveButton(positive.txt ? positive.txt : "", positive.command ? positive.command : null);
                            if (neutral) dialog.setNeutralButton(neutral.txt ? neutral.txt : "", neutral.command ? neutral.command : null);
                            dialog.setMessage(message);
                            dialog.setCancelable(uncancel ? false : true);
                            dialog.show();
                        } catch (err) {
                            showTip(err, 1)
                        }
                    });
                    return true;
                }

                function addCheckBox(parent, text, command, ave, size, checked) {
                    try {
                        var check = new wg.CheckBox(ctx);
                        check.setText(text ? text : "");
                        check.setChecked(checked ? checked : false);
                        if (size) check.setTextSize(size);
                        if (command) check.setOnCheckedChangeListener(new wg.CompoundButton.OnCheckedChangeListener({
                            onCheckedChanged: command
                        }));
                        aveLayout(check, typeof(ave) == "number" ? ave : ave.type, ave.wid, ave.hei);
                        parent.addView(check);
                        return check;
                    } catch (err) {
                        print(err)
                    }
                }

                function aveLayout(view, ave, width, height, weight) {
                    switch (ave) {
                        case 1:
                            view.setLayoutParams(new wg.RelativeLayout.LayoutParams(width ? width : -2, height ? height : -2, weight ? weight : 1));
                            return view;
                        default:
                            view.setLayoutParams(new wg.LinearLayout.LayoutParams(width ? width : -2, height ? height : -2, weight ? weight : 1));
                            return view;
                    }
                }

                function Ui(command) {
                    ctx.runOnUiThread(new java.lang.Runnable({
                        run: command
                    }));
                }

                function getColorDrawable(color) {
                    return new grap.drawable.ColorDrawable(getColor(color));
                }

                function getColor(color) {
                    return eval("grap.Color." + color.toUpperCase());
                }

                function scan() {
                    runThread(function() {
                        abc: while (1) {
                            try {
                                if (state == 1) {
                                    var x = Player.getX(),
                                        z = Player.getZ();
                                    invalidate();
                                    if (players.length > 0) {
                                        var scaleX = null,
                                            scaleZ = null;
                                        for (var i in players) {
                                            if (state == 2) break abc;
                                            var ls = Math.abs(x - Entity.getX(players[i]));
                                            if (scaleX == null || ls > scaleX) {
                                                scaleX = ls;
                                            }
                                            ls = Math.abs(z - Entity.getZ(players[i]));
                                            if (scaleZ == null || ls > scaleZ) {
                                                scaleZ = ls;
                                            }
                                        }
                                        var distX = scaleX * 10 / 9,
                                            distZ = scaleZ * 10 / 9,
                                            baseX = x - distX,
                                            baseZ = z - distZ,
                                            ratioX = lenX / 2 / distX,
                                            ratioZ = lenZ / 2 / distZ;
                                        for (var i in players) {
                                            if (state == 2) break abc;
                                            var name = Player.getName(players[i]),
                                                color = name.length > 3 && name.substr(0, 1) == "§" && getColorValue(name.substr(3, 1)) ? getColorValue(name.substr(3, 1)) : grap.Color.WHITE,
                                                actX = lenX - Math.abs(Entity.getX(players[i]) - baseX) * ratioX,
                                                actZ = Math.abs(Entity.getZ(players[i]) - baseZ) * ratioZ;
                                            draw(actZ, actX, color);
                                            drawPoint(players[i], actZ, actX, color);
                                        }
                                    }
                                    draw(lenZ / 2, lenX / 2, grap.Color.MAGENTA);
                                    drawPoint(Player.getEntity(), lenZ / 2, lenX / 2, grap.Color.MAGENTA);
                                    Ui(function() {
                                        radarShow.setImageBitmap(radarPic);
                                        radarPic = grap.Bitmap.createBitmap(lenZ, lenX, grap.Bitmap.Config.ARGB_8888);
                                    });
                                } else {
                                    break;
                                }
                                java.lang.Thread.sleep(1000);
                            } catch (err) {
                                showTip(err, 1);
                                break;
                            }
                        }
                        state = 3;
                        Ui(function() {
                            if (radarWin.isShowing()) radarWin.dismiss();
                        });
                    });
                }

                function draw(x, y, color) {
                    var canvas = new grap.Canvas(radarPic);
                    var paint = getPaint({
                        color: color,
                        dither: true
                    });
                    canvas.drawCircle(x, y, radius, paint);
                }

                function drawPoint(player, x, y, color) {
                    var ratio = Math.PI / 180,
                        yaw = Entity.getYaw(player);
                    var x0 = radius * 1.3 * Math.cos(yaw * ratio),
                        y0 = radius * 1.3 * Math.sin(yaw * ratio),
                        x1 = x0 + radius * Math.cos((yaw - 90) * ratio),
                        y1 = y0 + radius * Math.sin((yaw - 90) * ratio),
                        x2 = x0 + radius * Math.cos((yaw + 90) * ratio),
                        y2 = y0 + radius * Math.sin((yaw + 90) * ratio),
                        x3 = x0 * 2,
                        y3 = y0 * 2;
                    var canvas = new grap.Canvas(radarPic);
                    var paint = getPaint({
                        color: color,
                        dither: true,
                        style: grap.Paint.Style.FILL
                    });
                    var path = new grap.Path();
                    path.moveTo(x + x3, y + y3);
                    path.lineTo(x + x1, y + y1);
                    path.lineTo(x + x2, y + y2);
                    path.close();
                    canvas.drawPath(path, paint);
                }

                function gougu() {
                    if (arguments.length <= 3) {
                        var result = 0;
                        for (var i in arguments) {
                            result += arguments[i] * arguments[i];
                        }
                        return Math.sqrt(result);
                    } else {
                        return null;
                    }
                }

                function scroll(view, horizontal) {
                    var scrollView = horizontal ? new wg.HorizontalScrollView(ctx) : new wg.ScrollView(ctx);
                    scrollView.addView(view);
                    return scrollView;
                }

                function getColorValue(str) {
                    switch (str) {
                        case "红":
                            return grap.Color.RED;
                        case "黄":
                            return grap.Color.YELLOW;
                        case "蓝":
                            return grap.Color.BLUE;
                        case "绿":
                            return grap.Color.GREEN;
                        case "青":
                            return grap.Color.CYAN;
                        case "紫":
                            return grap.Color.rgb(160, 32, 240);
                        case "灰":
                            return grap.Color.GRAY;
                        case "白":
                            return grap.Color.WHITE;
                        case "黑":
                            return grap.Color.BLACK;
                        case "橙":
                            return grap.Color.rgb(255, 165, 0);
                        default:
                            return null;
                    }
                }

                function getPaint(fields) {
                    var paint = new grap.Paint();
                    if (fields.color) paint.setColor(fields.color);
                    if (fields.dither) paint.setDither(fields.dither);
                    if (fields.antiAlias) paint.setAntiAlias(fields.antiAlias);
                    if (fields.shader) paint.setShader(fields.shader);
                    if (fields.width) paint.setStrokeWidth(fields.width);
                    if (fields.style) paint.setStyle(fields.style);
                    return paint;
                }

                function addButton(parent, text, command, longCommand, ave, size) {
                        try {
                            var button = new wg.Button(ctx);
                            button.setText(text ? text : "");
                            if (size) button.setTextSize(1, size);
                            if (command) button.setOnClickListener(new view.View.OnClickListener({
                                onClick: command
                            }));
                            if (longCommand) button.setOnLongClickListener(new view.View.OnLongClickListener({
                                onLongClick: longCommand
                            }));
                            aveLayout(button, typeof(ave) == "number" ? ave : ave.type, ave.wid, ave.hei);
                            parent.addView(button);
                            return button;
                        } catch (err) {
                            print(err)
                        }
                    }
                    //end
            }
        }))
        layout.addView(开启黑客端)



        var 隔空挖 = new android.widget.Button(ctx)
        隔空挖.setText("隔空◎蛋糕")
        隔空挖.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                if (隔空挖蛋糕 == false) {
                    隔空挖蛋糕 = true
                    load("已开启隔空挖蛋糕")
                } else
                if (隔空挖蛋糕 == true) {
                    隔空挖蛋糕 = false
                    load("已关闭隔空挖蛋糕")
                }
            }
        }))
        layout.addView(隔空挖)

        var 炸房 = new android.widget.Button(ctx)
        炸房.setText("附魔◎炸房")
        炸房.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Player.enchant(0, Enchantment.SHARPNESS, -32769)
                Player.enchant(0, Enchantment.UNBREAKING, -32769)
                Player.enchant(0, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(0, Enchantment.KNOCKBACK, -32769)
                Player.enchant(0, Enchantment.LOOTING, -32769)
                Player.enchant(0, Enchantment.INFINITY, -32769)
                Player.enchant(0, Enchantment.POWER, -32769)
                Player.enchant(0, Enchantment.PUNCH, -32769)
                Player.enchant(0, Enchantment.FLAME, -32769)
                Player.enchant(0, Enchantment.PROTECTION, -32769)
                Player.enchant(0, Enchantment.THORNS, -32769)
                Player.enchant(0, Enchantment.FORTUNE, -32769)
                Player.enchant(0, Enchantment.EFFICIENCY, -32769)

                Player.enchant(1, Enchantment.SHARPNESS, -32769)
                Player.enchant(1, Enchantment.UNBREAKING, -32769)
                Player.enchant(1, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(1, Enchantment.KNOCKBACK, -32769)
                Player.enchant(1, Enchantment.LOOTING, -32769)
                Player.enchant(1, Enchantment.INFINITY, -32769)
                Player.enchant(1, Enchantment.POWER, -32769)
                Player.enchant(1, Enchantment.PUNCH, -32769)
                Player.enchant(1, Enchantment.FLAME, -32769)
                Player.enchant(1, Enchantment.PROTECTION, -32769)
                Player.enchant(1, Enchantment.THORNS, -32769)
                Player.enchant(1, Enchantment.FORTUNE, -32769)
                Player.enchant(1, Enchantment.EFFICIENCY, -32769)

                Player.enchant(2, Enchantment.SHARPNESS, -32769)
                Player.enchant(2, Enchantment.UNBREAKING, -32769)
                Player.enchant(2, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(2, Enchantment.KNOCKBACK, -32769)
                Player.enchant(2, Enchantment.LOOTING, -32769)
                Player.enchant(2, Enchantment.INFINITY, -32769)
                Player.enchant(2, Enchantment.POWER, -32769)
                Player.enchant(2, Enchantment.PUNCH, -32769)
                Player.enchant(2, Enchantment.FLAME, -32769)
                Player.enchant(2, Enchantment.PROTECTION, -32769)
                Player.enchant(2, Enchantment.THORNS, -32769)
                Player.enchant(2, Enchantment.FORTUNE, -32769)
                Player.enchant(2, Enchantment.EFFICIENCY, -32769)

                Player.enchant(3, Enchantment.SHARPNESS, -32769)
                Player.enchant(3, Enchantment.UNBREAKING, -32769)
                Player.enchant(3, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(3, Enchantment.KNOCKBACK, -32769)
                Player.enchant(3, Enchantment.LOOTING, -32769)
                Player.enchant(3, Enchantment.INFINITY, -32769)
                Player.enchant(3, Enchantment.POWER, -32769)
                Player.enchant(3, Enchantment.PUNCH, -32769)
                Player.enchant(3, Enchantment.FLAME, -32769)
                Player.enchant(3, Enchantment.PROTECTION, -32769)
                Player.enchant(3, Enchantment.THORNS, -32769)
                Player.enchant(3, Enchantment.FORTUNE, -32769)
                Player.enchant(3, Enchantment.EFFICIENCY, -32769)

                Player.enchant(4, Enchantment.SHARPNESS, -32769)
                Player.enchant(4, Enchantment.UNBREAKING, -32769)
                Player.enchant(4, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(4, Enchantment.KNOCKBACK, -32769)
                Player.enchant(4, Enchantment.LOOTING, -32769)
                Player.enchant(4, Enchantment.INFINITY, -32769)
                Player.enchant(4, Enchantment.POWER, -32769)
                Player.enchant(4, Enchantment.PUNCH, -32769)
                Player.enchant(4, Enchantment.FLAME, -32769)
                Player.enchant(4, Enchantment.PROTECTION, -32769)
                Player.enchant(4, Enchantment.THORNS, -32769)
                Player.enchant(4, Enchantment.FORTUNE, -32769)
                Player.enchant(4, Enchantment.EFFICIENCY, -32769)

                Player.enchant(5, Enchantment.SHARPNESS, -32769)
                Player.enchant(5, Enchantment.UNBREAKING, -32769)
                Player.enchant(5, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(5, Enchantment.KNOCKBACK, -32769)
                Player.enchant(5, Enchantment.LOOTING, -32769)
                Player.enchant(5, Enchantment.INFINITY, -32769)
                Player.enchant(5, Enchantment.POWER, -32769)
                Player.enchant(5, Enchantment.PUNCH, -32769)
                Player.enchant(5, Enchantment.FLAME, -32769)
                Player.enchant(5, Enchantment.PROTECTION, -32769)
                Player.enchant(5, Enchantment.THORNS, -32769)
                Player.enchant(5, Enchantment.FORTUNE, -32769)
                Player.enchant(5, Enchantment.EFFICIENCY, -32769)

                Player.enchant(6, Enchantment.SHARPNESS, -32769)
                Player.enchant(6, Enchantment.UNBREAKING, -32769)
                Player.enchant(6, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(6, Enchantment.KNOCKBACK, -32769)
                Player.enchant(6, Enchantment.LOOTING, -32769)
                Player.enchant(6, Enchantment.INFINITY, -32769)
                Player.enchant(6, Enchantment.POWER, -32769)
                Player.enchant(6, Enchantment.PUNCH, -32769)
                Player.enchant(6, Enchantment.FLAME, -32769)
                Player.enchant(6, Enchantment.PROTECTION, -32769)
                Player.enchant(6, Enchantment.THORNS, -32769)
                Player.enchant(6, Enchantment.FORTUNE, -32769)
                Player.enchant(6, Enchantment.EFFICIENCY, -32769)

                Player.enchant(7, Enchantment.SHARPNESS, -32769)
                Player.enchant(7, Enchantment.UNBREAKING, -32769)
                Player.enchant(7, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(7, Enchantment.KNOCKBACK, -32769)
                Player.enchant(7, Enchantment.LOOTING, -32769)
                Player.enchant(7, Enchantment.INFINITY, -32769)
                Player.enchant(7, Enchantment.POWER, -32769)
                Player.enchant(7, Enchantment.PUNCH, -32769)
                Player.enchant(7, Enchantment.FLAME, -32769)
                Player.enchant(7, Enchantment.PROTECTION, -32769)
                Player.enchant(7, Enchantment.THORNS, -32769)
                Player.enchant(7, Enchantment.FORTUNE, -32769)
                Player.enchant(7, Enchantment.EFFICIENCY, -32769)

                Player.enchant(8, Enchantment.SHARPNESS, -32769)
                Player.enchant(8, Enchantment.UNBREAKING, -32769)
                Player.enchant(8, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(8, Enchantment.KNOCKBACK, -32769)
                Player.enchant(8, Enchantment.LOOTING, -32769)
                Player.enchant(8, Enchantment.INFINITY, -32769)
                Player.enchant(8, Enchantment.POWER, -32769)
                Player.enchant(8, Enchantment.PUNCH, -32769)
                Player.enchant(8, Enchantment.FLAME, -32769)
                Player.enchant(8, Enchantment.PROTECTION, -32769)
                Player.enchant(8, Enchantment.THORNS, -32769)
                Player.enchant(8, Enchantment.FORTUNE, -32769)
                Player.enchant(8, Enchantment.EFFICIENCY, -32769)

                Player.enchant(9, Enchantment.SHARPNESS, -32769)
                Player.enchant(9, Enchantment.UNBREAKING, -32769)
                Player.enchant(9, Enchantment.FIRE_ASPECT, -32769)
                Player.enchant(9, Enchantment.KNOCKBACK, -32769)
                Player.enchant(9, Enchantment.LOOTING, -32769)
                Player.enchant(9, Enchantment.INFINITY, -32769)
                Player.enchant(9, Enchantment.POWER, -32769)
                Player.enchant(9, Enchantment.PUNCH, -32769)
                Player.enchant(9, Enchantment.FLAME, -32769)
                Player.enchant(9, Enchantment.PROTECTION, -32769)
                Player.enchant(9, Enchantment.THORNS, -32769)
                Player.enchant(9, Enchantment.FORTUNE, -32769)
                Player.enchant(9, Enchantment.EFFICIENCY, -32769)
            }
        }))
        layout.addView(炸房)

        var 添加物品 = new android.widget.Button(ctx)
        添加物品.setText("添加◎物品")
        添加物品.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();
                item();
            }
        }))
        layout.addView(添加物品)

        var 坐标传送 = new android.widget.Button(ctx)
        坐标传送.setText("聊天◎喷人")
        坐标传送.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();
                喷();
            }
        }))
        layout.addView(坐标传送)

        var 坐标传送 = new android.widget.Button(ctx)
        坐标传送.setText("播放◎音乐")
        坐标传送.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu.dismiss();
                音乐();
            }
        }))
        layout.addView(坐标传送)



        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 150))
        menu.setHeight(dip2px(ctx, 390))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60, 0, 100, 100)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        print(err)
    }
}


function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout
}



function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout
}

function 玩家管理按键() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);

            var button = new android.widget.Button(ctx);
            button.setText("玩家")
            button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            button.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg) {
                    玩家列表菜单();
                }
            }))
            layout.addView(button);

            win.setContentView(layout);
            win.setWidth(110);
            win.setHeight(100);
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 500, 150);
        }
    }));
}

function 玩家列表菜单() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx)
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)

        //Player.getName(uuid)
        var 玩家列表 = Server.getAllPlayers()
        var 玩家0 = 玩家列表[0]
        var 玩家1 = 玩家列表[1]
        var 玩家2 = 玩家列表[2]
        var 玩家3 = 玩家列表[3]
        var 玩家4 = 玩家列表[4]
        var 玩家5 = 玩家列表[5]
        var 玩家6 = 玩家列表[6]
        var 玩家7 = 玩家列表[7]
        var 玩家8 = 玩家列表[8]
        var 玩家9 = 玩家列表[9]
        var 玩家10 = 玩家列表[10]
        var 玩家11 = 玩家列表[11]

        var 功能钮0 = new android.widget.Button(ctx)
        功能钮0.setText("选择功能配置")
        功能钮0.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                玩家配置菜单();
                menu.dismiss();
            }
        }))
        layout.addView(功能钮0)

        var 玩家钮0 = new android.widget.Button(ctx)
        玩家钮0.setText(Player.getName(玩家0))
        玩家钮0.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家0
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮0)

        var 玩家钮1 = new android.widget.Button(ctx)
        玩家钮1.setText(Player.getName(玩家1))
        玩家钮1.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家1
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮1)

        var 玩家钮2 = new android.widget.Button(ctx)
        玩家钮2.setText(Player.getName(玩家2))
        玩家钮2.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家2
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮2)

        var 玩家钮3 = new android.widget.Button(ctx)
        玩家钮3.setText(Player.getName(玩家3))
        玩家钮3.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家3
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮3)

        var 玩家钮4 = new android.widget.Button(ctx)
        玩家钮4.setText(Player.getName(玩家4))
        玩家钮4.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家4
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮4)

        var 玩家钮5 = new android.widget.Button(ctx)
        玩家钮5.setText(Player.getName(玩家5))
        玩家钮5.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家5
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮5)

        var 玩家钮6 = new android.widget.Button(ctx)
        玩家钮6.setText(Player.getName(玩家6))
        玩家钮6.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家6
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮6)

        var 玩家钮7 = new android.widget.Button(ctx)
        玩家钮7.setText(Player.getName(玩家7))
        玩家钮7.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家7
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮7)

        var 玩家钮8 = new android.widget.Button(ctx)
        玩家钮8.setText(Player.getName(玩家8))
        玩家钮8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家8
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮8)

        var 玩家钮9 = new android.widget.Button(ctx)
        玩家钮9.setText(Player.getName(玩家9))
        玩家钮9.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家9
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮9)

        var 玩家钮10 = new android.widget.Button(ctx)
        玩家钮10.setText(Player.getName(玩家10))
        玩家钮10.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家10
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮10)

        var 玩家钮11 = new android.widget.Button(ctx)
        玩家钮11.setText(Player.getName(玩家11))
        玩家钮11.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                当前锁定玩家 = 玩家11
                if (长臂猿 == true) {
                    Entity.setCollisionSize(当前锁定玩家, 8, 7);
                }
                var x = Entity.getX(当前锁定玩家)
                var y = Entity.getY(当前锁定玩家)
                var z = Entity.getZ(当前锁定玩家)
                传送玩家(x, y, z)
            }
        }))
        layout.addView(玩家钮11)




        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 150))
        menu.setHeight(dip2px(ctx, 390))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60, 0, 100, 100)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        print(err)
    }
}


function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout
}

function 玩家配置菜单() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx)
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)

        var 回上页 = new android.widget.Button(ctx)
        回上页.setText("回上页")
        回上页.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                玩家列表菜单();
                menu.dismiss();
            }
        }))
        layout.addView(回上页)


        var cht = new android.widget.CheckBox(ctx);
        cht.setText("长臂猿")
        cht.setChecked(长臂猿)
        cht.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener() {
            onCheckedChanged: function(v, isChecked) {
                if (长臂猿 == false) {
                    长臂猿 = true
                } else
                if (长臂猿 == true) {
                    长臂猿 = false
                }
            }
        });
        layout.addView(cht)

        var cht1 = new android.widget.CheckBox(ctx);
        cht1.setText("骑玩家")
        cht1.setChecked(骑玩家)
        cht1.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener() {
            onCheckedChanged: function(v, isChecked) {
                if (骑玩家 == false) {
                    骑玩家 = true
                } else
                if (骑玩家 == true) {
                    骑玩家 = false
                }
            }
        });
        layout.addView(cht1)

        var cht2 = new android.widget.CheckBox(ctx);
        cht2.setText("自瞄")
        cht2.setChecked(自瞄)
        cht2.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener() {
            onCheckedChanged: function(v, isChecked) {
                if (自瞄 == false) {
                    自瞄 = true
                } else
                if (自瞄 == true) {
                    自瞄 = false
                }
            }
        });
        layout.addView(cht2)



        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 150))
        menu.setHeight(dip2px(ctx, 390))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60, 0, 100, 100)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        print(err)
    }
}


function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout
}


function useItem(x, y, z, it, bl) {
    if (隔空挖蛋糕 == true) {

        if (Level.getTile(x - 1, y, z) == 92) {
            Level.destroyBlock(x - 1, y, z, true);
        }
        if (Level.getTile(x - 2, y, z) == 92) {
            Level.destroyBlock(x - 2, y, z, true);
        }
        if (Level.getTile(x - 3, y, z) == 92) {
            Level.destroyBlock(x - 3, y, z, true);
        }
        if (Level.getTile(x - 4, y, z) == 92) {
            Level.destroyBlock(x - 4, y, z, true);
        }
        if (Level.getTile(x + 1, y, z) == 92) {
            Level.destroyBlock(x + 1, y, z, true);
        }
        if (Level.getTile(x + 2, y, z) == 92) {
            Level.destroyBlock(x + 2, y, z, true);
        }
        if (Level.getTile(x + 3, y, z) == 92) {
            Level.destroyBlock(x + 3, y, z, true);
        }
        if (Level.getTile(x + 4, y, z) == 92) {
            Level.destroyBlock(x + 4, y, z, true);
        }
        if (Level.getTile(x, y, z + 1) == 92) {
            Level.destroyBlock(x, y, z + 1, true);
        }
        if (Level.getTile(x, y, z + 2) == 92) {
            Level.destroyBlock(x, y, z + 2, true);
        }
        if (Level.getTile(x, y, z + 3) == 92) {
            Level.destroyBlock(x, y, z + 3, true);
        }
        if (Level.getTile(x, y, z + 4) == 92) {
            Level.destroyBlock(x, y, z + 4, true);
        }
        if (Level.getTile(x, y, z - 1) == 92) {
            Level.destroyBlock(x, y, z - 1, true);
        }
        if (Level.getTile(x, y, z - 2) == 92) {
            Level.destroyBlock(x, y, z - 2, true);
        }
        if (Level.getTile(x, y, z - 3) == 92) {
            Level.destroyBlock(x, y, z - 3, true);
        }
        if (Level.getTile(x, y, z - 4) == 92) {
            Level.destroyBlock(x, y, z - 4, true);
        }
        if (Level.getTile(x, y - 1, z) == 92) {
            Level.destroyBlock(x, y - 1, z, true);
        }
        if (Level.getTile(x, y - 2, z) == 92) {
            Level.destroyBlock(x, y - 2, z, true);
        }
        if (Level.getTile(x, y - 3, z) == 92) {
            Level.destroyBlock(x, y - 3, z, true);
        }
        if (Level.getTile(x, y - 4, z) == 92) {
            Level.destroyBlock(x, y - 4, z, true);
        }
    }
}

function crosshairAimAt(ent, pos) {
    if (ent != null) {
        var x = Entity.getX(ent) - getPlayerX();
        var y = Entity.getY(ent) - getPlayerY();
        var z = Entity.getZ(ent) - getPlayerZ();
        if (pos != null && pos instanceof Array) {

            x = Entity.getX(ent) - pos[0];
            y = Entity.getY(ent) - pos[1];
            z = Entity.getZ(ent) - pos[2];
        }
        if (Entity.getEntityTypeId(ent) != 63)
            y += 0.5;
        var a = 0.5 + Entity.getX(ent);
        var b = Entity.getY(ent);
        var c = 0.5 + Entity.getZ(ent);
        var len = Math.sqrt(x * x + y * y + z * z);
        var y = y / len;
        var pitch = Math.asin(y);
        pitch = pitch * 180.0 / Math.PI;
        pitch = -pitch;
        var yaw = -Math.atan2(a - (Player.getX() + 0.5), c - (Player.getZ() + 0.5)) * (180 / Math.PI);
        if (pitch < 89 && pitch > -89) {
            Entity.setRot(Player.getEntity(), yaw, pitch);
        }
    }
}



function 挂墙() {
    var layout = new android.widget.LinearLayout(ctx)
    var menu = new android.widget.PopupWindow(layout)
    menu.setFocusable(true)
    layout.setOrientation(1)
    var layout = new android.widget.LinearLayout(ctx);
    var webview = new android.webkit.WebView(ctx);
    webview.getSettings().setJavaScriptEnabled(true);
    webview.loadUrl("https://sharechain.qq.com/5578b4c14ca9f9bc83047b15b41706c2") //
    var Web = new android.webkit.WebViewClient();
    webview.setWebViewClient(Web);
    layout.addView(webview);
    var mlayout = makeMenu(ctx, layout)
    menu.setContentView(mlayout)
    menu.setWidth(1000)
    menu.setHeight(1000)
    menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT))
    menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0)
}

function 传送() {
    var lybf = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    lybf.runOnUiThread(new java.lang.Runnable({
        run: function() {
            //捕获错误信息
            try {
                var layout = new android.widget.LinearLayout(lybf)

                layout.setOrientation(android.widget.LinearLayout.VERTICAL)
                var cong = new android.app.Dialog(lybf)
                cong.setTitle("传送")
                cong.setContentView(layout)

                var ming = new android.widget.EditText(lybf)
                ming.setHint("x坐标                                ")
                layout.addView(ming)

                var min = new android.widget.EditText(lybf)
                min.setHint("y坐标                                  ")
                layout.addView(min)

                var mi = new android.widget.EditText(lybf)
                mi.setHint("z坐标                                   ")
                layout.addView(mi)



                var button = new android.widget.Button(lybf)
                button.setText("确定")
                button.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(view) {
                        var $传送x
                        var $传送y
                        var $传送z
                        var $传送x = parseInt(ming.getText())
                        var $传送y = parseInt(min.getText())
                        var $传送z = parseInt(mi.getText())
                        setPosition(Player.getEntity(), $传送x, $传送y, $传送z)
                        clientMessage("已传送到x:" + $传送x + " y:" + $传送y + " z:" + $传送z)

                        cong.dismiss()
                    }
                }))
                layout.addView(button)
                cong.show()
            } catch (err) {
                print(err)
            }
        }
    }))
}

function item() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                添加物()
            } catch (err) {
                print(err)
            }
        }
    }))

    function 添加物() {
        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
        var layout = new android.widget.LinearLayout(ctx)
        try {
            var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
            menu.setFocusable(true)
            var layout = new android.widget.LinearLayout(ctx)
            layout.setOrientation(1)
            var 物品ID = new android.widget.EditText(ctx)
            物品ID.setText("")
            物品ID.setHint("物品ID")
            layout.addView(物品ID)

            var 物品特殊值 = new android.widget.EditText(ctx)
            物品特殊值.setText("")
            物品特殊值.setHint("物品特殊值")
            layout.addView(物品特殊值)

            var 确认 = new android.widget.Button(ctx)
            确认.setText("确认")
            确认.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(v) {
                    var 特殊值 = 物品特殊值.getText()
                    var ID = 物品ID.getText()
                        //addItemInventory(ID,1,特殊值)
                    Entity.setCarriedItem(getPlayerEnt(), ID, 64, 特殊值)
                    clientMessage("已添加")
                }
            }))
            layout.addView(确认)
            var vb = new android.widget.Button(ctx)
            vb.setText("物品ID一览表")
            vb.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(v) {
                    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
                    var GUI;
                    ctx.runOnUiThread(new java.lang.Runnable({
                        run: function() {
                            try {
                                var layout2 = new android.widget.LinearLayout(ctx);
                                layout2.setOrientation(1);
                                var scroll2 = new android.widget.ScrollView(ctx);
                                scroll2.addView(layout2);
                                var txt = new android.widget.TextView(ctx);
                                var dialog = new android.app.Dialog(ctx);
                                dialog.setContentView(scroll2);
                                dialog.setTitle("重要说明,请看完");
                                layout2.addView(txt); //txt
                                txt.setText(物品ID一览表);
                                var zuang = new android.widget.Button(ctx);
                                zuang.setOnClickListener(new android.view.View.OnClickListener() {
                                    onClick: function(viewarg) {
                                        dialog.dismiss()
                                    }
                                });
                                zuang.setText("知道了");
                                zuang.setBackground(bg)
                                layout2.addView(zuang)
                                dialog.show();
                            } catch (err) {
                                print("Err: " + err);
                            }
                        }
                    }));
                }
            }))
            layout.addView(vb)

            var vb = new android.widget.Button(ctx)
            vb.setText("方块ID一览表")
            vb.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(v) {
                    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
                    var GUI;
                    ctx.runOnUiThread(new java.lang.Runnable({
                        run: function() {
                            try {
                                var layout2 = new android.widget.LinearLayout(ctx);
                                layout2.setOrientation(1);
                                var scroll2 = new android.widget.ScrollView(ctx);
                                scroll2.addView(layout2);
                                var txt = new android.widget.TextView(ctx);
                                var dialog = new android.app.Dialog(ctx);
                                dialog.setContentView(scroll2);
                                dialog.setTitle("重要说明,请看完");
                                layout2.addView(txt); //txt
                                txt.setText(方块ID一览表);
                                var zuang = new android.widget.Button(ctx);
                                zuang.setOnClickListener(new android.view.View.OnClickListener() {
                                    onClick: function(viewarg) {
                                        dialog.dismiss()
                                    }
                                });
                                zuang.setText("知道了");
                                zuang.setBackground(bg)
                                layout2.addView(zuang)
                                dialog.show();
                            } catch (err) {
                                print("Err: " + err);
                            }
                        }
                    }));
                }
            }))
            layout.addView(vb)

            var mlayout = makeMenu(ctx, layout)
            menu.setContentView(mlayout)
            menu.setWidth(dip2px(ctx, 150))
            menu.setHeight(dip2px(ctx, 350))
            menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(127, 100, 0, 255)))
            menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 150), dip2px(ctx, 0))
        } catch (err) {
            print(err)
        }
    }


    function dip2px(ctx, dips) {
        return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
    }


    function makeMenu(ctx, layout) {
        var mlayout = new android.widget.RelativeLayout(ctx)
        var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
        var scrollview = new android.widget.ScrollView(ctx)
        var pad = dip2px(ctx, 2)
        scrollview.setPadding(pad, pad, pad, pad)
        scrollview.setLayoutParams(svParams)
        scrollview.addView(layout)
        mlayout.addView(scrollview)
        return mlayout
    }
}




function 浏览器() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx)
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)

        var h01 = new android.widget.Button(ctx)
        h01.setText("☯百度（WIFI）☯")
        h01.setTextSize(15)
        h01.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                var layout = new android.widget.LinearLayout(ctx)
                var menu = new android.widget.PopupWindow(layout)
                menu.setFocusable(true)
                layout.setOrientation(1)
                var layout = new android.widget.LinearLayout(ctx);
                var webview = new android.webkit.WebView(ctx);
                webview.getSettings().setJavaScriptEnabled(true);
                webview.loadUrl("http://baidu.com/") //
                var Web = new android.webkit.WebViewClient();
                webview.setWebViewClient(Web);
                layout.addView(webview);
                var mlayout = makeMenu(ctx, layout)
                menu.setContentView(mlayout)
                menu.setWidth(1000)
                menu.setHeight(1000)
                menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT))
                menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0)
            }
        }))
        layout.addView(h01)

        var 搜狗 = new android.widget.Button(ctx)
        搜狗.setText("☯搜狗（WIFI）☯")
        搜狗.setTextSize(15)
        搜狗.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                var layout = new android.widget.LinearLayout(ctx)
                var menu = new android.widget.PopupWindow(layout)
                menu.setFocusable(true)
                layout.setOrientation(1)
                var layout = new android.widget.LinearLayout(ctx);
                var webview = new android.webkit.WebView(ctx);
                webview.getSettings().setJavaScriptEnabled(true);
                webview.loadUrl("https://wap.sogou.com/") //
                var Web = new android.webkit.WebViewClient();
                webview.setWebViewClient(Web);
                layout.addView(webview);
                var mlayout = makeMenu(ctx, layout)
                menu.setContentView(mlayout)
                menu.setWidth(1000)
                menu.setHeight(1000)
                menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT))
                menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0)
            }
        }))
        layout.addView(搜狗)

        var s360 = new android.widget.Button(ctx)

        s360.setText("☯360（WIFI）☯")
        s360.setTextSize(15)
        s360.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                var layout = new android.widget.LinearLayout(ctx)
                var menu = new android.widget.PopupWindow(layout)
                menu.setFocusable(true)
                layout.setOrientation(1)
                var layout = new android.widget.LinearLayout(ctx);
                var webview = new android.webkit.WebView(ctx);
                webview.getSettings().setJavaScriptEnabled(true);
                webview.loadUrl("https://m.so.com") //
                var Web = new android.webkit.WebViewClient();
                webview.setWebViewClient(Web);
                layout.addView(webview);
                var mlayout = makeMenu(ctx, layout)
                menu.setContentView(mlayout)
                menu.setWidth(1000)
                menu.setHeight(1000)
                menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT))
                menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0)
            }
        }))
        layout.addView(s360)

        var 必应 = new android.widget.Button(ctx)
        必应.setText("☯必应（WIFI）☯")
        必应.setTextSize(15)
        必应.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                var layout = new android.widget.LinearLayout(ctx)
                var menu = new android.widget.PopupWindow(layout)
                menu.setFocusable(true)
                layout.setOrientation(1)
                var layout = new android.widget.LinearLayout(ctx);
                var webview = new android.webkit.WebView(ctx);
                webview.getSettings().setJavaScriptEnabled(true);
                webview.loadUrl("http://cn.bing.com/") //
                var Web = new android.webkit.WebViewClient();
                webview.setWebViewClient(Web);
                layout.addView(webview);
                var mlayout = makeMenu(ctx, layout)
                menu.setContentView(mlayout)
                menu.setWidth(1000)
                menu.setHeight(1000)
                menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT))
                menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0)
            }
        }))
        layout.addView(必应)

        var Google = new android.widget.Button(ctx)
        Google.setText("☯谷歌（VPN）☯")
        Google.setTextSize(15)
        Google.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                var layout = new android.widget.LinearLayout(ctx)
                var menu = new android.widget.PopupWindow(layout)
                menu.setFocusable(true)
                layout.setOrientation(1)
                var layout = new android.widget.LinearLayout(ctx);
                var webview = new android.webkit.WebView(ctx);
                webview.getSettings().setJavaScriptEnabled(true);
                webview.loadUrl("http://www.Google.com/") //
                var Web = new android.webkit.WebViewClient();
                webview.setWebViewClient(Web);
                layout.addView(webview);
                var mlayout = makeMenu(ctx, layout)
                menu.setContentView(mlayout)
                menu.setWidth(1000)
                menu.setHeight(1000)
                menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT))
                menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0)
            }
        }))
        layout.addView(Google)


        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 150))
        menu.setHeight(dip2px(ctx, 390))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60, 0, 100, 100)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        print(err)
    }
}


function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout
}




function 飞() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);

            var 按鈕 = new android.widget.Button(ctx)
            按鈕.setText("飞")
            按鈕.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            按鈕.setOnClickListener(new android.view.View.OnClickListener() {
                onClick: function(v) {
                    setVelY(getPlayerEnt(), 0.5)
                    Player.setFlying(true)
                }
            });
            layout.addView(按鈕);
            win.setContentView(layout);
            win.setWidth(110);
            win.setHeight(100);
            win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 18, 250);
        }
    }));
}




function 设() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);
            var button = new android.widget.Button(ctx);
            button.setText("设")
            button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            button.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg) {
                    xxx = Player.getX()
                    yyy = Player.getY()
                    zzz = Player.getZ()
                    clientMessage("§5已经帮你设置好家了")
                }
            }))
            layout.addView(button);
            win.setContentView(layout);
            win.setWidth(110);
            win.setHeight(100);
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 1100, 50);
        }
    }));
}


function 回() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);
            var button = new android.widget.Button(ctx);
            button.setText("回")
            button.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            button.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(viewarg) {
                    当前锁定玩家 = null
                    try {
                        if (xxx == null) {
                            clientMessage("§5你还没有设置家哦\n§a请按[设]来设置家哦")
                        } else {
                            setPosition(getPlayerEnt(), xxx, yyy, zzz)
                            clientMessage("§5传送成功")
                        }
                    } catch (err) {
                        load("你还没有设置家");
                    }
                }
            }))
            layout.addView(button);
            win.setContentView(layout);
            win.setWidth(110);
            win.setHeight(100);
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 1250, 50);
        }
    }));
}

function 上() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx)
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);

            var text = new android.widget.Button(ctx)
            text.setText("上")
            text.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            text.setOnClickListener(new android.view.View.OnClickListener() {
                onClick: function(v) {
                    Entity.setPosition(getPlayerEnt(), Player.getX(), Player.getY() + 5, Player.getZ())
                    Player.setFlying(true)
                }
            });
            layout.addView(text);
            win.setContentView(layout);
            win.setWidth(110);
            win.setHeight(100);
            win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 18, 400);
        }
    }));
}


function 下() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);

            var text2 = new android.widget.Button(ctx)
            text2.setText("下")
            text2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            text2.setOnClickListener(new android.view.View.OnClickListener() {
                onClick: function(v) {
                    Entity.setPosition(getPlayerEnt(), Player.getX(), Player.getY() - 5, Player.getZ())
                    Player.setFlying(true)
                }
            });
            layout.addView(text2);
            win.setContentView(layout);
            win.setWidth(110);
            win.setHeight(100);
            win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 18, 520);
        }
    }));
}

function 跳() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);

            var text3 = new android.widget.Button(ctx)
            text3.setText("踏空")
            text3.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            text3.setOnClickListener(new android.view.View.OnClickListener() {
                onClick: function(v) {
                    Entity.setVelY(getPlayerEnt(), 0.4)
                }
            });
            layout.addView(text3);
            win.setContentView(layout);
            win.setWidth(120);
            win.setHeight(110);
            win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 145, 850);
        }
    }));
}

function 冲() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);

            var text4 = new android.widget.Button(ctx)
            text4.setText("冲刺")
            text4.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            text4.setOnClickListener(new android.view.View.OnClickListener() {
                onClick: function(v) {
                    冲刺(getPlayerEnt(), 3, 2, 3);
                }
            });
            layout.addView(text4);
            win.setContentView(layout);
            win.setWidth(180);
            win.setHeight(130);
            win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 1999, 400);
        }
    }));
}

function 换() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);

            var text2 = new android.widget.Button(ctx)
            text2.setText("换")
            text2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            text2.setOnClickListener(new android.view.View.OnClickListener() {
                onClick: function(v) {
                    切换起床配置();
                }
            });
            layout.addView(text2);
            win.setContentView(layout);
            win.setWidth(110);
            win.setHeight(100);
            win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 400, 300);
        }
    }));
}


function 挖() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var win = new android.widget.PopupWindow();
            var layout = new android.widget.LinearLayout(ctx);
            win.dismiss();
            var 菜单布局1背景 = new GD();
            菜单布局1背景.setStroke(10, 颜色(200, 221, 0, 100));
            菜单布局1背景.setCornerRadius(5);
            layout.setBackground(菜单布局1背景);

            var text2 = new android.widget.Button(ctx)
            text2.setText("挖")
            text2.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            text2.setOnClickListener(new android.view.View.OnClickListener() {
                onClick: function(v) {
                    一键挖床();
                }
            });
            layout.addView(text2);
            win.setContentView(layout);
            win.setWidth(110);
            win.setHeight(100);
            win.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
            win.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 500, 300);
        }
    }));
}


//==//==//冲刺的算法//==//==//
function 冲刺(实体, x, y, z) {
    var a = (getYaw() % 360) * Math.PI / 180;
    var b = getPitch() * Math.PI / 180;
    xx = -Math.sin(a) * Math.cos(b);
    yy = -Math.sin(b);
    zz = Math.cos(a) * Math.cos(b);
    setVelX(实体, xx * x);
    setVelY(实体, yy * y);
    setVelZ(实体, zz * z);
}




function 注册机() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var 对话框 = new android.app.Dialog(ctx);
            对话框.setCancelable(false);

            var 注册机布局 = new 线性布局(ctx);
            注册机布局.setOrientation(1);
            var 标题 = new 文本(ctx)
            标题.setText("卡密找作者                                    \n");
            标题.setTextSize(20);
            var id = new 文本(ctx);
            id.setText("你的ID:" + IMEI);
            id.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(view) {

                }
            }))
            var 输入 = new 输入框(ctx);
            var 宽 = new 布局参数(-1, -2);
            var copy = new 按钮(ctx);
            copy.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(view) {
                    复制(String(IMEI));
                    load("复制成功");
                }
            }))
            copy.setText("复制ID");
            var 确定 = new 按钮(ctx);
            确定.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(view) {
                    if (Number(输入.getText()) == 密码) {
                        对话框.dismiss()
                        load("密码验证通过")
                        解锁验证 = true
                        創建文件(path + "/Android/.js/.MC 小萌黑客端/")
                        保存("/storage/emulated/0/Android/.js/.MC 小萌黑客端/" + 密码 + ".txt", "null")
                    } else {
                        load("错误")
                    };
                }
            }))
            确定.setText("确定");
            var 退出 = new 按钮(ctx);
            退出.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(view) {
                    对话框.dismiss()
                }
            }))
            退出.setText("取消");
            id.setLayoutParams(宽);
            输入.setLayoutParams(宽);
            copy.setLayoutParams(宽);
            确定.setLayoutParams(宽);
            退出.setLayoutParams(宽);
            注册机布局.addView(标题);
            注册机布局.addView(id);
            注册机布局.addView(输入);
            注册机布局.addView(copy);
            注册机布局.addView(确定);
            注册机布局.addView(退出);
            对话框.setContentView(注册机布局);
            对话框.show();
        }
    }));
}


function 一键挖床() {
    if ((传床 == 0)) {
        MCPE_GUI_SHOW_CLIENT_MESSAGE('⚠️你还没有选择配置⚠️');
        print("未检测到配置")
    }
    if ((传床 == 8)) {
        Entity.setPosition(Player.getEntity(), 床8x, 床y, 床8z);
        停();
        传床 = 9;
    }
    if ((传床 == 7)) {
        Entity.setPosition(Player.getEntity(), 床7x, 床y, 床7z);
        停();
        传床 = 8;
    }
    if ((传床 == 6)) {
        Entity.setPosition(Player.getEntity(), 床6x, 床y, 床6z);
        停();
        传床 = 7;
    }
    if ((传床 == 5)) {
        Entity.setPosition(Player.getEntity(), 床5x, 床y, 床5z);
        停();
        传床 = 6;
        MCPE_GUI_SHOW_CLIENT_MESSAGE('');
    }
    if ((传床 == 4)) {
        Entity.setPosition(Player.getEntity(), 床4x, 床y, 床4z);
        停();
        传床 = 5;
    }
    if ((传床 == 3)) {
        Entity.setPosition(Player.getEntity(), 床3x, 床y, 床3z);
        停();
        传床 = 4;
    }
    if ((传床 == 2)) {
        Entity.setPosition(Player.getEntity(), 床2x, 床y, 床2z);
        停();
        传床 = 3;
    }
    if ((传床 == 1)) {
        Entity.setPosition(Player.getEntity(), 床1x, 床y, 床1z);
        停();
        传床 = 2;
    }
    if ((传床 == 9)) {
        传床 = 1;
        print("所有蛋糕已清除，本次挖床结束")
    }
}

function 切换起床配置() {
    if ((起床配置 == 0)) {
        起床配置 = 1;
        MCPE_GUI_SHOW_CLIENT_MESSAGE("§e配置文件已载入\n§a______________________\n§b作者：小萌\nQQ：3215476335");
        print("小萌QQ：3215476335")
    }
    if ((起床配置 == 6)) {
        MCPE_GUI_SHOW_CLIENT_MESSAGE("§b当前配置◎海底世界◎");
        print("当前配置◎海底世界")
        传床 = 1;
        起床配置 = 7;
        床y = 60.7;
        床1x = -18.5;
        床1z = 70.5;
        床2x = 19.5;
        床2z = -69.5;
        床3x = 19.5;
        床3z = 70.5;
        床4x = 70.5;
        床4z = 19.5;
        床5x = -18.5;
        床5z = -69.5;
        床6x = -69.5;
        床6z = 19.5;
        床7x = -69.5;
        床7z = -18.5;
        床8x = 70.5;
        床8z = -18.5;
    }
    if ((起床配置 == 5)) {
        MCPE_GUI_SHOW_CLIENT_MESSAGE("§5当前配置◎石门之泽◎");
        print("当前配置◎石门之泽")
        传床 = 1;
        起床配置 = 6;
        床y = 62.7;
        床1x = -54.5;
        床1z = 28.5;
        床2x = 55.5;
        床2z = -27.5;
        床3x = -27.5;
        床3z = 55.5;
        床4x = 28.5;
        床4z = 55.5;
        床5x = 28.5;
        床5z = -54.5;
        床6x = -54.5;
        床6z = -28.5;
        床7x = -27.5;
        床7z = -54.5;
        床8x = 55.5;
        床8z = 28.5;
    }
    if ((起床配置 == 4)) {
        MCPE_GUI_SHOW_CLIENT_MESSAGE("§4当前配置◎石坛◎");
        print("当前配置◎石坛")
        传床 = 1;
        起床配置 = 5;
        床y = 89.7;
        床1x = -42.5;
        床1z = 25.5;
        床2x = 25.5;
        床2z = -42.5;
        床3x = 25.5;
        床3z = 43.5;
        床4x = 43.5;
        床4z = 25.5;
        床5x = -24.5;
        床5z = -42.5;
        床6x = -24.5;
        床6z = 43.5;
        床7x = -42.5;
        床7z = -24.5;
        床8x = 43.5;
        床8z = -24.5;
    }
    if ((起床配置 == 3)) {
        MCPE_GUI_SHOW_CLIENT_MESSAGE("§3当前配置◎女巫花园◎");
        print("当前配置◎女巫花园");
        传床 = 1;
        起床配置 = 4;
        床y = 60.7;
        床1x = 17.5;
        床1z = 57.5;
        床2x = -16.5;
        床2z = 56.5;
        床3x = 51.5;
        床3z = 57.5;
        床4x = -50.5;
        床4z = -56.5;
        床5x = 17.5;
        床5z = 56.5;
        床6x = -16.5;
        床6z = 57.5;
        床7x = -50.5;
        床7z = 57.5;
        床8x = 51.5;
        床8z = -56.5;
    }
    if ((起床配置 == 2)) {
        MCPE_GUI_SHOW_CLIENT_MESSAGE("§2当前配置◎易拉罐◎");
        print("当前配置◎易拉罐");
        传床 = 1;
        起床配置 = 3;
        床y = 102.7;
        床1x = -28.5;
        床1z = 60.5;
        床2x = 29.5;
        床2z = -61.5;
        床3x = -61.5;
        床3z = -28.5;
        床4x = -28.5;
        床4z = -61.5;
        床5x = 62.5;
        床5z = -28.5;
        床6x = -61.5;
        床6z = 29.5;
        床7x = 62.5;
        床7z = 29.5;
        床8x = 29.5;
        床8z = 62.5;
    }
    if ((起床配置 == 1)) {
        MCPE_GUI_SHOW_CLIENT_MESSAGE("§1当前配置◎水果派对◎");
        print("当前配置◎水果派对");
        传床 = 1;
        起床配置 = 2;
        床y = 106.7;
        床1x = -61.5;
        床1z = -29.5;
        床2x = 62.5;
        床2z = 30.5;
        床3x = -29.5;
        床3z = -61.5;
        床4x = 30.5;
        床4z = -61.5;
        床5x = 30.5;
        床5z = 62.5;
        床6x = -61.5;
        床6z = 30.5;
        床7x = -29.5;
        床7z = 62.5;
        床8x = 62.5;
        床8z = -29.5;
    }
    if ((起床配置 == 7)) {
        起床配置 = 1;
    }
}

function 坐标() {
    MCPE_GUI_SHOW_CLIENT_MESSAGE((~~(getPlayerX() * 100) / 100), (~~(getPlayerY() * 100) / 100), (~~(getPlayerZ() * 100) / 100));
}

function 重置js() {
    MCPE_GUI_SHOW_CLIENT_MESSAGE("已经帮你重置了");
    床y = 4;
    床1x = 0;
    床1z = 0;
    床2x = 0;
    床2z = 0;
    床3x = 0;
    床3z = 0;
    床4x = 0;
    床4z = 0;
    床5x = 0;
    床5z = 0;
    床6x = 0;
    床6z = 0;
    床7x = 0;
    床7z = 0;
    床8x = 0;
    床8z = 0;
    传床 = 0;
    起床配置 = 0;
}

/*非gui*/
function 停() {
    Entity.setVelX(Player.getEntity(), 0);
    Entity.setVelY(Player.getEntity(), 0);
    Entity.setVelZ(Player.getEntity(), 0);
}

function MCPE_GUI_SHOW_CLIENT_MESSAGE() {
    var msg_list = [];
    for (var i = 0; i < arguments.length; i++) {
        msg_list.push(arguments[i]);
    }
    clientMessage(msg_list);
}


function music1() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐1.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music2() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐2.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music3() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐3.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music4() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐4.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music5() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐5.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music6() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐6.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music7() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐7.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music8() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐8.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music9() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐9.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music10() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐10.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music11() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐11.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music12() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐12.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music13() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐13.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music14() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐14.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}

function music15() {
    var player = new android.media.MediaPlayer();
    try {
        player.reset();
        player.setDataSource("/sdcard/MC小萌黑客端音乐/音乐15.mp3");
        player.prepare();
        player.start();
    } catch (e) {
        print("没有找到哟")
    }
}


function _but(ctx, layout, text, tbigs, t_color, b_color, w, h, m, rounds, gravity, padding) {
    var t = new android.widget.Button(ctx);
    t.setText(text);
    if (face != null) t.setTypeface(face);
    if (padding != null) t.setPadding(padding, padding, padding, padding);
    if (gravity != null) t.setGravity(gravity);
    if (w != null && h != null && m != null) {
        var params = new android.widget.LinearLayout.LayoutParams(w, h);
        params.setMargins(m, m, m, m);
        t.setLayoutParams(params);
    }
    if (tbigs != null) t.setTextSize(tbigs);
    if (t_color != null) t.setTextColor(Color.argb(t_color[0], t_color[1], t_color[2], t_color[3]));
    if (rounds != null) {
        var round = new android.graphics.drawable.ShapeDrawable(new android.graphics.drawable.shapes.RoundRectShape([rounds, rounds, rounds, rounds, rounds, rounds, rounds, rounds], null, null));
        if (b_color != null) round.getPaint().setColor(Color.argb(b_color[0], b_color[1], b_color[2], b_color[3]));
        round.getPaint().setStyle(android.graphics.Paint.Style.FILL);
        t.setBackgroundDrawable(round);
    } else {
        if (b_color != null) t.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.argb(b_color[0], b_color[1], b_color[2], b_color[3])));
    } if (layout != null) layout.addView(t);
    return t;
}

function _cb(ctx, layout, text, c, tbigs, t_color, w, h, m) {
    var t = new android.widget.CheckBox(ctx);
    if (text != null) t.setText(text);
    if (face != null) t.setTypeface(face);
    if (tbigs != null) t.setTextSize(tbigs);
    else t.setTextSize(16); if (t_color != null) t.setTextColor(Color.argb(t_color[0], t_color[1], t_color[2], t_color[3]));
    if (c) t.setChecked(true);
    else t.setChecked(false); if (w != null && h != null && m != null) {
        var params = new android.widget.LinearLayout.LayoutParams(w, h);
        params.setMargins(m, m, m, m);
        t.setLayoutParams(params);
    }
    if (layout != null) layout.addView(t);
    return t;
}

function _te(ctx, layout, text, tbigs, t_color, b_color, w, h, m) {
    var t = new android.widget.TextView(ctx);
    if (text != null) t.setText(text);
    if (face != null) t.setTypeface(face);
    if (tbigs != null) t.setTextSize(tbigs);
    else t.setTextSize(16); if (t_color != null) t.setTextColor(Color.argb(t_color[0], t_color[1], t_color[2], t_color[3]));
    if (b_color != null) t.setBackgroundColor(Color.argb(b_color[0], b_color[1], b_color[2], b_color[3]));
    if (w != null && h != null && m != null) {
        var params = new android.widget.LinearLayout.LayoutParams(w, h);
        params.setMargins(m, m, m, m);
        t.setLayoutParams(params);
    }
    if (layout != null) layout.addView(t);
    return t;
}

function atHfHt(txt) {
    return new android.text.Html.fromHtml(txt.replace(/\n/g, "<br>"));
}

function print(text, size) {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var toast = android.widget.Toast.makeText(ctx, " ", android.widget.Toast.LENGTH_LONG);
                var layout = new android.widget.LinearLayout(ctx);
                var textView = new android.widget.TextView(ctx);
                textView.setText(atHfHt("</font><font color=#ffffffff>" + text.replace(/\n/g, "<br>") + "</font>"));
                textView.setPadding(10, 10, 10, 10);
                if (size != null) textView.setTextSize(size);
                textView.setTypeface(android.graphics.Typeface.MONOSPACE);
                var GD = new android.graphics.drawable.GradientDrawable();
                GD.setColor(Color.argb(100, 0, 1000, 1000));
                GD.setStroke(3, Color.argb(50, 255, 0, 100));
                layout.addView(textView);
                layout.setBackground(GD);
                toast.setView(layout);
                toast.show();
            } catch (e) {
                ctx.runOnUiThread(new java.lang.Runnable({
                    run: function() {
                        android.widget.Toast.makeText(ctx, text, 6).show();
                    }
                }));
            }
        }
    }));
}



function 喷() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                骂()
            } catch (err) {
                print(err)
            }
        }
    }))

    function 骂() {
        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
        var layout = new android.widget.LinearLayout(ctx)
        try {
            var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
            menu.setFocusable(true)
            var layout = new android.widget.LinearLayout(ctx)
            layout.setOrientation(1)

            var 喷词 = new android.widget.EditText(ctx)
            喷词.setText("")
            喷词.setHint("请输入词汇")
            layout.addView(喷词)

            var 名 = new android.widget.EditText(ctx)
            名.setText("")
            名.setHint("请输入名称")
            layout.addView(名)


            var 确认 = new android.widget.Button(ctx)
            确认.setText("确认")
            确认.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(v) {
                    var 喷 = 喷词.getText()
                    var 名称 = 名.getText()
                    Entity.setNameTag(getPlayerEnt(), 名称)
                    Server.sendChat(喷);

                }
            }))
            layout.addView(确认)

            var mlayout = makeMenu(ctx, layout)
            menu.setContentView(mlayout)
            menu.setWidth(dip2px(ctx, 200))
            menu.setHeight(dip2px(ctx, 200))
            menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(127, 0, 16, 255)))
            menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 10), dip2px(ctx, 10))
        } catch (err) {
            print(err)
        }
    }


    function dip2px(ctx, dips) {
        return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
    }


    function makeMenu(ctx, layout) {
        var mlayout = new android.widget.RelativeLayout(ctx)
        var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
        var scrollview = new android.widget.ScrollView(ctx)
        var pad = dip2px(ctx, 2)
        scrollview.setPadding(pad, pad, pad, pad)
        scrollview.setLayoutParams(svParams)
        scrollview.addView(layout)
        mlayout.addView(scrollview)
        return mlayout
    }
}


function 音乐() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx)
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表1")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music1();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表2")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music2();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表3")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music3();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表4")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music4();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表5")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music5();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表6")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music6();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表7")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music7();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表8")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music8();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表9")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music9();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表10")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music10();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表11")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music11();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表12")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music12();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表13")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music13();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表14")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music14();
            }
        }));
        layout.addView(text8)

        var text8 = new android.widget.Button(ctx)
        text8.setText("音乐列表15")
        text8.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                music15();
            }
        }));
        layout.addView(text8)



        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 150))
        menu.setHeight(dip2px(ctx, 400))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        print(err)
    }
}


function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout
}

function 碰撞箱() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx)
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)

        var text = new android.widget.CheckBox(ctx)
        text.setText("透视>描边")
        text.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v, isChecked) {
                print("由于优化问题，已取消")
            }
        }));
        layout.addView(text)

        var text = new android.widget.CheckBox(ctx)
        text.setText("透视>连线")
        text.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v, isChecked) {
                print("由于优化问题，已取消")
            }
        }));
        layout.addView(text)

        var text = new android.widget.CheckBox(ctx)
        text.setText("显示玩家")
        text.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v, isChecked) {
                print("由于优化问题，已取消")
            }
        }));
        layout.addView(text)

        var text = new android.widget.CheckBox(ctx)
        text.setText("显示物品")
        text.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v, isChecked) {
                print("由于优化问题，已取消")
            }
        }));
        layout.addView(text)

        var text = new android.widget.CheckBox(ctx)
        text.setText("显示生物")
        text.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v, isChecked) {
                print("由于优化问题，已取消")
            }
        }));
        layout.addView(text)


        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 150))
        menu.setHeight(dip2px(ctx, 400))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        print(err)
    }
}


function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout
}

function 围绕自瞄() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx)
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)

        var 起 = new android.widget.Button(ctx)
        起.setText("设置悬浮窗")
        起.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                主要按钮2();
                menu.dismiss();
            }
        }))
        layout.addView(起)

        var 起 = new android.widget.Button(ctx)
        起.setText("打开自瞄窗口")
        起.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                menu2();
                menu.dismiss();
            }
        }))
        layout.addView(起)



        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 150))
        menu.setHeight(dip2px(ctx, 400))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        print(err)
    }
}


function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout
}




print("开始加载：小萌黑客端v1.13.999开发版")


var 使用方法 = 518181

創建文件(path + "/MC小萌黑客端音乐/音乐放在下面/")
創建文件(path + "/MC小萌黑客端音乐/使用方法/")
保存("/storage/emulated/0/MC小萌黑客端音乐/使用方法/" + 使用方法 + ".txt", "小萌黑客端总共能存15个音乐\n仅支持.mp3格式\n请将添加的歌曲改名\n改为\n音乐1.mp3\n以此类推\n小萌牛逼\nQQ：3215476335")




//渲染器算法
//自瞄//////////////////////////////////////////此算法不加密/////////////////////////你改了就会崩溃///////////////////

var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get(),
    wg = android.widget,
    app = android.app,
    wid = ctx.getWindowManager().getDefaultDisplay().getWidth(),
    hei = ctx.getWindowManager().getDefaultDisplay().getHeight(),
    gravity = android.view.Gravity,
    left = gravity.LEFT,
    top = gravity.TOP,
    right = gravity.RIGHT,
    bottom = gravity.BOTTOM,
    center = gravity.CENTER,
    mainView = ctx.getWindow().getDecorView(),
    view = android.view,
    grap = android.graphics,
    lang = java.lang,
    util = android.util,
    io = java.io,
    interface = android.content.DialogInterface,
    root = android.os.Environment.getExternalStorageDirectory().getAbsolutePath(),
    iniPath = root + "/games/com.mojang",
    iniName = "-049592568.ini",
    shield = ["闪电侠", "超级跳跃", "末影使者", "点我使用展示功能", "跳跃信标", "entity"];
var radarPic = grap.Bitmap.createBitmap(hei / 3, hei / 3, grap.Bitmap.Config.ARGB_8888),
    radarShow, radarWin, state = 0,
    lenZ = radarPic.getWidth(),
    lenX = radarPic.getHeight(),
    radius = lenZ / 30,
    speeding = false,
    running = false,
    players, flashing = false,
    home = null,
    getMessage, mode = false;

function 主要按钮2() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var 坐标x = 0,
        坐标y = ctx.getWindowManager().getDefaultDisplay().getHeight() / 1.5,
        坐标x1, 坐标y1, 坐标x2, 坐标y2;
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var 窗口 = new android.widget.PopupWindow();
                var layout = new android.widget.RelativeLayout(ctx),
                    按钮 = new android.widget.ImageView(ctx);
                var 群 = android.util.Base64.decode(base64, 0);

                按钮.setImageBitmap(new android.graphics.BitmapFactory.decodeByteArray(群, 0, 群.length));
                按钮.setLayoutParams(new android.widget.LinearLayout.LayoutParams(ctx.getWindowManager().getDefaultDisplay().getWidth() / 8, ctx.getWindowManager().getDefaultDisplay().getHeight() / 8));
                按钮.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        menu2();
                    }
                }));

                按钮.setOnTouchListener(new android.view.View.OnTouchListener({
                    onTouch: function(v, e) {
                        switch (e.getAction()) {
                            case 0:
                                坐标x1 = e.getX();
                                坐标y1 = e.getY();
                                break;
                            case 2:
                                坐标x2 = parseInt(e.getX() - 坐标x1) * -3 / 10;
                                坐标y2 = parseInt(e.getY() - 坐标y1) * -3 / 10;
                                坐标x = 坐标x + 坐标x2;
                                坐标y = 坐标y + 坐标y2;
                                窗口.update(坐标x, 坐标y, -1, -1);
                                break;
                        }
                        return false;
                    }
                }));
                layout.addView(按钮);
                窗口.setContentView(layout);
                窗口.setWidth(dip2px(ctx, 80));
                窗口.setHeight(dip2px(ctx, 80));
                窗口.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
                窗口.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.BOTTOM | android.view.Gravity.RIGHT, 坐标x, 坐标y);
            } catch (err) {
                print(err);
            }
        }
    }));
}


var 屏幕高度 = ctx.getWindowManager().getDefaultDisplay().getHeight();
var 屏幕宽度 = ctx.getWindowManager().getDefaultDisplay().getWidth();
var GD = android.graphics.drawable.GradientDrawable;
var 颜色 = android.graphics.Color.argb;
var 线性布局 = android.widget.LinearLayout;
var 按钮 = android.widget.Button;
var 文本 = android.widget.TextView;
var 点击事件 = android.view.View.OnClickListener;
var 布局参数 = android.widget.LinearLayout.LayoutParams;
var 输入框 = android.widget.EditText;
var 获取硬件 = ctx.getSystemService(android.content.Context.TELEPHONY_SERVICE);
var IMEI = 获取硬件.getDeviceId();
var 随机数字 = Math.ceil(Math.random() * 88888 + 10000)
var 密码 = parseInt(IMEI * 2 / 459814711); //舍去小数点
var path = new android.os.Environment.getExternalStorageDirectory().getAbsolutePath()
var 解锁验证 = true
var 房间 = 0



var GetSystem = ctx.getSystemService(android.content.Context.TELEPHONY_SERVICE);
var SystemIMEI = Number(GetSystem.getDeviceId());


var AIMMODE = true

running = true



function loads(文本) {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            android.widget.Toast.makeText(ctx, 彩字("§b提示：§1" + 文本), 0).show()
        }
    }))
}




function 彩字(text) {
    var colors = [
        [" ", " &nbsp;"],
        ["\n", "<br/>"],
        ["§l", "</b><b>"],
        ["§m", "</del><del>"],
        ["§n", "</ins><ins>"],
        ["§o", "</i><i>"],
        ["§r", "</font></b></del></ins></i>"],
        ["§0", "</font><font color=#000000>"],
        ["§1", "</font><font color=#0000AA>"],
        ["§2", "</font><font color=#00AA00>"],
        ["§3", "</font><font color=#00AAAA>"],
        ["§4", "</font><font color=#AA0000>"],
        ["§5", "</font><font color=#AA00AA>"],
        ["§6", "</font><font color=#FFAA00>"],
        ["§7", "</font><font color=#cccccc>"],
        ["§8", "</font><font color=#555555>"],
        ["§9", "</font><font color=#5555FF>"],
        ["§a", "</font><font color=#55FF55>"],
        ["§b", "</font><font color=#55FFFF>"],
        ["§c", "</font><font color=#FF5555>"],
        ["§d", "</font><font color=#FF55FF>"],
        ["§e", "</font><font color=#FFFF55>"],
        ["§f", "</font><font color=#FFFFFF>"],
        ["老婆", "</font><font color=#66CCFF>"],
        ["下划线", "<u> </u> "]
    ]
    for (var e in colors) {
        text = text.split(colors[e][0]).join(colors[e][1])
    };
    return android.text.Html.fromHtml(text);
}




function dip2px(ctx, dips) {
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function menu2() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var 坐标x = 0,
        坐标y = ctx.getWindowManager().getDefaultDisplay().getHeight() / 1.5,
        坐标x1, 坐标y1, 坐标x2, 坐标y2;
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var 窗口 = new android.widget.PopupWindow();
                var layout = new android.widget.LinearLayout(ctx)
                窗口.setFocusable(true)
                layout.setOrientation(1)

                坐标y = 屏幕高度 / 4.1
                坐标x = 屏幕宽度 / 3.25


                var 菜单布局1背景 = new GD();
                菜单布局1背景.setStroke(10, 颜色(200, 0, 10, 25));
                菜单布局1背景.setCornerRadius(5);
                layout.setBackground(菜单布局1背景);

                //菜单顶栏布局 开始
                var 菜單頂欄 = new android.widget.LinearLayout(ctx)
                菜單頂欄.setOrientation(0)
                菜單頂欄.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(60, 0, 10, 25)))
                layout.addView(菜單頂欄)


                按钮 = new android.widget.TextView(ctx)
                按钮.setText(" 小萌黑客端插件")
                按钮.setTextSize(20)
                按钮.setWidth(dip2px(ctx, 230));
                按钮.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {}
                }))
                按钮.setOnTouchListener(new android.view.View.OnTouchListener({
                    onTouch: function(v, e) {
                        switch (e.getAction()) {
                            case 0:
                                坐标x1 = e.getX();
                                坐标y1 = e.getY();
                                break;
                            case 2:
                                坐标x2 = parseInt(e.getX() - 坐标x1) * -3 / 10;
                                坐标y2 = parseInt(e.getY() - 坐标y1) * -3 / 10;
                                坐标x = 坐标x + 坐标x2;
                                坐标y = 坐标y + 坐标y2;
                                窗口.update(坐标x, 坐标y, -1, -1);
                                break;
                        }
                        return false;
                    }
                }));
                菜單頂欄.addView(按钮)

                關閉 = new android.widget.TextView(ctx)
                關閉.setText(" X")
                關閉.setTextSize(20)
                關閉.setWidth(dip2px(ctx, 20));
                關閉.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        窗口.dismiss();
                    }
                }))
                菜單頂欄.addView(關閉)

                //菜单顶栏布局 结束

                //标题布局 开始

                var layout2 = new android.widget.LinearLayout(ctx)
                layout2.setOrientation(1)
                layout.addView(layout2)

                空 = new android.widget.TextView(ctx)
                空.setText("")
                空.setTextSize(10)
                空.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {

                    }
                }))
                layout2.addView(空)

                var layout3 = new android.widget.LinearLayout(ctx)
                layout3.setOrientation(0)
                layout.addView(layout3)

                var 按钮 = new android.widget.ImageView(ctx);
                var 群 = android.util.Base64.decode(base64, 0);
                按钮.setImageBitmap(new android.graphics.BitmapFactory.decodeByteArray(群, 0, 群.length));
                按钮.setLayoutParams(new android.widget.LinearLayout.LayoutParams(ctx.getWindowManager().getDefaultDisplay().getWidth() / 8, ctx.getWindowManager().getDefaultDisplay().getHeight() / 8));
                layout3.addView(按钮)

                標題 = new android.widget.TextView(ctx)
                標題.setText(彩字("§b小萌黑客端辅助插件\n当前模式：§4未选择\n"))
                標題.setTextSize(19)
                layout3.addView(標題)
                if (房间 == 0) {
                    標題.setText(彩字("§b小萌黑客端辅助插件\n§4当前模式：未选择\n"));
                }
                if (房间 == 1) {
                    標題.setText(彩字("§b小萌黑客端辅助插件\n§a当前模式：联机模式\n"));
                }
                if (房间 == 2) {
                    標題.setText(彩字("§b小萌黑客端辅助插件\n§a当前模式：服务器模式\n"));
                }
                //标题布局 结束


                //                              分割线


                //内容布局 开始

                var layout4 = new android.widget.LinearLayout(ctx)
                layout4.setOrientation(0)
                layout.addView(layout4)


                var 功能 = new android.widget.Button(ctx)
                功能.setText("背后自瞄")
                功能.setWidth(dip2px(ctx, 100));
                功能.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        if (解锁验证 == true) {
                            if (房间 == 0) {
                                loads("请先选择模式");
                            } else {
                                if (房间 = 2) {
                                    loads("务必设置传送起点，防止卡在虚空");
                                }
                                mode = true;
                                flash1();
                            }
                        } else {
                            loads("请先激活")
                        }
                    }
                }))
                layout4.addView(功能)

                var 娱乐 = new android.widget.Button(ctx)
                娱乐.setText("环绕自瞄")
                娱乐.setWidth(dip2px(ctx, 100));
                娱乐.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        if (解锁验证 == true) {
                            if (房间 == 0) {
                                loads("请先选择模式");
                            } else {
                                if (房间 = 2) {
                                    loads("务必设置传送起点，防止卡在虚空");
                                }
                                mode = true;
                                flash();
                            }
                        } else {
                            loads("请先激活")
                        }
                    }
                }))
                layout4.addView(娱乐)

                var 更多 = new android.widget.Button(ctx)
                更多.setText("辅助功能")
                更多.setWidth(dip2px(ctx, 100));
                更多.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        if (解锁验证 == true) {
                            自瞄测试();
                        } else {
                            loads("请先激活")
                        }
                    }
                }))
                layout4.addView(更多)


                var layout5 = new android.widget.LinearLayout(ctx)
                layout5.setOrientation(0)
                layout.addView(layout5)


                var 卡密 = new android.widget.Button(ctx)
                卡密.setText("激活")
                卡密.setWidth(dip2px(ctx, 100));
                卡密.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        if (解锁验证 == true) {
                            loads("你已激活，无需再次激活");
                        } else {
                            注册机();
                        }

                    }
                }))
                layout5.addView(卡密)

                var ms = new android.widget.Button(ctx)
                ms.setText("模式")
                ms.setWidth(dip2px(ctx, 100));
                ms.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        if (房间 !== 1) {
                            房间 = 1;
                            loads("当前模式为联机模式");
                            標題.setText(彩字("§b小萌黑客端辅助插件\n§a当前模式：联机模式\n"));
                        } else {
                            房间 = 2;
                            loads("当前模式为服务器模式");
                            標題.setText(彩字("§b小萌黑客端辅助插件\n§a当前模式：服务器模式\n"));
                        }
                    }
                }))
                layout5.addView(ms)

                var 重置 = new android.widget.Button(ctx)
                重置.setText("重置")
                重置.setWidth(dip2px(ctx, 100));
                重置.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        if (房间 !== 0) {
                            房间 = 0;
                            loads("已经帮你重置了");
                            標題.setText(彩字("§b小萌黑客端辅助插件\n§4当前模式：未选择\n"));
                        } else {
                            loads("只可以点一次");
                        }
                    }
                }))
                layout5.addView(重置)

                //内容布局 结束

                窗口.setContentView(layout);
                窗口.setWidth(dip2px(ctx, 300));
                窗口.setHeight(dip2px(ctx, 210));
                窗口.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)));
                窗口.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.BOTTOM | android.view.Gravity.RIGHT, 坐标x, 坐标y);
            } catch (err) {
                print(err);
            }
        }
    }));
}




function 注册机2() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            var 对话框 = new android.app.Dialog(ctx);
            对话框.setCancelable(false);

            var 注册机布局 = new 线性布局(ctx);
            注册机布局.setOrientation(1);
            var 标题 = new 文本(ctx)
            标题.setText("激活卡密-----请将ID发送给作者                          \n");
            标题.setTextSize(20);
            var id = new 文本(ctx);
            id.setText("你的ID:" + IMEI);
            id.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(view) {

                }
            }))
            var 输入 = new 输入框(ctx);
            var 宽 = new 布局参数(-1, -2);
            var copy = new 按钮(ctx);
            copy.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(view) {
                    复制(String(IMEI));
                    loads("复制成功");
                }
            }))
            copy.setText("复制ID");
            var 确定 = new 按钮(ctx);
            确定.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(view) {
                    if (Number(输入.getText()) == 密码) {
                        对话框.dismiss()
                        loads("激活成功")
                        loads("欢迎用户：" + IMEI)
                        解锁验证 = true
                    } else {
                        loads("错误")
                    };
                }
            }))
            确定.setText("确定");
            var 退出 = new 按钮(ctx);
            退出.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(view) {
                    对话框.dismiss()
                }
            }))
            退出.setText("取消");
            id.setLayoutParams(宽);
            输入.setLayoutParams(宽);
            copy.setLayoutParams(宽);
            确定.setLayoutParams(宽);
            退出.setLayoutParams(宽);
            注册机布局.addView(标题);
            注册机布局.addView(id);
            注册机布局.addView(输入);
            注册机布局.addView(copy);
            注册机布局.addView(确定);
            注册机布局.addView(退出);
            对话框.setContentView(注册机布局);
            对话框.show();
        }
    }));
}

function invalidate() {
    try {
        if (mode) {
            players = Array.slice.call(Server.getAllPlayers());
            players.shift();
        } else {
            var ls = [];
            for (var i = 0; i <= 10000; i++)
                if (Entity.getEntityTypeId(i) == 63)
                    ls.push(i);
            players = ls;
        }
        var arr = []
        for (var i in players)
            if (shield.indexOf(Player.getName(players[i])) > -1) arr.unshift(i);
        for (var i in arr) players.splice(arr[i], 1);
    } catch (err) {
        showTip(err, 1);
    }
}



function removeRapid() {
    Entity.removeEffect(Player.getEntity(), 3);
    return true;
}

function removeVision() {
    Entity.removeEffect(Player.getEntity(), 16);
    return true;
}

function removeJump() {
    Entity.removeEffect(Player.getEntity(), 8);
    return true;
}

function searchMode(v, c) {
    mode = c;
}




function flash1() {
    try {
        if (flashing) {
            flashing = false;
            Player.setFlying(false);
        } else {
            Ui(function() {
                var dialog = new app.AlertDialog.Builder(ctx);
                dialog.setTitle("选择自瞄对象");
                var lay = new wg.LinearLayout(ctx);
                lay.setOrientation(1);
                var check = addCheckBox(lay, "←兼容模式（必须勾选）", function() {}, 0, 14, true);
                invalidate();
                for (var i in players) {
                    addButton(lay, Player.getName(players[i]), eval("function(){startFlash(" + String(players[i]) + "," + String(check.isChecked()) + ");}"), null, {
                        wid: -1
                    }, 15);
                    var AIMMODE = true
                }
                dialog.setView(scroll(lay));
                dialog.setNegativeButton("取消", null);
                dialog.show();
            });
        }
    } catch (err) {
        showTip(err, 1);
    }
}

function flash() {
    try {
        if (flashing) {
            flashing = false;
            Player.setFlying(false);
        } else {
            Ui(function() {
                var dialog = new app.AlertDialog.Builder(ctx);
                dialog.setTitle("选择自瞄对象");
                var lay = new wg.LinearLayout(ctx);
                lay.setOrientation(1);
                var check = addCheckBox(lay, "←兼容模式（必须勾选）", function() {}, 0, 14, true);
                invalidate();
                for (var i in players) {
                    addButton(lay, Player.getName(players[i]), eval("function(){startFlash1(" + String(players[i]) + "," + String(check.isChecked()) + ");}"), null, {
                        wid: -1
                    }, 15);
                    var AIMMODE = false
                }
                dialog.setView(scroll(lay));
                dialog.setNegativeButton("取消", null);
                dialog.show();
            });
        }
    } catch (err) {
        showTip(err, 1);
    }
}

function startFlash(player, flashMode) {
    showTip("自瞄开始，如需停止请再次点击按钮", 1);
    runThread(function() {
        try {
            flashing = true;
            while (flashing) {
                invalidate();
                if (players.indexOf(player) == -1) {
                    if (房间 = 2) {
                        flashing = false;
                        goHome();
                        break;
                    }
                    showTip("目标退出游戏或死亡");
                }
                var yaw;
                if (AIMMODE = true) {
                    yaw = Entity.getYaw(player) - 180;
                } else {
                    yaw = Entity.getYaw(player) - 180;
                }
                var pointX = Entity.getX(player) - Math.sin(yaw * Math.PI / 180) * 2,
                    pointY = Entity.getY(player) + 0.5,
                    pointZ = Entity.getZ(player) + Math.cos(yaw * Math.PI / 180) * 2;
                Entity.setRot(Player.getEntity(), yaw + 180, 30);
                Entity.setPosition(Player.getEntity(), pointX, pointY, pointZ);
                Player.setFlying(false);
                lang.Thread.sleep(1);
            }
        } catch (err) {
            showTip(err, 1);
        }
    });
}

function startFlash1(player, flashMode) {
    showTip("自瞄开始，如需停止请再次点击按钮", 1);
    runThread(function() {
        try {
            flashing = true;
            while (flashing) {
                invalidate();
                if (players.indexOf(player) == -1) {
                    if (房间 = 2) {
                        flashing = false;
                        goHome();
                        break;
                    }
                    showTip("目标退出游戏或死亡");
                }
                var yaw;
                if (AIMMODE = true) {
                    yaw = Math.random() * 360 - 180;
                } else {
                    yaw = Math.random() * 360 - 180;
                }
                var pointX = Entity.getX(player) - Math.sin(yaw * Math.PI / 180) * 2,
                    pointY = Entity.getY(player) + 0.5,
                    pointZ = Entity.getZ(player) + Math.cos(yaw * Math.PI / 180) * 2;
                Entity.setRot(Player.getEntity(), yaw + 180, 30);
                Entity.setPosition(Player.getEntity(), pointX, pointY, pointZ);
                Player.setFlying(true);
                lang.Thread.sleep(150);
            }
        } catch (err) {
            showTip(err, 1);
        }
    });
}

function setHome() {
    home = {
        x: Player.getX(),
        y: Player.getY() + 1,
        z: Player.getZ()
    };
    loads("设置成功");
    return true;
}

function goHome() {
    home ? Entity.setPosition(Player.getEntity(), home.x, home.y, home.z) : showTip("无法返回传送点，请先设置传送起点");
}




function runThread(func) {
    var a = new java.lang.Thread(new java.lang.Runnable({
        run: func
    }));
    a.start();
    return a;
}

function thread(func) {
    var a = new java.lang.Thread(new java.lang.Runnable({
        run: func
    }));
    return a;
}

function showTip(text, show) {
    Ui(function() {
        var toast = wg.Toast.makeText(ctx, String(text), show ? show : 0);
        toast.show();
    });
}

function getNames() {
    var arr = [],
        x = Player.getX(),
        y = Player.getY(),
        z = Player.getZ();
    invalidate();
    for (var i in players) arr.push(Player.getName(players[i]) + "--" + Math.round(gougu(x - Entity.getX(players[i]), y - Entity.getY(players[i]), z - Entity.getZ(players[i]))));
    showDialog("所有玩家名", "若在游戏房间外使用，则列表不会正确显示", arr.join("\n"), {
        txt: "关闭"
    });
    return true;
}

function showDialog(title, message, text, negative, positive, neutral, uncancel) {
    Ui(function() {
        try {
            var dialog = new app.AlertDialog.Builder(ctx);
            dialog.setTitle(title);
            var scroll = new wg.ScrollView(ctx);
            if (typeof(text) == "string") {
                getMessage = new wg.EditText(ctx);
                getMessage.setText(text);
                scroll.addView(getMessage);
            } else if (typeof(text) == "object") {
                scroll.addView(text);
            }
            dialog.setView(scroll);
            if (negative) dialog.setNegativeButton(negative.txt ? negative.txt : "", negative.command ? negative.command : null);
            if (positive) dialog.setPositiveButton(positive.txt ? positive.txt : "", positive.command ? positive.command : null);
            if (neutral) dialog.setNeutralButton(neutral.txt ? neutral.txt : "", neutral.command ? neutral.command : null);
            dialog.setMessage(message);
            dialog.setCancelable(uncancel ? false : true);
            dialog.show();
        } catch (err) {
            showTip(err, 1)
        }
    });
    return true;
}

function addCheckBox(parent, text, command, ave, size, checked) {
    try {
        var check = new wg.CheckBox(ctx);
        check.setText(text ? text : "");
        check.setChecked(checked ? checked : false);
        if (size) check.setTextSize(size);
        if (command) check.setOnCheckedChangeListener(new wg.CompoundButton.OnCheckedChangeListener({
            onCheckedChanged: command
        }));
        aveLayout(check, typeof(ave) == "number" ? ave : ave.type, ave.wid, ave.hei);
        parent.addView(check);
        return check;
    } catch (err) {
        print(err)
    }
}

function aveLayout(view, ave, width, height, weight) {
    switch (ave) {
        case 1:
            view.setLayoutParams(new wg.RelativeLayout.LayoutParams(width ? width : -2, height ? height : -2, weight ? weight : 1));
            return view;
        default:
            view.setLayoutParams(new wg.LinearLayout.LayoutParams(width ? width : -2, height ? height : -2, weight ? weight : 1));
            return view;
    }
}

function Ui(command) {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: command
    }));
}

function getColorDrawable(color) {
    return new grap.drawable.ColorDrawable(getColor(color));
}

function getColor(color) {
    return eval("grap.Color." + color.toUpperCase());
}

function scan() {
    runThread(function() {
        abc: while (1) {
            try {
                if (state == 1) {
                    var x = Player.getX(),
                        z = Player.getZ();
                    invalidate();
                    if (players.length > 0) {
                        var scaleX = null,
                            scaleZ = null;
                        for (var i in players) {
                            if (state == 2) break abc;
                            var ls = Math.abs(x - Entity.getX(players[i]));
                            if (scaleX == null || ls > scaleX) {
                                scaleX = ls;
                            }
                            ls = Math.abs(z - Entity.getZ(players[i]));
                            if (scaleZ == null || ls > scaleZ) {
                                scaleZ = ls;
                            }
                        }
                        var distX = scaleX * 10 / 9,
                            distZ = scaleZ * 10 / 9,
                            baseX = x - distX,
                            baseZ = z - distZ,
                            ratioX = lenX / 2 / distX,
                            ratioZ = lenZ / 2 / distZ;
                        for (var i in players) {
                            if (state == 2) break abc;
                            var name = Player.getName(players[i]),
                                color = name.length > 3 && name.substr(0, 1) == "§" && getColorValue(name.substr(3, 1)) ? getColorValue(name.substr(3, 1)) : grap.Color.WHITE,
                                actX = lenX - Math.abs(Entity.getX(players[i]) - baseX) * ratioX,
                                actZ = Math.abs(Entity.getZ(players[i]) - baseZ) * ratioZ;
                            draw(actZ, actX, color);
                            drawPoint(players[i], actZ, actX, color);
                        }
                    }
                    draw(lenZ / 2, lenX / 2, grap.Color.MAGENTA);
                    drawPoint(Player.getEntity(), lenZ / 2, lenX / 2, grap.Color.MAGENTA);
                    Ui(function() {
                        radarShow.setImageBitmap(radarPic);
                        radarPic = grap.Bitmap.createBitmap(lenZ, lenX, grap.Bitmap.Config.ARGB_8888);
                    });
                } else {
                    break;
                }
                java.lang.Thread.sleep(1000);
            } catch (err) {
                showTip(err, 1);
                break;
            }
        }
        state = 3;
        Ui(function() {
            if (radarWin.isShowing()) radarWin.dismiss();
        });
    });
}

function draw(x, y, color) {
    var canvas = new grap.Canvas(radarPic);
    var paint = getPaint({
        color: color,
        dither: true
    });
    canvas.drawCircle(x, y, radius, paint);
}

function drawPoint(player, x, y, color) {
    var ratio = Math.PI / 180,
        yaw = Entity.getYaw(player);
    var x0 = radius * 1.3 * Math.cos(yaw * ratio),
        y0 = radius * 1.3 * Math.sin(yaw * ratio),
        x1 = x0 + radius * Math.cos((yaw - 90) * ratio),
        y1 = y0 + radius * Math.sin((yaw - 90) * ratio),
        x2 = x0 + radius * Math.cos((yaw + 90) * ratio),
        y2 = y0 + radius * Math.sin((yaw + 90) * ratio),
        x3 = x0 * 2,
        y3 = y0 * 2;
    var canvas = new grap.Canvas(radarPic);
    var paint = getPaint({
        color: color,
        dither: true,
        style: grap.Paint.Style.FILL
    });
    var path = new grap.Path();
    path.moveTo(x + x3, y + y3);
    path.lineTo(x + x1, y + y1);
    path.lineTo(x + x2, y + y2);
    path.close();
    canvas.drawPath(path, paint);
}

function gougu() {
    if (arguments.length <= 3) {
        var result = 0;
        for (var i in arguments) {
            result += arguments[i] * arguments[i];
        }
        return Math.sqrt(result);
    } else {
        return null;
    }
}

function scroll(view, horizontal) {
    var scrollView = horizontal ? new wg.HorizontalScrollView(ctx) : new wg.ScrollView(ctx);
    scrollView.addView(view);
    return scrollView;
}

function getColorValue(str) {
    switch (str) {
        case "红":
            return grap.Color.RED;
        case "黄":
            return grap.Color.YELLOW;
        case "蓝":
            return grap.Color.BLUE;
        case "绿":
            return grap.Color.GREEN;
        case "青":
            return grap.Color.CYAN;
        case "紫":
            return grap.Color.rgb(160, 32, 240);
        case "灰":
            return grap.Color.GRAY;
        case "白":
            return grap.Color.WHITE;
        case "黑":
            return grap.Color.BLACK;
        case "橙":
            return grap.Color.rgb(255, 165, 0);
        default:
            return null;
    }
}

function getPaint(fields) {
    var paint = new grap.Paint();
    if (fields.color) paint.setColor(fields.color);
    if (fields.dither) paint.setDither(fields.dither);
    if (fields.antiAlias) paint.setAntiAlias(fields.antiAlias);
    if (fields.shader) paint.setShader(fields.shader);
    if (fields.width) paint.setStrokeWidth(fields.width);
    if (fields.style) paint.setStyle(fields.style);
    return paint;
}

function addButton(parent, text, command, longCommand, ave, size) {
    try {
        var button = new wg.Button(ctx);
        button.setText(text ? text : "");
        if (size) button.setTextSize(1, size);
        if (command) button.setOnClickListener(new view.View.OnClickListener({
            onClick: command
        }));
        if (longCommand) button.setOnLongClickListener(new view.View.OnLongClickListener({
            onLongClick: longCommand
        }));
        aveLayout(button, typeof(ave) == "number" ? ave : ave.type, ave.wid, ave.hei);
        parent.addView(button);
        return button;
    } catch (err) {
        print(err)
    }
}

function 自瞄测试() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx)
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)


        var 起 = new android.widget.Button(ctx)
        起.setText("设置传送点")
        起.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                setHome();
            }
        }))
        layout.addView(起)

        var 回 = new android.widget.Button(ctx)
        回.setText("返回传送点")
        回.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                goHome();
            }
        }))
        layout.addView(回)


        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 150))
        menu.setHeight(dip2px(ctx, 200))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(0, 0, 0, 0)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        print(err)
    }
}


function makeMenu(ctx, layout) {
        var mlayout = new android.widget.RelativeLayout(ctx)
        var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
        var scrollview = new android.widget.ScrollView(ctx)
        var pad = dip2px(ctx, 2)
        scrollview.setPadding(pad, pad, pad, pad)
        scrollview.setLayoutParams(svParams)
        scrollview.addView(layout)
        mlayout.addView(scrollview)
        return mlayout
    }
    //===//