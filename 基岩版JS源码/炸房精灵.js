///如果此脚本冒犯了你的知识产权,请通知@Pvzlight
var 开发者模式 = false
    //如果你打算接手源码继续开发,请开启.
    //启用此模式可以让这个碎梦者独立.
    //开启:true|关闭:false
    //【1】禁止将碎梦者支持多玩或葫芦侠;
    //【2】禁止将此脚本用于盈利目的;
    //【3】引用碎梦者代码时标注来自碎梦者;
    //【4】保留原作者名称与脚本名称;
    //如果你遵守以上条件,那么你修改的这个碎梦者的版权是你的而不是我的.

var 修复模式 = false
    //如果反复出现黑屏和闪退以及报错,请开启.
    //开启:true|关闭:false



//禁止抄袭和恶意篡改
//百度贴吧@Pvzlight制作
调试输出("开始加载");
iVBORw0KGLG = "";
iVBORw0KGC = "/tieba/Mzsui/Mzsui.png";
iVBORw0KGCC = "/tieba/Mzsui/";
iVBORw0KGWD = "http://viewer.maka.im/k/PBZJHZHE";
iVBORw0KGGG = "https://izehamahz.wodemo.com/entry/407039";
iVBORw0KG = "";
var 终末之诗 = ["Once upon a time,there was a player.", "The player was you.", "Sometimes it thought itself human", "on the thin crust of a spinning globe of molten rock.", "The ball of molten rock circled a ball of blazing gas that was three hundred and thirty thousand times more massive than it", "They were so far apart that light took eight minutes to cross the gap. ", "The light was information from a star,", "nd it could burn your skin from a hundred and fifty million kilometres away.", "Sometimes the player dreamed it was a miner", "on the surface of a world that was flat,and infinite.", "The sun was a square of white.", "The days were short", "there was much to do", "nd death was a temporary inconvenience.", "Sometimes the player dreamed it was lost in a story.", "Sometimes the player dreamed it was other things", "in other places. Sometimes these dreams were disturbing.", "Sometimes very beautiful indeed.", "Sometimes the player woke from one dream into another", "then woke from that into a third.", "Sometimes the player dreamed it watched words on a screen.", "Let's go back.", "The atoms of the player were scattered in the grass", "in the rivers,in the air,in the ground", " woman gathered the atoms", "she drank and ate and inhaled and the woman assembled the player", "in her body.", "nd the player awoke", "from the warm,dark world of its mother's body", "into the long dream.", "nd the player was a new story", "never told before", "written in letters of DNA", "nd the player was a new program", "never run before", "generated by a sourcecode a billion years old", "nd the player was a new human", "never alive before made from nothing but milk and love.", "You are the player", "The story. The program.", "The human.", "Made from nothing but milk and love.", "Let's go further back.", "The seven billion billion billion atoms of the player's body were created", "long before this game", "in the heart of a star", "So the player,too.", "is information from a star", "nd the player moves through a story", "which is a forest of information planted by a man called Julian on a flat", "infinite world created by a man called Markus that exists inside a small", "private world created by the player,who inhabits a universe created by...", "Shush.", "Sometimes the player created a small", "private world that was soft and warm and simple.", "Sometimes hard,and cold,and complicated.", "Sometimes it built a model of the universe in its head", "flecks of energy,moving through vast empty spaces. ", "Sometimes it called those flecks \"electrons\" and \"protons\".", "Sometimes it called them \"planets\" and \"stars\".", "Sometimes it believed it was in a universe that was made of energy that was made of offs and ons;", "zeros and ones; lines of code", "Sometimes it believed it was playing a game", "Sometimes it believed it was reading words on a screen.", "You are the player,reading words...", "Shush...", "Sometimes the player read lines of code on a screen", "Decoded them into words;", "decoded words into meaning;", "decoded meaning into feelings,emotions,theories,ideas", "nd the player started to breathe faster and deeper and realised it was alive", "it was alive,those thousand deaths had not been real,the player was alive", "You. You. You are alive.", "nd sometimes the player believed the universe had spoken to it through the sunlight that came through the shuffling leaves of the summer trees", "nd sometimes the player believed the universe had spoken to it through the light that fell from the crisp night sky of winter,where a fleck of light in the corner of the player's eye might be a star a million times as massive as the sun", "oiling its planets to plasma in order to be visible for a moment to the player", "walking home at the far side of the universe", "suddenly smelling food", "lmost at the familiar door", "bout to dream again", "nd sometimes the player believed the universe had spoken to it through the zeros and ones", "through the electricity of the world", "through the scrolling words on a screen at the end of a dream", "nd the universe said I love you", "nd the universe said you have played the game well", "nd the universe said everything you need is within you", "nd the universe said you are stronger than you know", "nd the universe said you are the daylight", "nd the universe said you are the night", "nd the universe said the darkness you fight is within you", "nd the universe said the light you seek is within you", "nd the universe said you are not alone", "nd the universe said you are not separate from every other thing", "nd the universe said you are the universe tasting itself,talking to itself,reading its own code", "nd the universe said I love you because you are love.", "nd the game was over \"nd the player woke up from the dream.", "\"nd the player began a new dream.", "\"nd the player dreamed again,dreamed better. ", "\"nd the player was the universe. ", "\"nd the player was love.", "You are the player.", "Wake up."]
var 小学生名称 = ["残心魄", "xy30308", "喜阳洋", "一只喜羊羊", "太阳的后羿233", "天才8895", "小y飞车", "雪雪仙女i", "残风极影", "唐城战", "我叫雷神中的血神", "我是大凋零", "小曰本250", "汗人中国人", "呵呵ILove你", "我就呵呵了", "当今圣上呵呵", "TF苦力怕", "不许骂王俊凯", "TFBoys帅", "盒中明星万人尊敬", "我是明星诶", "我爷爷奶奶了不起", "海洋女神vs李葛格", "释迦摩尼盒", "我爱吃奥特馒", "超级无敌奥特馒", "超能圣光迪莫", "超能阿布ilove", "超能太监", "小提子", "心甜梦AB", "超级无敌大侠", "白玉龙YY", "雨后的苦力怕", "蜡笔打新668", "不操不闹2333", "不糙补脑233", "我爱于少", "我爱鱼少", "我爱鱼少啊", "我喜欢鱼少", "威少很酷666", "一只罗小丁", "K麒麟苦力怕", "致命微笑", "籽岷喜欢盒zi", "籽岷爱护小动物", "盒籽君233", "打倒Q块", "minebox", "我叫非零", "零李格格", "李格格YH", "炸1妈盒2子", "罗志洋", "罗小丁LOVE", "美人鱼少啊", "灭世神花", "神的传人", "魔王真嘉", "盒籽帝王", "盒籽万岁66623", "第三小学李", "末影人哥哥6666", "Iam苦力怕姐姐", "天使慧慧", "美丽无价", "我很漂亮真的233", "不要污要233", "罗vs罗小丁", "李割嗝的小弟", "我是他哥哥", "pe炎黄", "mcpe炎黄", "pe创世神", "我觉得盒zi很好", "因盒而生", "盒籽vs籽岷", "奇呀真奇怪君", "仰望天空4685", "宇宙之帝698", "世界上最后一只苦力怕2", "世界上最后一只苦力怕", "牛B人生", "我很牛B", "比你牛B", "你没我牛B", "我比你牛多了", "基巴稽ba", "稽扒盒籽", "鲨B多丸", "炸抹盒籽吃枣糕丸", "多丸你抹B58", "yzr扬紫韧", "任我要", "QDYUWQF", "EOGHW", "剁你机扒", "生死主机", "生死猪机", "亡者荣耀", "荣耀亡者", "热咖啡85", "贴巴250", "盒籽520", "情何以堪啊250", "刘芒刘大师", "李浩解123", "不知道啊250", "王整148927821", "QWQQVO", "KKUINDWSF", "ZhaMa5864", "FlyCreeper666", "Her0brine", "盒籽2012", "微笑猫", "微笑咩", "阿里卤鸭", "哇咔咔咔233", "战士风云劫", "暴风战神666", "奥特馒233", "铠甲勇士盒体", "帝皇铠甲盒体666", "我盒你love", "我love盒very", "反盒的都去", "只有高手才来", "不是高手滚", "传说风云魔刀", "妖魔鬼帝", "萌萌魅汁233", "魅族MX250", "白猫警长", "僵尸爱史蒂夫", "屎蒂夫23333"];
var 白块内容 = ["§f▉§0▉▉▉▉▉▉▉▉▉", "§0▉§f▉§0▉▉▉▉▉▉▉▉", "§0▉▉§f▉§0▉▉▉▉▉▉▉", "§0▉▉▉§f▉§0▉▉▉▉▉▉", "§0▉▉▉▉§f▉§0▉▉▉▉▉", "§0▉▉▉▉▉§f▉§0▉▉▉▉", "§0▉▉▉▉▉▉§f▉§0▉▉▉", "§0▉▉▉▉▉▉▉§f▉§0▉▉", "§0▉▉▉▉▉▉▉▉§f▉§0▉", "§0▉▉▉▉▉▉▉▉▉§f▉"]
var smsg = {
    mc: "MINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFTMINECRAFT",
    cm: "TFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIMTFARCENIM"
}

const JSName = testFor("碎梦者Pvzlight").replace(fang(), rnull());
const JSAuthor = testFor("Pvzlight");
const JSVer = testFor("Pvzlight1.7.1.1").replace(fang(), rnull());

var 真 = true,
    假 = false,
    空 = "",
    USE炸妈盒子 = 假,
    首页公告, HTML状态 = "(暂无公告)",
    已联机 = 假,
    首次打开 = 真,
    首次公告 = 假,
    焦点GUI = [null, null, null];

var 功能开关 = [假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, 假, ];

var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()

var 包 = ctx.getPackageName(),
    包名 = null,
    包描述 = null;

var 版本 = ModPE.getMinecraftVersion();

const 字母 = ["", "", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "N", "M", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]

const 白名单 = ["net.zhuoweizhang.mcpelauncher", "net.zhuoweizhang.mcpelauncher.pro", "io.mrarm.mctoolbox", "com.huluxia.mctool", "com.duowan.groundhog.mctools"]

var pvzlight = {
    gca: android.graphics.Color.argb,
    vvo: android.view.View.OnClickListener,
    gdc: android.graphics.drawable.ColorDrawable,
    vvo2: android.view.View.OnTouchListener,
    wp: android.widget.PopupWindow,
    nhan: android.net.http.AndroidHttpClient.newInstance,
    wr: android.widget.RelativeLayout,
    wi: android.widget.ImageView,
    wll: android.widget.LinearLayout.LayoutParams,
    deb64: android.util.Base64.decode,
    cdo: android.content.DialogInterface.OnClickListener,
    vvo3: android.view.View.OnLongClickListener,
    ws: android.widget.ScrollView,
    wl: android.widget.LinearLayout,
    wb: android.widget.Button,
    wt: android.widget.TextView,
    ed: android.widget.EditText,
    javaif: java.io.FileReader
}

var CH终末之诗 = [
    "我看到你所指的那位玩家了。",
    "是的。",
    "小心。",
    "它已达到了更高的境界。",
    "它能够阅读我们的思想。",
    "无伤大雅。",
    "它认为我们是游戏的一部分。",
    "我喜欢这个玩家。",
    "它玩得很好。",
    "它从未放弃。",
    "它以屏幕上出现的文字的形式阅读着我们的思想。",
    "在它深陷游戏梦境中时，它选择以这种方式想象出形形色色的事物。",
    "文字创造了一种美妙的界面。",
    "非常灵活。",
    "且比凝视着屏幕后的现实要更好。",
    "它们也曾经通过听声音来接收信息。",
    "在玩家能够阅读之前。",
    "君不见，在过去的日子里，那些不曾游玩的人们称呼玩家为女巫，和术士。",
    "而玩家们梦见它们自己乘坐在被恶魔施力的棍子上，在空气中翱翔。",
    "这个玩家梦见了什么？",
    "它梦见了阳光和树。",
    "梦见了火与水。",
    "它梦见它创造。",
    "它亦梦见它毁灭。",
    "它梦见它狩猎，亦被狩猎。",
    "它梦见了庇护所。",
    "哈，那原始的界面。",
    "经历一百万年的岁月雕琢，依然长存。",
    "但此玩家在那屏幕后的真实里，建造了什么真实的建筑？",
    "它辛勤地劳作，和其它百万众一起，刻画了一个真实的世界，由？？？，且为了？？？，于？？？中创造了？？？。",
    "它读不出那个思想。",
    "不。",
    "它还没有到达最高的境界。",
    "那层境界，它必须完成生命的长梦，而非游戏中黄粱一梦。",
    "它知道我们爱它么？这个宇宙是仁慈的？",
    "有时，通过它思绪的杂音，它能听到宇宙，是的。",
    "但是有时亦不胜悲伤，于那漫漫长梦中。",
    "它创造了没有夏日的世界，在黑日下颤抖着，将自己悲伤的创造视为现实世界。",
    "用悲伤来治愈会摧毁它。",
    "而悲伤是它的私人事务。",
    "我们不能干涉。",
    "有时当它们深陷梦境中时，我想要告诉它们，它们在现实中创造了真实的世界。",
    "有时我想告诉它们它们自身对宇宙的重要性。",
    "有时，当它们和现实失去了联系，我想帮助它们与它们所惧怕的世界交流。",
    "它读出了我们的思想。",
    "有时我毫不关心。",
    "有时我想要告诉它们，你们所认为的真实不过是？？?和？？？，我想要告诉它们，它们是在？？？中的？？？。",
    "于它们的长梦中，它们眼中所见的真实太少了。",
    "而它们仍然玩这个游戏。",
    "但很容易就可以告诉它们……",
    "对于这个梦来说太强烈了。",
    "告诉它们如何活着就是阻碍它们活下去。",
    "我不会告诉这个玩家如何生活的。",
    "这个玩家正在变得焦虑。",
    "我会告诉这个玩家一个故事。",
    "但不是真相。",
    "不。",
    "是一个严密地将真实包裹起来的文字牢笼。",
    "而不是赤裸裸的真相。",
    "赋予它主体，再一次。",
    "好的。",
    "玩家……",
    "以名字称呼它。",
    "游戏的玩家。",
    "很好。",
    "现在，深呼吸。",
    "然后再深呼吸一次。",
    "感受空气充盈你的肺叶。",
    "让你的四肢回归。",
    "是的，运动你的手指。",
    "再次感受你的身体，在重力下，在空气中。",
    "在长梦中重生。",
    "你感受到了。",
    "你的身体每时每刻都触摸着宇宙，尽管你是分离的存在。",
    "尽管我们是分离的存在。",
    "我们是谁？我们曾经被称作高山的精灵。",
    "太阳父亲，月亮母亲。",
    "古老的英灵，动物的魂魄。",
    "神祗。",
    "鬼魂。",
    "小绿人。",
    "而后是神邸，恶魔，天使。",
    "吵闹鬼。",
    "外星人，地外生物。",
    "轻粒子，夸克。",
    "词语不断地变化。",
    "我们始终如一。",
    "我们是宇宙。",
    "我们是一切你认为出离你本体的事物。",
    "你现在看着我们，透过你的皮肤和你的眼睛。",
    "而为什么宇宙触摸着你的皮肤，向你洒向光芒？是为了看见你，玩家。",
    "以及了解你。",
    "我应告诉你一个故事。",
    "很久以前，有一个玩家。",
    "有时它认为自己是那不断旋转的球体上一层薄薄的熔化的岩石上的人类。",
    "那玩家就是你",
    "那融化的岩石球环绕着一个质量大它三十三万倍的炫目气体球旋转。",
    "它们是相隔得如此之远，以至于光需要八分钟才能穿越那空隙。",
    "那光是来自一颗恒星的信息，它能够在一亿五千万公里外烧灼你的皮肤。",
    "有时这个玩家梦见它是一个在一个平的，无限延展的世界表面上的矿工。",
    "那太阳是一个方形的白点。",
    "昼夜交替很快；要做的事情也很多；死亡亦只是暂时和不方便的。",
    "有时这玩家梦见它迷失在了一个故事里。",
    "有时这玩家梦见它成为了其它的事物，在其它地方。",
    "有时这些梦是扰人的。",
    "有些则实在很美。",
    "有时这个玩家从一个梦中醒来，发现自己落入了第二个梦，却终究是在第三个梦中。",
    "有时这个玩家梦见它在屏幕上看着文字。",
    "让我们回退一点。",
    "组成玩家的原子散布在草中，河流中，在那空气中，也在那大地中。",
    "一个女性收集了那些原子；她饮用、进食、吸入；而后那女性在她的身体中，孕育了玩家。",
    "然后那玩家醒来了，从一个温暖，昏暗的母亲体内，进入了漫漫长梦。",
    "而那玩家是一个新的故事，从未被讲述过，由DNA的语言书写着。",
    "而那玩家是一个新的程序，从未被运行过，由上亿年的源代码生成。",
    "而那玩家是一个新的人，从未生活过，由奶和爱组成。",
    "你就是那玩家。",
    "那个故事。",
    "那个程序。",
    "那个人类。",
    "仅由奶和爱组成。",
    "我们再往更远的过去回退一点。",
    "那由七千亿亿亿原子组成的玩家的身体被创造了，远在这游戏之前，在一颗恒星的内部。",
    "所以那玩家也是，来自一颗恒星的信息。",
    "而这个玩家贯穿这个故事的始末，源于一个叫Julian的人种下的信息种子长成的森林，一个叫Markus的男人创造的无限世界，存在于一个由玩家创造的小的，私人世界里，而那又继承了宇宙创造的……",
    "嘘。",
    "有时这个玩家创造的小天地是柔软，温暖和简单的。",
    "有时是坚硬，冰冷和复杂的。",
    "有时它在脑中建造出宇宙的模型；斑斑点点的能量穿越广阔空旷的空间。",
    "有时它称呼这些斑点为“电子”和“质子”。",
    "有时它称呼它们为“行星”和“恒星”。",
    "有时它确信它存在于一个由“开”和“关”；“0”和“1”；一行行的命令组成的宇宙。",
    "有时它确信它是在玩一个游戏。",
    "有时它确信它是在读着屏幕上的文字。",
    "你就是那玩家，阅读着文字……",
    "嘘……有时这玩家读屏幕上的命令行。",
    "将它们解码成为文字；将文字解码为意义；将意义解码为感情，情绪，理论，想法，而玩家的呼吸开始急促并意识到了它是活着的，它是活生生的，那上千次的死亡不是真的，玩家是活着的。",
    "你！你！你是活着的！",
    "而有时这玩家相信宇宙曾通过穿越夏日树叶的那斑斓的阳光对它说话。",
    "有时这玩家相信宇宙透过晴朗的冬日夜空中，存在于它眼中一隅的星点星光，可能比太阳大上上百万倍的恒星沸腾着的电浆那一瞬间发出来的光对它说话，在宇宙的远侧行走回家的路上，突然闻到了食物，在那熟悉的门前，它又准备好再一次投入梦境",
    "而有时玩家相信宇宙透过零和一，透过世界的电力，透过屏幕上滚动的文字和梦的终结对它说话",
    "宇宙说我爱你",
    "宇宙说你玩得不错",
    "宇宙说一切你所需的你都具有",
    "宇宙说你比你所认知的要强大",
    "宇宙说你就是日光",
    "宇宙说你就是黑夜",
    "宇宙说你所斗争的黑暗就在你心中",
    "宇宙说你所寻找的光明亦在你心中",
    "宇宙说你不是孤独的",
    "宇宙说你不是和所有的事物所隔绝的",
    "宇宙说你就是宇宙在品尝着自己，对自己说话，阅读着它自己的代码。",
    "宇宙说我爱你因为你就是爱。",
    "曲终人散，黄粱一梦。",
    "玩家开始了新的梦境。",
    "玩家再次做起了梦，更好的梦。",
    "玩家就是宇宙。",
    "玩家就是爱。",
    "你就是那个玩家。",
    "该醒了。"
]

var astr = [
    "把启动器挂在后台,然后打开联机盒子.\n把联机盒子的启动模式改成手动.\n然后进去一个房间,停留在标题画面.\n接下来切换到后台的启动器.\n点击两下\"联盒外进\"游戏会自动关闭,\n最后再启动游戏就成功了!",
    "§e[多玩MC联机]",
    "富强,民主,文明,和谐,自由,平等,公正,法制,爱国,敬业,诚信,友善",
    "到此一游",
    "正在为你进行第一次启动",
    "启动游戏\n加载脚本\n......",
    "启动游戏\n加载脚本\n游戏便利\n......",
    "这是一个侵权软件",
    "这玩意还需要描述?\n这就是一个垃圾!\n盒子君盒子娘死妈！",
    "未知",
    "<b><font color=#FF0000>欢</font><font color=#FF7F00>迎</font><font color=#FFFF00>使</font><font color=#00FF00>用</font><font color=#00FFFF>碎</font><font color=#0000FF>梦</font><font color= #8B00FF>者</font>",
    "<font color=#1482bb>★</font>",
    "<font color=#1482bb>☆</font>",
    "你已被作者请出房间！",
    "PVZLIGHT\n",
    "§X0167",
    "你的设备非常害怕,我们已经知道原因,你现在只能做:卸载葫芦侠",
    "§b[碎梦者]",
    "Multiplayers master", ["2OO", "4O4O", "MC11O"],
    "去M社发帖申请炸妈魔盒，会有相关审核人员将魔盒赠送于你！(你需要说明你为什么要申请魔盒)",
    "数据流",
    "无法链接",
    "获取公告失败！",
    "§4碎梦者Pvzlight将会摧毁你的梦！",
    "§7§o[CONSOLE:正在加载黑金木马变种病毒...]",
    "§7§o[CONSOLE:病毒正在加载 %s%...]",
    "§7§o[CONSOLE:病毒加载完毕]",
    "§7§o[CONSOLE:正在将黑金木马变种病毒植入至房主手机...]",
    "§7§o[CONSOLE:病毒正在攻破房主手机防御系统...]",
    "方块启动器",
    "Toolbox",
    "葫芦瞎",
    "炸妈盒子",
    "undefined",
    "如果启动器加载碎梦者时卡住不动或加载时非常非常慢，就等个一两天再使用吧：因为还没修复",
    "你现在是修复模式,部分功能你将无法使用,将此脚本中第一行\"修复模式= 真\"的\"真\"改成\"假\"即可关闭此模式!",
    "脚本名称:碎梦者<br>脚本作者:Pvzlight<br>脚本版本:%ver<br>游戏版本:%k<br>启动工具:%q<br>交流群:579439740<br>%e",
    testFor("发现新版本%s!\n加入交流群579439740进行更新,\n或手动打开下面地址进行更新:\nhttp://Pvzlightyun.baidu.com/share/link?shareid=1785914742&uk=1870700783"),
    "无法获取公告!",
    "§c你手机中有多玩盒子的文件夹只有删除它你才能进入房间 ",
    "§c你手机中有葫芦侠的文件夹只有删除它你才能进入房间 ",
    "§b碎梦者v%s§r| §a交流群: 579439740"
];

if (包 == 白名单[0] || 包 == 白名单[1]) {
    包名 = astr[30];
    包描述 = astr[5];
} else if (包 == 白名单[2]) {
    包名 = astr[31];
    包描述 = astr[6];
} else if (包 == 白名单[3]) {
    包名 = astr[32];
    包描述 = astr[7];
} else if (包 == 白名单[4]) {
    包名 = astr[33];
    USE炸妈盒子 = 真;
    包描述 = astr[8];
} else {
    包名 = astr[34];
    包描述 = astr[9]
}

var 屏幕高度 = ctx.getWindowManager().getDefaultDisplay().getHeight();

var 屏幕宽度 = ctx.getWindowManager().getDefaultDisplay().getWidth();

var 我的名称 = 获取玩家名字(获取玩家实体())

var 社会主义核心价值观 = ["富强", "民主", "文明", "和谐", "自由", "平等", "公正", "法制", "爱国", "敬业", "诚信", "友善", 0, ]

var info信息 = ["你在途中可能会遇到Pvzlight其他使用这个JS的玩家,系统会自动告诉你是哪些玩家.", "你可以点击Pvzlight\"团队\"给他们发送一条密语", "你还可能会遇到使用篡改这个PvzlightJS的玩家,系统不会告诉你是哪些玩家.", "但你可以点击\"防御\"让他们Pvzlight的客户端爆炸", "碎梦者PvzlightJS持续更新,固定下载地址:", "http://Pvzlightyun.baidu.com/share/link?shareid=1785914742&uk=1870700783", "§1§2§8§9§1§0§0§1§6§8", "§1§2§8§9§1§0§0§1§6§9"]

function rnull() {
    return ""
}

function getColor(r, y, b, a) {
    return pvzlight.gca(a, r, y, b)
}

function dip2px(ctx, dips) {
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function 生成随机数(min, max) {
    return Math.floor(Math.random() * (max - min)) + min
}

function 设置游戏模式(type) {
    Level.setGameMode(type)
}

function 放置方块(x, y, z, id, date) {
    if (id == null) {
        id = 1
    }
    if (date == null) {
        date = 0
    }
    setTile(x, y, z, id, date)
}

function 获取游戏模式() {
    return Level.getGameMode()
}

function 设置游戏时间(time) {
    Level.setTime(time)
}

function 手中物品() {
    return Player.getCarriedItem();
}

function 获取玩家名字(name) {
    return Player.getName(name)
}

function 传送实体(ent, x, y, z) {
    setPosition(ent, x, y, z);
}

function 传送玩家(x, y, z) {
    setPosition(获取玩家实体(), x, y, z);
}

function 获取玩家实体() {
    return getPlayerEnt()
}

function 实体是否为玩家(实体) {
    return Player.isPlayer(实体)
}

function 获取实体血量(实体) {
    return Entity.getHealth(实体)
}

function 设置实体血量(实体, 血量) {
    Entity.setHealth(实体, 血量);
}

function 移除所有药水效果(实体) {
    Entity.removeAllEffects(实体);
}

function 设置实体铭牌(实体, 名字) {
    Entity.setNameTag(实体, 名字)
}

function 生成粒子(a, b, c, d, e, f, g, h) {
    Level.addParticle(a, b, c, d, e, f, g, h)
}

function 添加物品(a, b, c) {
    addItemInventory(a, b, c)
}

function tip(文本) {
    ModPE.showTipMessage("\n\n§d" + 文本)
}

function 手中物品ID() {
    return Player.getSelectedSlotId()
}

function 附魔(物品, 魔种, 等级) {
    Player.enchant(物品, 魔种, 等级);
}

function 玩家是否能飞(是否) {
    Player.setCanFly(是否)
}

function 爆炸(x, y, z, r) {
    Level.explode(x, y, z, r)
}


function 发送消息(文本) {
    if (获取实体血量(获取玩家实体()) != 0 && Player.getHunger() != -1) {
        switch (功能开关[13]) {
            case 假:
                Entity.setNameTag(getPlayerEnt(), 空);
                Server.sendChat(文本 + "§碎梦§");
                break;
            case 真:
                输出消息(文本);
                break;
        }
    } else {
        switch (功能开关[13]) {
            case 假:
                Entity.setNameTag(getPlayerEnt(), 空);
                Server.sendChat(文本);
                break;
            case 真:
                输出消息(文本);
                break;
        }
    }
}

function 破坏方块(x, y, z, be) {
    Level.destroyBlock(x, y, z, be)
}

function 带名字发送消息(name, 文本) {
    if (获取实体血量(获取玩家实体()) != 0 && Player.getHunger() != -1) {
        switch (功能开关[13]) {
            case 假:
                Entity.setNameTag(获取玩家实体(), name);
                Server.sendChat(文本 + "§碎梦§");
                break;
            case 真:
                输出消息("<" + name + "> " + 文本);
                break;
        }
    } else {
        switch (功能开关[13]) {
            case 假:
                Entity.setNameTag(获取玩家实体(), name);
                Server.sendChat(文本);
                break;
            case 真:
                输出消息("<" + name + "> " + 文本);
                break;
        }
    }
}

function 输出JS消息(文本) {
    clientMessage("§7§o[碎梦者: " + 文本 + "§r§7§o]")
}

const sdka = new android.os.Environment.getExternalStorageDirectory().getAbsolutePath();

const 配置 = sdka + "/games/com.mojang/碎梦者/";

if (!存在文件(配置)) {
    调试输出(astr[4]);
    创建文件(配置);
    创建文件(配置 + "images/");
    创建文件(配置 + "script/");
    写出文件(配置 + "info.txt", "脚本名称:碎梦者\n脚本作者:Pvzlight\n脚本版本:%ver\n游戏版本:%k\n启动工具:%q".replace("%ver", JSVer).replace("%q", 包名).replace("%k", 版本));
}

function 关闭游戏() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            ctx.finish()
        }
    }))
}

function 输出消息(文本) {
    clientMessage(文本)
}

function 解(s) {
    return unescape(s.replace(/\\(u[0-9a-fA-F]{4})/gm, '%$1'));
}

function 如果(a, b, c, d, e) {
    switch (b) {
        case 0:
            if (a > c) {
                eval(d)
            } else {
                if (e != null) {
                    eval(e)
                }
            };
            break;
        case 1:
            if (a < c) {
                eval(d)
            } else {
                if (e != null) {
                    eval(e)
                }
            };
            break;
        case 2:
            if (a == c) {
                eval(d)
            } else {
                if (e != null) {
                    eval(e)
                }
            };
            break;
        case 3:
            if (a != c) {
                eval(d)
            } else {
                if (e != null) {
                    eval(e)
                }
            };
            break;
    }
}

var pvzvery6, neirong;
var msgwj = ["/games/com.mojang/minecraftpe/.external_server.txt", "/games/com.mojang/minecraftpe/.external_server.txt", "/games/com.mojang/minecraftpe/externalPvzlight_servers.txt", "/games/com.mojang/minecraftpe/externalPvzlight_servers.txt", "1:", "2:", "...:", ":", "\n"];

function 读入文件(目录) {
    var 内容 = 空,
        读 = java.io.BufferedReader(new pvzlight.javaif(目录)),
        文本内容 = 读.readLine();
    while (文本内容) {
        内容 += 文本内容 + "\n";
        文本内容 = 读.readLine();
    }
    return 内容;
}

function 写出文件(目录, 内容) {
    new java.io.FileOutputStream(目录).write(new java.lang.String(空 + 内容).getBytes());
}

function 打开文件(文件) {
    return java.io.File(文件)
}

function 创建文件(文件) {
    new java.io.File(文件).mkdirs()
}

function 存在文件(文件) {
    return 打开文件(文件).exists()
}
String.prototype.偷梁换柱 = function(s1, s2) {
    return this.replace(new RegExp(s1, "gm"), s2);
}

function 调试输出(文本, type) {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            if (type == null) {
                android.widget.Toast.makeText(ctx, 色("<font color=#FFA500>碎梦者</font>:" + 文本), 10).show()
            } else if (type != 1) {
                android.widget.Toast.makeText(ctx, 色(文本), 10).show()
            } else {
                ctx.runOnUiThread(new java.lang.Runnable() {
                    run: function() {
                        android.widget.Toast.makeText(ctx, 色(astr[10]), 0).show();

                    }
                });
            }
        }
    }))
}

function 信息框(a, b, type) {
    var str = null;
    if (type == null) {
        var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                var 新信息框 = new android.app.AlertDialog.Builder(ctx)
                if (b == null) {
                    新信息框.setTitle("碎梦者")
                } else {
                    新信息框.setTitle(a)
                }
                if (b == null) {
                    新信息框.setMessage(a);
                    str = a
                } else {
                    新信息框.setMessage(b);
                    str = b
                }
                新信息框.setPositiveButton("确定", new pvzlight.cdo() {
                    onClick: function(dia, w) {}
                });
                新信息框.show()
            }
        }))
    }
}

function cannotgetcmd() {
    调试输出(astr[22]);
    HTML状态 = "(无法获取公告)"
}

function 换(文本, 替换) {
    return 文本.偷梁换柱("%s", 替换)
}

function ban(a) {
    if (a + "\n" == getid()) {
        功能开关[19] = 真;
        功能开关[22] = 真;
        写出文件(配置 + "script/isban.txt", 真)
    }
}

function getid() {
    return pvzvery6
};

function x0167_X1D7() {
    var x0167_X1B7 = "";
    if (!存在文件(sdka + 解(iVBORw0KGC))) {
        if (!存在文件(sdka + 解(iVBORw0KGCC))) {
            创建文件(sdka + 解(iVBORw0KGCC))
        }
        for (var i = 0; i < 8; i++) {
            x0167_X1B7 = x0167_X1B7 + 字母[生成随机数(0, 25)]
        }
        写出文件(sdka + 解(iVBORw0KGC), x0167_X1B7);
        pvzvery6 = 读入文件(sdka + 解(iVBORw0KGC));
    } else {
        pvzvery6 = 读入文件(sdka + 解(iVBORw0KGC));
    }
}
x0167_X1D7();

function 黑屏() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, 屏幕宽度, 屏幕高度);
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(屏幕宽度);
        menu.setHeight(屏幕高度);
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(255, 0, 0, 0)));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err);
    }
}


function entityAddedHook(实体) {
    if (实体是否为玩家(实体) == 真) {
        if (实体 == 获取玩家实体()) {
            输出JS消息("%player%加入游戏.".偷梁换柱("%player%", 获取玩家名字(实体)));
        }
    }
}
var 队友召唤 = getid();

function chatReceiveHook(消息, sender) {
    if (消息 == "§请求房间连接碎梦者§") {
        输出JS消息("§a已成功连接此房间");
    }
    var a = 消息.split(空);
    if (a[0] != ".") {
        preventDefault();
        if (sender != ("" && " " && "  " && null)) {
            if (消息.search("§碎梦§") != -1) {
                输出消息(换("§7[碎梦者]§f<%s> ", sender) + 消息);
            } else {
                输出消息(换("§7[聊天]§f<%s> ", sender) + 消息);
            }
        } else {
            if (消息.search("§碎梦者§") != -1) {
                输出消息("§7[碎梦者]§f" + 消息);
            } else {
                输出消息("§7[聊天]§f" + 消息);
            }
        }
    }

    if (功能开关[40] == 真 && 消息 == 空) {
        preventDefault()
    }
    if (sender == "" || sender == " " || sender == null) {
        发送者 = "碎梦者"
    } else {
        发送者 = sender
    }
    if (消息.search("§碎梦者") != -1) {
        var 分析 = 消息.split("Ⅲ");
        输出消息(换("§6%s§7:", 分析[1]) + 分析[2]);
    };
    if (消息 == astr[15] && 功能开关[21] == 真) {
        ifa()
    }
    if (消息 == "§1§2§8§9§1§0§0§1§6§8") {
        输出消息(换("§6" + 发送者 + "§7:%s", "§b@全体成员"));
        调试输出(换("<font color=#FFA500>%s</font>:@全体成员", 发送者), "多玩死妈");
    }
    if (消息 == "§1§2§8§9§1§0§0§1§6§9") {
        ifjsname();
    }
}

if (修复模式 == 真) {
    信息框(astr[36])
}
var 旧的端口 = 0,
    新的端口 = 0,
    次 = [0, 0, 0, ];

function f5port() {
    旧的端口 = Server.getPort();
    if (旧的端口 != 0) {
        已联机 = 真
    } else {
        已联机 = 假
    }
    if (已联机 == 真) {
        if (旧的端口 != 新的端口) {
            新的端口 = 旧的端口
            var 端口变化提示 = ["房主:", "端口现在是:§6", "§7"]
            输出JS消息(端口变化提示[1] + 新的端口 + 端口变化提示[2]);
            Entity.setNameTag(getPlayerEnt(), 空);
            Server.sendChat("§请求房间连接碎梦者§");
            输出JS消息("§c正在连接此房间...");
        }
    }
}

function modTick() {
    var 生物 = Entity.getAll();
    if (功能开关[17] == 真) {
        for (var i = 0; i < 生物.length; i++) {
            var a = Entity.getX(生物[i]) - getPlayerX(),
                b = Entity.getY(生物[i]) - getPlayerY(),
                c = Entity.getZ(生物[i]) - getPlayerZ();
            var 色 = "§a";
            if (a * a + b * b + c * c <= 20 * 20 && 生物[i] != 获取玩家实体()) {
                if (Entity.getEntityTypeId(生物[i]) == 10) {
                    设置实体铭牌(生物[i], "鸡 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 11) {
                    设置实体铭牌(生物[i], "牛 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 12) {
                    设置实体铭牌(生物[i], "猪 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 13) {
                    设置实体铭牌(生物[i], "羊 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 14) {
                    设置实体铭牌(生物[i], "狼 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 15) {
                    设置实体铭牌(生物[i], "村民 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 16) {
                    设置实体铭牌(生物[i], "蘑菇牛 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 17) {
                    设置实体铭牌(生物[i], "鱿鱼 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 19) {
                    设置实体铭牌(生物[i], "蝙蝠 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 20) {
                    设置实体铭牌(生物[i], "铁傀儡 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 21) {
                    设置实体铭牌(生物[i], "雪傀儡 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 22) {
                    设置实体铭牌(生物[i], "豹猫 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 32) {
                    设置实体铭牌(生物[i], "僵尸 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 33) {
                    设置实体铭牌(生物[i], "苦力怕 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 34) {
                    设置实体铭牌(生物[i], "骷髅 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 35) {
                    设置实体铭牌(生物[i], "蜘蛛 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 36) {
                    设置实体铭牌(生物[i], "僵尸猪人 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 37) {
                    设置实体铭牌(生物[i], "史莱姆 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 38) {
                    设置实体铭牌(生物[i], "末影人 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 39) {
                    设置实体铭牌(生物[i], "虫子 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 40) {
                    设置实体铭牌(生物[i], "洞穴蜘蛛 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 41) {
                    设置实体铭牌(生物[i], "恶魂 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 42) {
                    设置实体铭牌(生物[i], "岩浆怪 " + 色 + 获取实体血量(生物[i]))
                }
                if (Entity.getEntityTypeId(生物[i]) == 43) {
                    设置实体铭牌(生物[i], "烈焰人 " + 色 + 获取实体血量(生物[i]))
                }
            }
        }
    }

    if (功能开关[23] == 真) {
        var x = getPlayerX(),
            y = getPlayerY(),
            z = getPlayerZ();
        for (var i = 1; i <= 20; i++) {
            破坏方块(x, y + 10 - i, z, 假);
            破坏方块(x + 1, y + 10 - i, z, 假);
            破坏方块(x - 1, y + 10 - i, z, 假);
            破坏方块(x, y + 10 - i, z + 1, 假);
            破坏方块(x, y + 10 - i, z - 1, 假)
        }
    }
    if (功能开关[24] == 真) {
        var x = getPlayerX(),
            y = getPlayerY(),
            z = getPlayerZ();
        for (var i = 1; i <= 20; i++) {
            破坏方块(x, y + 10 - i, z, 假);
        }
    }
    if (功能开关[25] == 真) {
        var 玩家列表 = get全部玩家();
        for (var i = 0; i < 玩家列表.length; i++) {
            if (玩家列表[i] != 获取玩家实体()) {
                Level.spawnMob(Entity.getX(玩家列表[i]), Entity.getY(玩家列表[i]), Entity.getZ(玩家列表[i]), 93);
            }
        }
    }
    if (功能开关[26] == 真) {
        var x = Entity.getX(Player.getPointedEntity());
        var y = Entity.getY(Player.getPointedEntity());
        var z = Entity.getZ(Player.getPointedEntity());
        if (Player.getPointedEntity() != null && Player.getPointedEntity() != -1) {
            Entity.setFireTicks(Player.getPointedEntity(), 60);
            Level.addParticle(ParticleType.cloud, x, y, z, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x - 1, y, z + 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x + 1, y, z - 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x + 1, y - 1, z + 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x - 1, y - 1, z - 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x - 1, y - 1, z + 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x + 1, y - 1, z - 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x + 1, y - 2, z + 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x - 1, y - 2, z - 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x - 1, y - 2, z + 1, 0, 0, 0, 20);
            Level.addParticle(ParticleType.cloud, x + 1, y - 2, z - 1, 0, 0, 0, 20);
        }
    }
    if (功能开关[27] == 真) {
        if (Player.getPointedEntity() != null && Player.getPointedEntity() != -1) {
            Level.spawnMob(Entity.getX(Player.getPointedEntity()), Entity.getY(Player.getPointedEntity()), Entity.getZ(Player.getPointedEntity()), 93);
        }
    }
    if (功能开关[33] == 真) {
        if (功能开关[34] == 假) {
            功能开关[34] = 真;
            发送消息("§b§l§o§n" + 色表[生成随机数(0, 色表.length)] + smsg.mc)
        } else {
            功能开关[34] = 假;
            发送消息("§b§l§o§n" + 色表[生成随机数(0, 色表.length)] + smsg.cm)
        }
    }
    if (功能开关[37] == 真) {
        lj恐吓[1]++
            if (lj恐吓[0] == 2) {
                for (var i = 30; i < 100; i++) {
                    发送消息(换(astr[26], i))
                };
                lj恐吓[0]++;
            }
        if (lj恐吓[1] > 200) {
            if (lj恐吓[0] < 4) {
                lj恐吓[0]++
            } else {
                lj恐吓[2]++
            };
            lj恐吓[1] = 0;
            switch (lj恐吓[0]) {
                case 1:
                    发送消息(astr[25]);
                    break;
                case 3:
                    lj恐吓[0]++;
                    发送消息(astr[27]);
                    发送消息(astr[28]);
                    break;
                case 4:
                    lj恐吓[0]++;
                    发送消息(astr[29]);
                    break;
                case 5:
                    发送消息(换("§7§o[CONSOLE:已攻破房主手机第" + lj恐吓[2] + "道防线\"%s\"]", 字母[生成随机数(0, 25)] + 字母[生成随机数(0, 25)] + 字母[生成随机数(0, 25)] + 字母[生成随机数(0, 25)] + 字母[生成随机数(0, 25)] + 字母[生成随机数(0, 25)]));
                    break;
            }
        }
    }
    if (功能开关[22] == 真) {
        次[0]++;
        if (次[0] > 200) {
            关闭游戏();
        }
    }
    if (实体是否为玩家(Player.getPointedEntity()) == 真) {
        if (获取实体血量(Player.getPointedEntity()) <= 25) {
            tip("§a" + 获取玩家名字(Player.getPointedEntity()) + 换("§c %s/20", 获取实体血量(Player.getPointedEntity())));
        } else {
            tip(换("§4哎哟?%s作弊了?", 获取玩家名字(Player.getPointedEntity())))
        }
    }
    f5port();
    if (功能开关[13] == 真) {
        tip("§c调试模式下所有功能仅自己可见")
    }
    if (功能开关[14] == 真) {
        别踩白块()
    }
}

function ifa() {
    if (getid() != astr[14]) {
        信息框(astr[13]);
        功能开关[22] = 真
    }
}


/*
function http读文件(url){
var a=new java.lang.StringBuffer()
var c=new java.net.URL(url)
var b=c.openConnection()
var d=new java.io.BufferedReader(new java.io.InputStreamReader(b.getInputStream()))
var f=null
while ((f=d.readLine())!=null)
a.append(f+"\n")
d.close()
return a.toString();
}
//来自 @一dai枭雄earth
//来自 @一dai枭雄earth
//来自 @一dai枭雄earth
*/

function newLevel() {
    var 游戏模式;
    if (Level.getGameMode() == 0) {
        游戏模式 = "生存模式";
    } else if (Level.getGameMode() == 1) {
        游戏模式 = "创造模式";
    } else {
        游戏模式 = "未知"
    }

    输出JS消息("地图名称:§6" + Level.getWorldName());
    输出JS消息("游戏模式:§6" + 游戏模式);
    if (USE炸妈盒子 == 真) {
        输出JS消息("§d你是用\"炸妈盒子\"启动游戏的！");
    }
}

function leaveGame() {
    for (var i = 0; i < 功能开关.length; i++) {
        if (i != 19 || i != 22 || i != 21) {
            功能开关[i] = 假
        }
    }
    lj恐吓[0] = 0;
    lj恐吓[1] = 0;
    lj恐吓[2] = 0;
    where终末之诗 = 假;
    whereCH终末之诗 = 假;
    队友召唤 = getid();
    旧的端口 = 0;
    新的端口 = 0;
    已联机 = 假;
}

function attackHook(a, v) {
    if (v == 获取玩家实体()) {
        if (实体是否为玩家(a) == 真) {
            tip(换("玩家%s打了你一下", 获取玩家名字(a)))
        }
    }
    if (功能开关[18] == 真) {
        if (a == 获取玩家实体() && 实体是否为玩家(v) == 真) {
            var 玩家列表 = get全部玩家();
            for (var i = 0; i <= 玩家列表.length; i++) {
                发送消息(换(获取玩家名字(玩家列表[i]) + " 杀死了 %s", 获取玩家名字(v)));
            }
        }
    }
}


function projectileHitEntityHook(实体, 被砸中的实体) {
    if (实体是否为玩家(被砸中的实体) == 真) {
        if (被砸中的实体 == 获取玩家实体()) {
            if (实体 == EntityType.ARROW) {
                tip("你中箭了!");
            }
        } else {
            if (实体 == EntityType.ARROW) {
                tip(换("玩家%s中箭了!", 获取玩家名字(被砸中的实体)));
            }
        }
    }
}


function 分隔(mainb) {
    var newt =
        newt.setText(null)
    newt.setTextSize(2)
    mainb.addView(newt)
    return newt
}


function ifjsname() {
    if (JSName != "做梦的作者".replace("做", "碎").replace("的作", 空)) {
        发送消息("§cBOOM！篡改狗%player%的客户端爆炸了！".偷梁换柱("%player%", 我的名称));
        发送消息("§cBOOM！篡改狗%player%的客户端爆炸了！".偷梁换柱("%player%", 我的名称));
        发送消息("§cBOOM！篡改狗%player%的客户端爆炸了！".偷梁换柱("%player%", 我的名称));
        关闭游戏();
    }
}
var 色表 = ["§1", "§2", "§3", "§4", "§5", "§6", "§7", "§8", "§9", "§0", "§a", "§b", "§c", "§d", "§e", "§f", ]

function 随机颜色() {
    return 色表[生成随机数(0, 16)]
}

function 创建快捷方式(name, cmd) {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var 坐标x = 屏幕宽度,
        坐标y = ctx.getWindowManager().getDefaultDisplay().getHeight() / 2,
        坐标x1, 坐标y1, 坐标x2, 坐标y2;
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var 窗口 = new pvzlight.wp();
                var layout = new pvzlight.wr(ctx),
                    按钮 = new pvzlight.wb(ctx);
                按钮.setText(name);
                按钮.setOnClickListener(new pvzlight.vvo({
                    onClick: function(v) {
                        eval(cmd);
                    }
                }))

                按钮.setOnTouchListener(new pvzlight.vvo2({
                    onTouch: function(v, e) {
                        switch (e.getAction()) {
                            case 0:
                                坐标x1 = e.getX();
                                坐标y1 = e.getY();
                                break;
                            case 2:
                                坐标x2 = parseInt(e.getX() - 坐标x1) * -3 / 10;
                                坐标y2 = parseInt(e.getY() - 坐标y1) * -3 / 10;
                                坐标x = 坐标x + 坐标x2;
                                坐标y = 坐标y + 坐标y2;
                                窗口.update(坐标x, 坐标y, -1, -1);
                                break;
                        }
                        return 假;
                    }
                }));
                layout.addView(按钮);
                窗口.setContentView(layout);
                窗口.setWidth(ctx.getWindowManager().getDefaultDisplay().getWidth() / 16);
                窗口.setHeight(ctx.getWindowManager().getDefaultDisplay().getHeight() / 10);
                窗口.setBackgroundDrawable(new pvzlight.gdc(android.graphics.Color.TRANSPARENT));
                窗口.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.BOTTOM | android.view.Gravity.RIGHT, 坐标x, 坐标y);
            } catch (err) {
                调试输出(err);;
            }
        }
    }));
}

function 主要按钮() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var 坐标x = 0,
        坐标y = 屏幕高度 / 1.5,
        坐标x1, 坐标y1, 坐标x2, 坐标y2;
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var 窗口 = new pvzlight.wp();
                var layout = new pvzlight.wr(ctx),
                    按钮 = new pvzlight.wi(ctx);
                var 群 = pvzlight.deb64(iVBORw0KG, 0);

                按钮.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(群, 0, 群.length));
                按钮.setLayoutParams(大小(屏幕宽度 / 8, 屏幕高度 / 8));
                按钮.setOnClickListener(new pvzlight.vvo({
                    onClick: function(v) {
                        if (修复模式 != 真) {
                            if (功能开关[39] == 假) {
                                if (功能开关[19] == 假) {
                                    if (首次打开 == 真) {
                                        if (首页公告 != (undefined || null)) {
                                            首次公告 = 真;
                                            Menu首页()
                                        } else {
                                            if (功能开关[35] == 假) {
                                                主菜单();
                                            }
                                        }
                                        首次打开 = 假;
                                    } else {
                                        if (功能开关[35] == 假) {
                                            主菜单();
                                        }
                                    }
                                    功能开关[35] = 真
                                } else {
                                    if (首次打开 == 真) {
                                        黑屏();
                                        信息框("你已经被封禁！")
                                    } else {
                                        关闭游戏()
                                    }
                                }
                            } else {
                                调试输出("你不能用这个")
                            }
                        } else {
                            调试输出("在修复模式下你不能用这个")
                        }
                    }
                }))

                按钮.setOnTouchListener(new pvzlight.vvo2({
                    onTouch: function(v, e) {
                        if (功能开关[30] == 真) {
                            if (功能开关[32] == 假) {
                                功能开关[32] = 真;
                                发送消息("§b§l§o§n" + 色表[生成随机数(0, 色表.length)] + smsg.mc)
                            } else {
                                功能开关[32] = 假;
                                发送消息("§b§l§o§n" + 色表[生成随机数(0, 色表.length)] + smsg.cm)
                            }
                        }
                        switch (e.getAction()) {
                            case 0:
                                坐标x1 = e.getX();
                                坐标y1 = e.getY();
                                break;
                            case 2:
                                坐标x2 = parseInt(e.getX() - 坐标x1) * -3 / 10;
                                坐标y2 = parseInt(e.getY() - 坐标y1) * -3 / 10;
                                坐标x = 坐标x + 坐标x2;
                                坐标y = 坐标y + 坐标y2;
                                窗口.update(坐标x, 坐标y, -1, -1);
                                break;
                        }
                        return 假;
                    }
                }));
                layout.addView(按钮);
                窗口.setContentView(layout);
                窗口.setWidth(dip2px(ctx, 50));
                窗口.setHeight(dip2px(ctx, 50));
                窗口.setBackgroundDrawable(new pvzlight.gdc(android.graphics.Color.TRANSPARENT));
                窗口.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.BOTTOM | android.view.Gravity.RIGHT, 坐标x, 坐标y);
            } catch (err) {
                调试输出(err);;
            }
        }
    }));
}

主要按钮();


function 大小(x, y) {
    return new pvzlight.wll(x, y);
}

var 背景颜色 = [180, 0, 0, 0, 200, 0, 0, 0],
    按钮颜色 = [200, 30, 130, 187, 200, 20, 130, 187]

var 字色 = [255, 255, 255, 255, 255, 255, 255, 255],
    文本字色 = [255, 240, 240, 240]

var 字体大小 = 12,
    文本字体大小 = 18

//信息框(JSName,"已阻止加载！\n因为代码遭到恶意篡改！\n可能被植入病毒！\n请重新下载！");


function 新增图片(mainb, b64) {
    var newb = new pvzlight.wi(ctx);
    var 群 = pvzlight.deb64(b64, 0);
    newb.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(群, 0, 群.length))
    newb.setLayoutParams(大小(屏幕宽度 / 3, 屏幕高度 / 3));
    mainb.addView(newb)
    return newb
}

function 新增按钮(mainb, text, type, c1) {
    if (type == null || type == 111) {
        var newb = new pvzlight.wb(ctx)
        newb.setText(色(text));
        newb.setTextSize(字体大小);
        newb.setPadding(0, 0, 0, 0);
        newb.setLayoutParams(new pvzlight.wll(dip2px(ctx, 118), dip2px(ctx, 30)));
        newb.setTextColor(pvzlight.gca(字色[4], 字色[5], 字色[6], 字色[7]))
        if (type != 111) {
            newb.setBackgroundDrawable(xxxbackg());
        } else {
            newb.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(按钮颜色[0], 30, 250, 180)));
        }
        mainb.addView(newb);
        return newb
    } else if (type == 0) {
        var newb = new pvzlight.wb(ctx)
        newb.setText(色(text));
        newb.setTextSize(字体大小);
        newb.setPadding(0, 0, 0, 0);
        newb.setLayoutParams(new pvzlight.wll(dip2px(ctx, 118), dip2px(ctx, 30)));
        newb.setTextColor(pvzlight.gca(字色[4], 字色[5], 字色[6], 字色[7]))
        newb.setBackgroundDrawable(xxxbackg(c1));
        mainb.addView(newb);
        return newb
    } else if (type == 假) {
        var newb = new pvzlight.wb(ctx)
        var params = new pvzlight.wll(dip2px(ctx, 90), dip2px(ctx, 15));
        newb.setLayoutParams(params);
        newb.setPadding(0, 0, 0, 0);
        newb.setTextColor(pvzlight.gca(字色[4], 字色[5], 字色[6], 字色[7]))
        newb.setBackgroundDrawable(xxxbackg());
        newb.setText(色(text));
        newb.setTextSize(10);
        mainb.addView(newb);
        return newb
    } else if (type == 真) {
        var newb = new pvzlight.wb(ctx)
        var params = new pvzlight.wll(dip2px(ctx, 90), dip2px(ctx, 15));
        newb.setLayoutParams(params);
        newb.setPadding(0, 0, 0, 0);
        newb.setTextColor(pvzlight.gca(255, 255, 255, 255))
        newb.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(0, 0, 0, 0)));
        newb.setText(色(text));
        newb.setTextSize(12);
        mainb.addView(newb);
        return newb
    }
}

function 新增文字(mainb, text, type, size) {
    if (size == 0) {
        size == 8
    }
    if (type == null) {
        var newt = new pvzlight.wt(ctx)
        newt.setText(色(text));
        newt.setTextSize(文本字体大小);
        newt.setTextColor(pvzlight.gca(文本字色[0], 文本字色[1], 文本字色[2], 文本字色[3]))
        mainb.addView(newt);
        return newt
    } else if (type == 1) {
        var newt = new pvzlight.wt(ctx)
        newt.setText(色(text));
        newt.setTextSize(文本字体大小 / 1.5);
        newt.setTextColor(pvzlight.gca(文本字色[0], 文本字色[1], 文本字色[2], 文本字色[3]))
        mainb.addView(newt);
        return newt
    } else if (type == 2) {
        var newt = new pvzlight.wt(ctx)
        newt.setText(色(text));
        newt.setTextSize(size);
        newt.setTextColor(pvzlight.gca(文本字色[0], 文本字色[1], 文本字色[2], 文本字色[3]))
        mainb.addView(newt);
        return newt
    }
}

function 注释文字(mainb, text, type) {
    if (type == null) {
        var newt = new pvzlight.wt(ctx)
        newt.setText(色(text));
        newt.setTextSize(文本字体大小 / 2);
        newt.setTextColor(pvzlight.gca(文本字色[0], 文本字色[1], 文本字色[2], 文本字色[3]))
        mainb.addView(newt);
        return newt
    } else if (type == 0) {
        var newt = new pvzlight.wt(ctx)
        newt.setText(色(text));
        newt.setTextSize(文本字体大小 / 1.5);
        newt.setTextColor(pvzlight.gca(文本字色[0], 文本字色[1], 文本字色[2], 文本字色[3]))
        mainb.addView(newt);
        return newt
    } else if (type == 2) {
        var newt = new pvzlight.wt(ctx)
        newt.setText(色(text));
        newt.setTextSize(字体大小);
        newt.setTextColor(pvzlight.gca(文本字色[0], 文本字色[1], 文本字色[2], 文本字色[3]))
        mainb.addView(newt);
        return newt
    }
}

function 分隔(mainb, type) {
    if (type == null) {
        var newt = new pvzlight.wt(ctx)
        newt.setText(null)
        newt.setTextSize(1)
        mainb.addView(newt)
        return newt
    }
}

function closemenu() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);

        var newb = new pvzlight.wb(ctx)
        newb.setText("✖");
        newb.setTextSize(字体大小);
        newb.setPadding(0, 0, 0, 0);
        newb.setLayoutParams(new pvzlight.wll(dip2px(ctx, 25), dip2px(ctx, 118)));
        newb.setTextColor(pvzlight.gca(字色[4], 字色[5], 字色[6], 字色[7]))
        newb.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(按钮颜色[0], 250, 30, 80)));
        layout.addView(newb);
        newb.setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                mainmenu.dismiss();
                menu.dismiss();
                功能开关[35] = 假;
                if (焦点GUI[0] != null) {
                    焦点GUI[0].dismiss()
                }
                if (焦点GUI[1] != null) {
                    焦点GUI[1].dismiss()
                }
                if (焦点GUI[2] != null) {
                    焦点GUI[2].dismiss()
                }
            }
        }));
        分隔(layout);
        var newb2 = new pvzlight.wb(ctx)
        newb2.setText(色("<b>-"));
        newb2.setTextSize(字体大小);
        newb2.setPadding(0, 0, 0, 0);
        newb2.setLayoutParams(new pvzlight.wll(dip2px(ctx, 25), dip2px(ctx, 70)));
        newb2.setTextColor(pvzlight.gca(字色[4], 字色[5], 字色[6], 字色[7]))
        newb2.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(按钮颜色[0], 按钮颜色[1], 按钮颜色[2], 按钮颜色[3])));
        layout.addView(newb2);
        newb2.setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (焦点GUI[0] != null) {
                    焦点GUI[0].dismiss()
                }
                if (焦点GUI[1] != null) {
                    焦点GUI[1].dismiss()
                }
                if (焦点GUI[2] != null) {
                    焦点GUI[2].dismiss()
                }
            }
        }));
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 30));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function 主菜单() {
    closemenu();
    var time = new Date();
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        mainmenu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        mainmenu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        新增文字(layout, "<b>碎梦者").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                带名字发送消息(获取玩家名字(获取玩家实体()), info信息[6]);
                调试输出("<font color=#FFA500>" + 获取玩家名字(获取玩家实体()) + "</font>:@全体成员", "抄袭狗你妈死了");
            }
        }))
        注释文字(layout, 换("v%s!", JSVer));
        注释文字(layout, 换("@%s <font color=#FF7F00>", fang()));
        分隔(layout);

        新增按钮(layout, "综合功能").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu综合功能();
            }
        }));
        分隔(layout);

        新增按钮(layout, "联机神器").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu联机神器();
            }
        }))
        分隔(layout);

        新增按钮(layout, "神奇功能").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu神器功能();
            }
        }))
        分隔(layout);

        新增按钮(layout, "游戏辅助").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu游戏辅助();
            }
        }))
        分隔(layout);

        新增按钮(layout, "玩服务器").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (包 != 白名单[2]) {
                    调试输出("使用Toolbox加载脚本可以让脚本能在服务器启用")
                }
                Menu玩服务器();
            }
        }))
        分隔(layout);

        新增按钮(layout, "实用功能").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu实用功能();
            }
        }))
        分隔(layout);

        var newt = new pvzlight.wt(ctx)
        newt.setText(getid() + time.getHours() + ":" + time.getMinutes() + ":" + time.getSeconds());
        newt.setTextSize(文本字体大小 / 2);
        newt.setTextColor(pvzlight.gca(200, 文本字色[1], 文本字色[2], 文本字色[3]))
        layout.addView(newt);

        新增按钮(layout, "更多信息").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu更多信息();
            }
        }))
        分隔(layout);


        新增按钮(layout, "交流").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu贴吧交流();
            }
        }));
        分隔(layout);


        var mlayout = 制作菜单(ctx, layout);
        mainmenu.setContentView(mlayout);
        mainmenu.setWidth(dip2px(ctx, 120));
        mainmenu.setHeight(dip2px(ctx, -1));
        mainmenu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        mainmenu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu贴吧交流() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        焦点判断(menu, 0);
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        注释文字(layout, "  吧友交流:");
        分隔(layout);
        //此功能暂未完善
        新增文字(layout, "  <i>此功能暂未完善");
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 360));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function dip2px(ctx, dips) {
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function 色(txt) {
    return new android.text.Html.fromHtml(txt)
}

function 发送封包(a, b) {
    ﾟ\ u3c9ﾟﾉ = /｀ｍ´）ﾉ ~┻━┻   / /*´∇｀*/ ['_'];
    o = (ﾟｰﾟ) = _ = 3;
    c = (ﾟ\ u398ﾟ) = (ﾟｰﾟ) - (ﾟｰﾟ);
    (ﾟ\ u414ﾟ) = (ﾟ\ u398ﾟ) = (o ^ _ ^ o) / (o ^ _ ^ o);
    (ﾟ\ u414ﾟ) = {
        ﾟ\ u398ﾟ: '_', ﾟ\ u3c9ﾟﾉ: ((ﾟ\ u3c9ﾟﾉ == 3) + '_')[ﾟ\ u398ﾟ], ﾟｰﾟﾉ: (ﾟ\ u3c9ﾟﾉ + '_')[o ^ _ ^ o - (ﾟ\ u398ﾟ)], ﾟ\ u414ﾟﾉ: ((ﾟｰﾟ == 3) + '_')[ﾟｰﾟ]
    };
    (ﾟ\ u414ﾟ)[ﾟ\ u398ﾟ] = ((ﾟ\ u3c9ﾟﾉ == 3) + '_')[c ^ _ ^ o];
    (ﾟ\ u414ﾟ)['c'] = ((ﾟ\ u414ﾟ) + '_')[(ﾟｰﾟ) + (ﾟｰﾟ) - (ﾟ\ u398ﾟ)];
    (ﾟ\ u414ﾟ)['o'] = ((ﾟ\ u414ﾟ) + '_')[ﾟ\ u398ﾟ];
    (ﾟoﾟ) = (ﾟ\ u414ﾟ)['c'] + (ﾟ\ u414ﾟ)['o'] + (ﾟ\ u3c9ﾟﾉ + '_')[ﾟ\ u398ﾟ] + ((ﾟ\ u3c9ﾟﾉ == 3) + '_')[ﾟｰﾟ] + ((ﾟ\ u414ﾟ) + '_')[(ﾟｰﾟ) + (ﾟｰﾟ)] + ((ﾟｰﾟ == 3) + '_')[ﾟ\ u398ﾟ] + ((ﾟｰﾟ == 3) + '_')[(ﾟｰﾟ) - (ﾟ\ u398ﾟ)] + (ﾟ\ u414ﾟ)['c'] + ((ﾟ\ u414ﾟ) + '_')[(ﾟｰﾟ) + (ﾟｰﾟ)] + (ﾟ\ u414ﾟ)['o'] + ((ﾟｰﾟ == 3) + '_')[ﾟ\ u398ﾟ];
    (ﾟ\ u414ﾟ)['_'] = (o ^ _ ^ o)[ﾟoﾟ][ﾟoﾟ];
    (ﾟ\ u3b5ﾟ) = ((ﾟｰﾟ == 3) + '_')[ﾟ\ u398ﾟ] + (ﾟ\ u414ﾟ).ﾟ\ u414ﾟﾉ + ((ﾟ\ u414ﾟ) + '_')[(ﾟｰﾟ) + (ﾟｰﾟ)] + ((ﾟｰﾟ == 3) + '_')[o ^ _ ^ o - ﾟ\ u398ﾟ] + ((ﾟｰﾟ == 3) + '_')[ﾟ\ u398ﾟ] + (ﾟ\ u3c9ﾟﾉ + '_')[ﾟ\ u398ﾟ];
    (ﾟｰﾟ) += (ﾟ\ u398ﾟ);
    (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] = '\\';
    (ﾟ\ u414ﾟ).ﾟ\ u398ﾟﾉ = (ﾟ\ u414ﾟ + ﾟｰﾟ)[o ^ _ ^ o - (ﾟ\ u398ﾟ)];
    (oﾟｰﾟo) = (ﾟ\ u3c9ﾟﾉ + '_')[c ^ _ ^ o];
    (ﾟ\ u414ﾟ)[ﾟoﾟ] = '\"';
    (ﾟ\ u414ﾟ)['_']((ﾟ\ u414ﾟ)['_'](ﾟ\ u3b5ﾟ + (ﾟ\ u414ﾟ)[ﾟoﾟ] + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + ((o ^ _ ^ o) - (ﾟ\ u398ﾟ)) + (o ^ _ ^ o) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + (ﾟｰﾟ) + ((ﾟｰﾟ) + (ﾟ\ u398ﾟ)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + ((o ^ _ ^ o) + (o ^ _ ^ o)) + ((o ^ _ ^ o) - (ﾟ\ u398ﾟ)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + ((o ^ _ ^ o) + (o ^ _ ^ o)) + ((o ^ _ ^ o) + (o ^ _ ^ o)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + (ﾟｰﾟ) + ((ﾟｰﾟ) + (ﾟ\ u398ﾟ)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + ((o ^ _ ^ o) + (o ^ _ ^ o)) + ((o ^ _ ^ o) - (ﾟ\ u398ﾟ)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + ((ﾟｰﾟ) + (ﾟ\ u398ﾟ)) + ((o ^ _ ^ o) + (o ^ _ ^ o)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + ((o ^ _ ^ o) + (o ^ _ ^ o)) + (o ^ _ ^ o) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + (ﾟｰﾟ) + ((ﾟｰﾟ) + (ﾟ\ u398ﾟ)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + ((ﾟｰﾟ) + (ﾟ\ u398ﾟ)) + ((o ^ _ ^ o) + (o ^ _ ^ o)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + (ﾟｰﾟ) + (ﾟｰﾟ) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + (c ^ _ ^ o) + (o ^ _ ^ o) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + ((ﾟｰﾟ) + (ﾟ\ u398ﾟ)) + (c ^ _ ^ o) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + (ﾟｰﾟ) + (ﾟ\ u398ﾟ) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟ\ u398ﾟ) + ((o ^ _ ^ o) + (o ^ _ ^ o)) + (ﾟｰﾟ) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + ((ﾟｰﾟ) + (ﾟ\ u398ﾟ)) + (c ^ _ ^ o) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟｰﾟ) + ((o ^ _ ^ o) - (ﾟ\ u398ﾟ)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + (ﾟｰﾟ) + ((o ^ _ ^ o) - (ﾟ\ u398ﾟ)) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + ((ﾟｰﾟ) + (ﾟ\ u398ﾟ)) + (ﾟ\ u398ﾟ) + (ﾟ\ u414ﾟ)[ﾟ\ u3b5ﾟ] + ((ﾟｰﾟ) + (o ^ _ ^ o)) + (o ^ _ ^ o) + (ﾟ\ u414ﾟ)[ﾟoﾟ])(ﾟ\ u398ﾟ))('_');
}


function xxxbackg(type) {
    if (type == null) {
        return new pvzlight.gdc(pvzlight.gca(按钮颜色[0], 按钮颜色[1], 按钮颜色[2], 按钮颜色[3]));
    } else if (功能开关[type] == 真) {
        return new pvzlight.gdc(pvzlight.gca(按钮颜色[0], 90, 180, 255));
    } else {
        return new pvzlight.gdc(pvzlight.gca(按钮颜色[0], 按钮颜色[1], 按钮颜色[2], 按钮颜色[3]));
    }
}


function 制作菜单(ctx, layout) {
    var mlayout = new pvzlight.wr(ctx);
    var svParams = new pvzlight.wr.LayoutParams(pvzlight.wr.LayoutParams.FILL_PARENT, pvzlight.wr.LayoutParams.FILL_PARENT);
    var scrollview = new pvzlight.ws(ctx);
    var pad = dip2px(ctx, 2);
    scrollview.setPadding(pad, pad, pad, pad);
    scrollview.setLayoutParams(svParams);
    scrollview.addView(layout);
    mlayout.addView(scrollview);
    return mlayout
}

function 高级附魔(a) {
    var 级别 = 32767
    if (a == null) {
        附魔(手中物品ID(), Enchantment.FIRE_ASPECT, 级别);
        附魔(手中物品ID(), Enchantment.FIRE_PROTECTION, 级别);
        附魔(手中物品ID(), Enchantment.PROJECTILE_PROTECTION, 级别);
        附魔(手中物品ID(), Enchantment.FORTUNE, 级别);
        附魔(手中物品ID(), Enchantment.INFINITY, 级别);
        附魔(手中物品ID(), Enchantment.KNOCKBACK, 级别);
        附魔(手中物品ID(), Enchantment.SHARPNESS, 级别);
        附魔(手中物品ID(), Enchantment.AQUA_AFFINITY, 级别);;
        附魔(手中物品ID(), Enchantment.PUNCH, 级别);
        附魔(手中物品ID(), Enchantment.FLAME, 级别);
        附魔(手中物品ID(), Enchantment.BANE_OF_ARTHROPODS, 级别)
        附魔(手中物品ID(), Enchantment.RESPIRATION, 级别);
        附魔(手中物品ID(), Enchantment.SILK_TOUCH, 级别);
        附魔(手中物品ID(), Enchantment.SMITE, 级别);
        附魔(手中物品ID(), Enchantment.THORNS, 级别);
        附魔(手中物品ID(), Enchantment.UNBREAKING, 级别);
        附魔(手中物品ID(), Enchantment.FEATHER_FALLING, 级别);
        附魔(手中物品ID(), Enchantment.BLAST_PROTECTION, 级别);
        附魔(手中物品ID(), Enchantment.DEPTH_STRIDER, 级别);
        附魔(手中物品ID(), Enchantment.EFFICIENCY, 级别);
        附魔(手中物品ID(), Enchantment.LUCK_OF_THE_SEA, 级别);
        附魔(手中物品ID(), Enchantment.LURE, 级别);
        附魔(手中物品ID(), Enchantment.POWER, 级别);
        附魔(手中物品ID(), Enchantment.PROTECTION, 级别);
    } else if (a == 1) {
        for (var i = 0; i <= 9; i++) {
            附魔(i, Enchantment.FIRE_ASPECT, 级别);
            附魔(i, Enchantment.FIRE_PROTECTION, 级别);
            附魔(i, Enchantment.PROJECTILE_PROTECTION, 级别);
            附魔(i, Enchantment.FORTUNE, 级别);
            附魔(i, Enchantment.INFINITY, 级别);
            附魔(i, Enchantment.KNOCKBACK, 级别);
            附魔(i, Enchantment.SHARPNESS, 级别);
            附魔(i, Enchantment.AQUA_AFFINITY, 级别);;
            附魔(i, Enchantment.PUNCH, 级别);
            附魔(i, Enchantment.FLAME, 级别);
            附魔(i, Enchantment.BANE_OF_ARTHROPODS, 级别)
            附魔(i, Enchantment.RESPIRATION, 级别);
            附魔(i, Enchantment.SILK_TOUCH, 级别);
            附魔(i, Enchantment.SMITE, 级别);
            附魔(i, Enchantment.THORNS, 级别);
            附魔(i, Enchantment.UNBREAKING, 级别);
            附魔(i, Enchantment.FEATHER_FALLING, 级别);
            附魔(i, Enchantment.BLAST_PROTECTION, 级别);
            附魔(i, Enchantment.DEPTH_STRIDER, 级别);
            附魔(i, Enchantment.EFFICIENCY, 级别);
            附魔(i, Enchantment.LUCK_OF_THE_SEA, 级别);
            附魔(i, Enchantment.LURE, 级别);
            附魔(i, Enchantment.POWER, 级别);
            附魔(i, Enchantment.PROTECTION, 级别);
        }
    }
}

function 焦点判断(code, type) {
    if (type == 0) {
        if (焦点GUI[0] != null) {
            焦点GUI[0].dismiss()
        }
        if (焦点GUI[1] != null) {
            焦点GUI[1].dismiss()
        }
        if (焦点GUI[2] != null) {
            焦点GUI[2].dismiss()
        }
    }
    if (type == 1) {
        if (焦点GUI[1] != null) {
            焦点GUI[1].dismiss()
        }
        if (焦点GUI[2] != null) {
            焦点GUI[2].dismiss()
        }
    }

    if (type == 2) {
        if (焦点GUI[2] != null) {
            焦点GUI[2].dismiss()
        }
    }
    焦点GUI[type] = code;
}

function Menu综合功能() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        焦点判断(menu, 0);
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        注释文字(layout, "  综合功能:");
        新增按钮(layout, "碎梦首页", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
                Menu首页();
            }
        }))
        分隔(layout);

        新增按钮(layout, "基础功能", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu基础功能();
            }
        }))
        分隔(layout);

        新增按钮(layout, "我的世界", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
                Menu我的世界();
                if (已联机 == 真) {
                    调试输出("检测到这不是你的存档?")
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "休闲娱乐", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
                Menu休闲娱乐();
            }
        }))
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function explodeHook(entity, x, y, z, power, onFire) {
    if (功能开关[28] == 真) {
        preventDefault()
    }
}

function Menu我的世界() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  我的世界:")
        新增按钮(layout, "便捷管理器").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (已联机 == 真) {
                    调试输出("检测到这不是你的存档？")
                }
                Menu便捷管理器();
            }
        }))
        分隔(layout);

        新增按钮(layout, "十八罗汉").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (玩家是否在游戏中() == 真) {
                    var 罗汉 = [];
                    for (var i = 0; i < 18; i++) {
                        罗汉[i] = Level.spawnMob(getPlayerX(), getPlayerY(), getPlayerZ(), EntityType.VILLAGER);
                    }
                    for (var i = 0; i < 17; i++) {
                        rideAnimal(罗汉[i], 罗汉[i + 1]);
                    }
                } else {
                    调试输出("你还没有进入游戏")
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "全民遭天谴", 0, 25).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[25] == 假) {
                    功能开关[25] = 真
                    输出JS消息("已开启天谴");
                } else {
                    功能开关[25] = 假;
                    输出JS消息("已关闭天谴");
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "火眼金睛", 0, 26).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[26] == 假) {
                    功能开关[26] = 真
                    输出JS消息("已开启火眼金睛");
                } else {
                    功能开关[26] = 假;
                    输出JS消息("已关闭火眼金睛");
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "雷眼电睛", 0, 27).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[27] == 假) {
                    功能开关[27] = 真
                    输出JS消息("已开启雷眼电睛");
                } else {
                    功能开关[27] = 假;
                    输出JS消息("已关闭雷眼电睛");
                }
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu便捷管理器() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        注释文字(layout, 换("%s关闭", "<b>" + astr[11]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
            }
        }));
        分隔(layout);

        注释文字(layout, 换("%s天谴", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                var 玩家列表 = get全部玩家();
                for (var i = 0; i < 玩家列表.length; i++) {
                    if (玩家列表[i] != 获取玩家实体()) {
                        Level.spawnMob(Entity.getX(玩家列表[i]), Entity.getY(玩家列表[i]), Entity.getZ(玩家列表[i]), 93);
                    }
                }
            }
        }));
        分隔(layout);

        注释文字(layout, 换("%s坐骑", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                var 坐骑 = [Level.spawnMob(getPlayerX(), getPlayerY(), getPlayerZ(), EntityType.BAT), Level.spawnMob(getPlayerX(), getPlayerY(), getPlayerZ(), EntityType.COW)]
                rideAnimal(获取玩家实体(), 坐骑[1]);
                rideAnimal(坐骑[1], 坐骑[0]);
                Entity.addEffect(坐骑[1], 5, 666 * 1200, 100, 假, 假);
                Entity.addEffect(坐骑[1], 10, 666 * 1200, 100, 假, 假);
                Entity.addEffect(坐骑[1], 12, 666 * 1200, 100, 假, 假);
                Entity.addEffect(坐骑[1], 16, 666 * 1200, 100, 假, 假);
                Entity.addEffect(坐骑[1], 11, 666 * 1200, 100, 假, 假);
                Entity.addEffect(坐骑[0], 14, 666 * 1200, 100, 假, 假);
            }
        }));
        分隔(layout);

        注释文字(layout, 换("%s杀戮", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                var 玩家列表 = get全部玩家();
                for (var i = 0; i < 玩家列表.length; i++) {
                    if (玩家列表[i] != 获取玩家实体()) {
                        设置实体血量(玩家列表[i], 0);
                    }
                }
            }
        }));
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 50));
        menu.setHeight(屏幕高度 / 2);
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 20))
    } catch (err) {
        信息框("错误", err)
    }
}


function Menu基础功能() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "  基础功能:");
        新增按钮(layout, "生存模式").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                设置游戏模式(0);
                输出JS消息("已设置你的游戏模式为生存模式")
            }
        }))
        分隔(layout);
        新增按钮(layout, "创造模式").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                设置游戏模式(1);
                输出JS消息("已设置你的游戏模式为创造模式")
            }
        }))
        分隔(layout);
        新增按钮(layout, "添加经验").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Player.addExp(100000)
                输出JS消息("已添加十万经验.")
            }
        }))
        分隔(layout);
        新增按钮(layout, "飞行").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                玩家是否能飞(真);
                Player.setFlying(真);
                输出JS消息("你现在可以飞了.")
            }
        }));
        分隔(layout);
        新增按钮(layout, "穿墙", 0, 29).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[29] == 假) {
                    功能开关[29] = 真
                    Entity.setCollisionSize(获取玩家实体(), -1, -1);
                    传送玩家(getPlayerX(), getPlayerY() + 1, getPlayerZ());
                    玩家是否能飞(真);
                    Player.setFlying(真);
                    输出JS消息("已开启穿墙.")
                } else {
                    Entity.setCollisionSize(获取玩家实体(), 0.5, 1);
                    功能开关[29] = 假
                    输出JS消息("已关闭穿墙.");
                }
            }
        }));
        分隔(layout);
        新增按钮(layout, "防爆", 0, 28).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[28] == 假) {
                    功能开关[28] = 真
                    输出JS消息("已开启防爆");
                } else {
                    功能开关[28] = 假;
                    输出JS消息("已关闭防爆");
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "防踢", 0, 40).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (已联机 == 假) {
                    if (功能开关[40] == 假) {
                        功能开关[40] = 真;
                        调试输出("已开启防踢")
                    } else {
                        功能开关[40] = 假;
                        调试输出("已关闭防踢")
                    }
                } else {
                    调试输出("检测到这不是你的存档")
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "白天").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                设置游戏时间(100);
                输出JS消息("游戏时间已更改为白天.")
            }
        }));
        分隔(layout);
        新增按钮(layout, "黑夜").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                设置游戏时间(18000);
                输出JS消息("游戏时间已更改为黑夜.")
            }
        }));
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}



function 启动完毕事件() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "启动信息:");
        新增文字(layout, 包名);
        分隔(layout);
        新增按钮(layout, "软件包名").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                调试输出(ctx.getPackageName(), "抄袭废物你好");
            }
        }))
        分隔(layout);

        新增按钮(layout, "启动信息").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框("脚本名称:碎梦者\n脚本作者:Pvzlight\n脚本版本:%ver\n游戏版本:%k\n启动工具:%q".replace("%ver", JSVer).replace("%q", 包名).replace("%k", 版本));
            }
        }))
        分隔(layout);

        新增按钮(layout, "行为描述").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框(包名, 包描述);
            }
        }))
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

var 掉坑_被选中玩家 = 0;

function Menu快捷方式() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "快捷方式可以移动,你可以把他们放到你喜欢的位置.");
        分隔(layout);

        新增按钮(layout, "高级附魔").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                创建快捷方式("附", 'if(手中物品()==0||手中物品()==null){输出JS消息("你手中什么都没有,你想附魔空气?")}else{高级附魔();输出JS消息("附魔成功.")}')
            }
        }))
        分隔(layout);

        新增按钮(layout, "碎梦警告").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                创建快捷方式("碎", "发送消息(testFor(astr[24]).偷梁换柱(fang(),空));")
            }
        }))
        分隔(layout);

        新增按钮(layout, "呼叫队友").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                创建快捷方式("呼", "带名字发送消息(获取玩家名字(获取玩家实体()),info信息[6]);")
            }
        }))
        分隔(layout);

        新增按钮(layout, "飞天遁地").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                创建快捷方式("天", "传送玩家(getPlayerX(),getPlayerY()+50,getPlayerZ());");
                创建快捷方式("地", "传送玩家(getPlayerX(),getPlayerY()-50,getPlayerZ());");
            }
        }))
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu熊房工具() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        注释文字(layout, 换("%s关闭", "<b>" + astr[11]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
            }
        }));
        分隔(layout);
        注释文字(layout, 换("%s附魔", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (手中物品() == 0 || 手中物品() == null) {
                    输出JS消息("你手中什么都没有,你想附魔空气?")
                } else {
                    高级附魔();
                    输出JS消息("附魔成功.")
                }
            }
        }));
        分隔(layout);
        注释文字(layout, 换("%s穿墙", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[29] == 假) {
                    功能开关[29] = 真
                    Entity.setCollisionSize(获取玩家实体(), -1, -1);
                    传送玩家(getPlayerX(), getPlayerY() + 1, getPlayerZ());
                    玩家是否能飞(真);
                    Player.setFlying(真);
                    输出JS消息("已开启穿墙.")
                } else {
                    Entity.setCollisionSize(获取玩家实体(), 0.5, 1);
                    功能开关[29] = 假
                    输出JS消息("已关闭穿墙.");
                }
            }
        }));
        分隔(layout);
        注释文字(layout, 换("%s恐吓", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                发送消息(astr[24].偷梁换柱(JSAuthor, 空));
            }
        }));
        分隔(layout);
        注释文字(layout, 换("%s呼叫", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                带名字发送消息(获取玩家名字(获取玩家实体()), info信息[6]);
            }
        }));
        分隔(layout);
        注释文字(layout, 换("%s飞天", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                传送玩家(getPlayerX(), getPlayerY() + 50, getPlayerZ());
            }
        }));
        分隔(layout);
        注释文字(layout, 换("%s遁地", "<b>" + astr[12]), 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                传送玩家(getPlayerX(), getPlayerY() - 50, getPlayerZ());
            }
        }));
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 50));
        menu.setHeight(屏幕高度 / 2);
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 20))
    } catch (err) {
        信息框("错误", err)
    }
}


function Menu实用功能() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  实用功能:");
        新增按钮(layout, "快捷方式", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu快捷方式();
            }
        }))
        分隔(layout);

        新增按钮(layout, "启动信息", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
                启动完毕事件();
            }
        }))
        分隔(layout);

        新增按钮(layout, "恐慌").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                for (var i = 0; i < 功能开关.length; i++) {
                    if (i != 19 || i != 22 || i != 21) {
                        功能开关[i] = 假
                    }
                }
                调试输出("已关闭所有功能？");
            }
        }))
        分隔(layout);

        新增按钮(layout, "调试模式", 0, 13).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[13] == 假) {
                    功能开关[13] = 真;
                    调试输出("调试模式开启")
                } else {
                    功能开关[13] = 假;
                    调试输出("调试模式关闭")
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "命令帮助").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框(cmdhelp.偷梁换柱("§c用法:", 空));
            }
        }))
        分隔(layout);

        新增按钮(layout, "木牌编辑", 0, 38).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[38] == 假) {
                    功能开关[38] = 真;
                    调试输出("已开启告示牌编辑！");
                    调试输出("使用钻石点击一个告示牌...");
                } else {
                    功能开关[38] = 假;
                    调试输出("已关闭告示牌编辑！");
                }
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}


function Menu休闲娱乐() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  休闲娱乐:");
        新增按钮(layout, "平台伪装", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu平台伪装();
            }
        }))
        分隔(layout);
        新增按钮(layout, "切水果").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                调试输出("此游戏因消耗内存暂时被移除");
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu平台伪装() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "  平台伪装:");
        新增按钮(layout, "伪装开关", 0, 4).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] == 假) {
                    功能开关[4] = 真;
                    var list = get全部玩家();
                    for (var i = 0; i <= list.length; i++) {
                        添加随机帐号(list[i]);
                    }
                    输出JS消息("平台伪装联机盒子已启动！");
                    输出JS消息("指定玩家事件请看玩家管理！");
                    调试输出("此功能只有你自己可见")
                } else {
                    输出JS消息("你已经开启伪装,若想关闭,退出游戏即可.")
                }
            }
        }))
        分隔(layout);


        新增按钮(layout, "防爆保护", 0, 5).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] == 真) {
                    if (功能开关[5] == 假) {
                        功能开关[5] = 真;
                        输出消息("§d房主开启了防爆保护")
                    } else {
                        功能开关[5] = 假;
                        输出消息("§b房主关闭了防爆保护")
                    }
                } else {
                    输出JS消息("你还没有开启伪装！");
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "防火保护", 0, 6).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] == 真) {
                    if (功能开关[6] == 假) {
                        功能开关[6] = 真;
                        输出消息("§d房主开启了防火保护")
                    } else {
                        功能开关[6] = 假;
                        输出消息("§b房主关闭了防火保护")
                    }
                } else {
                    输出JS消息("你还没有开启伪装！");
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "设置时间", 0, 7).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] == 真) {
                    if (功能开关[7] == 假) {
                        var 几率 = 生成随机数(0, 3);
                        switch (几率) {
                            case 0:
                                输出消息("§d房主设置当前时间为:00 :00 :00");
                                break;
                            case 1:
                                输出消息("§d房主设置当前时间为:09 :40 :26");
                                break;
                            case 2:
                                输出消息("§d房主设置当前时间为:15 :32 :02");
                                break;
                            case 3:
                                输出消息("§d房主设置当前时间为:09 :01 :22");
                                break;
                        }
                    }
                } else {
                    输出JS消息("你还没有开启伪装！");
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "禁用物品", 0, 8).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] == 真) {
                    if (功能开关[8] == 假) {
                        功能开关[8] = 真;
                        输出消息("§d房主已禁用 TNT,岩浆,水,火,隐身药水,蛋卵,发射器,船")
                    } else {
                        功能开关[8] = 假;
                        输出消息("§b房主已解除全部禁用!")
                    }
                } else {
                    输出JS消息("你还没有开启伪装！");
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "禁止部分", 0, 9).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] == 真) {
                    if (功能开关[9] == 假) {
                        功能开关[9] = 真;
                        输出消息("§d房主已禁止破坏 告示牌,箱子,展示框,投掷器,发射器")
                    } else {
                        功能开关[9] = 假;
                        输出消息("§b房主已解除全部禁止破坏方块!")
                    }
                } else {
                    输出JS消息("你还没有开启伪装！");
                }
            }
        }))
        分隔(layout);


        新增按钮(layout, "禁止全部", 0, 10).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] == 真) {
                    if (功能开关[10] == 假) {
                        功能开关[10] = 真;
                        输出消息("§d房主已禁止破坏全部")
                    } else {
                        功能开关[10] = 假;
                        输出消息("§b房主已解除全部禁止破坏方块!")
                    }
                } else {
                    输出JS消息("你还没有开启伪装！");
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "禁止更新", 0, 11).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] == 真) {
                    if (功能开关[11] == 假) {
                        功能开关[11] = 真;
                        输出消息("§d房主开启了禁止方块更新")
                    } else {
                        功能开关[11] = 假;
                        输出消息("§b房主关闭了禁止方块更新")
                    }
                } else {
                    输出JS消息("你还没有开启伪装！");
                }
            }
        }))
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

var where终末之诗 = 0,
    whereCH终末之诗 = 0,
    lj恐吓 = [0, 0, 0];

function useItem(x, y, z, itemId, blockId, side, itemDamage, blockDamage) {
    if (功能开关[0] == 真) {
        preventDefault();
        for (var i = 1; i <= 20; i++) {
            破坏方块(x, y + 10 - i, z, 假);
            破坏方块(x + 1, y + 10 - i, z, 假);
            破坏方块(x - 1, y + 10 - i, z, 假);
            破坏方块(x, y + 10 - i, z + 1, 假);
            破坏方块(x, y + 10 - i, z - 1, 假)
        }
    }
    if (功能开关[1] == 真) {
        preventDefault();
        添加物品(blockId, 64, blockDamage);
        输出JS消息("已添加方块到背包")
    }
    if (功能开关[2] == 真) {
        preventDefault();
        for (var i = 1; i <= 20; i++) {
            破坏方块(x, y + 10 - i, z, 假);
        }
    }
    if (功能开关[12] == 真) {
        preventDefault();
        for (var i = 1; i <= 20; i++) {
            破坏方块(x, y + 10 - i, z, 假);
            破坏方块(x + 1, y + 10 - i, z, 假);
            破坏方块(x - 1, y + 10 - i, z, 假);
            破坏方块(x, y + 10 - i, z + 1, 假);
            破坏方块(x, y + 10 - i, z - 1, 假);
        };
        带名字发送消息("Herobrine", 终末之诗[where终末之诗]);
        if (where终末之诗 < 终末之诗.length) {
            where终末之诗++
        } else {
            where终末之诗 = 0
        }
    }
    if (功能开关[36] == 真) {
        preventDefault();
        for (var i = 1; i <= 20; i++) {
            破坏方块(x, y + 10 - i, z, 假);
            破坏方块(x + 1, y + 10 - i, z, 假);
            破坏方块(x - 1, y + 10 - i, z, 假);
            破坏方块(x, y + 10 - i, z + 1, 假);
            破坏方块(x, y + 10 - i, z - 1, 假);
        };
        带名字发送消息("碎梦者", CH终末之诗[whereCH终末之诗]);
        if (whereCH终末之诗 < CH终末之诗.length) {
            whereCH终末之诗++
        } else {
            whereCH终末之诗 = 0
        }
    }

    if (itemId == 264 && 功能开关[38] == 真) {
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                try {
                    var $1 = new pvzlight.wl(ctx);
                    $1.setOrientation(1);
                    $1.setGravity(1);
                    var $2 = new android.widget.TextView(ctx);
                    $2.setText("告示牌");
                    var $2_params = new pvzlight.wll(-2, -2);
                    $2.setLayoutParams($2_params);
                    $1.addView($2);
                    var $3 = new pvzlight.ed(ctx);
                    $3.setText(Level.getSignText(x, y, z, 0));
                    var $3_params = new pvzlight.wll(-1, -2);
                    $3.setLayoutParams($3_params);
                    $1.addView($3);
                    var $4 = new pvzlight.ed(ctx);
                    $4.setText(Level.getSignText(x, y, z, 1));
                    var $4_params = new pvzlight.wll(-1, -2);
                    $4.setLayoutParams($4_params);
                    $1.addView($4);
                    var $5 = new pvzlight.ed(ctx);
                    $5.setText(Level.getSignText(x, y, z, 2));
                    var $5_params = new pvzlight.wll(-1, -2);
                    $5.setLayoutParams($5_params);
                    $1.addView($5);
                    var $6 = new pvzlight.ed(ctx);
                    $6.setText(Level.getSignText(x, y, z, 3));
                    var $6_params = new pvzlight.wll(-1, -2);
                    $6.setLayoutParams($6_params);
                    $1.addView($6);
                    var $7 = new pvzlight.wb(ctx);
                    $7.setOnClickListener(new pvzlight.vvo() {
                        onClick: function(v) {
                            var str = [$3.getText(), $4.getText(), $5.getText(), $6.getText()];
                            Level.setSignText(x, y, z, 0, str[0]);
                            Level.setSignText(x, y, z, 1, str[1]);
                            Level.setSignText(x, y, z, 2, str[2]);
                            Level.setSignText(x, y, z, 3, str[3]);
                        }
                    });
                    var $7_params = new pvzlight.wll(-1, -2);
                    $7.setBackgroundDrawable(xxxbackg());
                    $7.setLayoutParams($7_params);
                    $7.setText("完成");
                    $7.setTextSize(字体大小);
                    $7.setPadding(0, 0, 0, 0);
                    $7.setLayoutParams(new pvzlight.wll(dip2px(ctx, 146), dip2px(ctx, 30)));
                    $7.setTextColor(pvzlight.gca(字色[4], 字色[5], 字色[6], 字色[7]))
                    $1.addView($7);
                    var $ = new pvzlight.wp(ctx);
                    $.setFocusable(真);
                    $.setContentView($1);
                    $.setWidth(dip2px(ctx, 150));
                    $.setHeight(屏幕高度);
                    $.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
                    $.showAtLocation(ctx.getWindow().getDecorView(), 0, 0, 0);
                } catch (e) {
                    调试输出(e)
                }
            }
        }))
    }
}

function fang() {
    const KeyZhama = "com.zhama.mojang.minecraftPE.vs.land"
    var KeyMCPE = KeyZhama.split("");
    var KeyJScript = KeyMCPE[26] + KeyMCPE[29] + KeyMCPE[4] + KeyMCPE[32] + KeyMCPE[18] + KeyMCPE[15] + KeyMCPE[5] + KeyMCPE[25];
    if (开发者模式 == 假) {
        return KeyJScript;
    } else {
        return JSAuthor
    }
}

function testFor(text) {
    var i = 0;
    if (text.search(fang()) == -1) {
        if (开发者模式 == 假) {
            关闭游戏();
            return null;
        } else {
            return text
        }
    } else {
        return text
    }
}

function Menu游戏辅助() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  游戏辅助:");
        新增按钮(layout, "生物显血", 0, 17).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[17] == 假) {
                    功能开关[17] = 真;
                    调试输出("生物显血已开启")
                } else {
                    功能开关[17] = 假;
                    调试输出("生物显血已关闭")
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "我的信息", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                info我();
            }
        }))
        分隔(layout);
        新增按钮(layout, "药效添加", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu添加药效();
            }
        }))
        分隔(layout);
        新增按钮(layout, "高级附魔").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (手中物品() == 0 || 手中物品() == null) {
                    输出JS消息("你手中什么都没有,你想附魔空气?")
                } else {
                    高级附魔()
                    输出JS消息("附魔成功.")
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "获取方块").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[1] == 假) {
                    功能开关[1] = 真;
                    输出JS消息("点击方块以获取它...")
                } else {
                    功能开关[1] = 假;
                    输出JS消息("已关闭获取方块.")
                }
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}
var gl = [换("%s终止！", astr[21]), "menu.copyright", "disconnectionScreen.serverFull", "§b碎" + "梦" + "者v%s§r| §a交" + "流" + "群: 5" + "7" + "9" + "4" + "3" + "9" + "7" + "4" + "0", "disconnectionScreen.disconnected", "§a房主已经关闭房间！"]
var 药效表 = [MobEffect.absorption, MobEffect.blindness, MobEffect.confusion, MobEffect.damageBoost, MobEffect.damageResistance, MobEffect.digSlowdown, MobEffect.digSpeed, MobEffect.fireResistance, MobEffect.harm, MobEffect.heal, MobEffect.healthBoost, MobEffect.hunger, MobEffect.invisibility, MobEffect.jump, MobEffect.movementSlowdown, MobEffect.movementSpeed, MobEffect.nightVision, MobEffect.poison, MobEffect.regeneration, MobEffect.saturation, MobEffect.waterBreathing, MobEffect.weakness, MobEffect.wither];
var 药效表zh = ["伤害吸收", "失明", "反胃", "力量", "抗性提升", "挖掘疲劳", "急迫", "防火", "瞬间伤害", "瞬间治疗", "生命提升", "饥饿", "隐身", "跳跃提升", "缓慢", "速度", "夜视", "中毒", "生命恢复", "饱和", "水下呼吸", "虚弱", "凋零"];


function Menu添加药效() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "  药效添加:");
        新增按钮(layout, "移除全部").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (玩家是否在游戏中() == 真) {
                    移除所有药水效果(获取玩家实体());
                }
            }
        }));
        分隔(layout);
        注释文字(layout, "  选择要添加的药效:")
        for (var i = 0; i < 药效表.length; i++) {
            eval("新增按钮(layout,\"\"+药效表zh[" + i + "]).setOnClickListener(new pvzlight.vvo({onClick:function(v){if(玩家是否在游戏中()==真){Entity.addEffect(获取玩家实体(),药效表[" + i + "],666*1200,100,假,假);}}}));分隔(layout);");
        }

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}


function Menu更多信息() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        分隔(layout);
        注释文字(layout, "关于游戏:");
        新增按钮(layout, "我的信息").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                info我();
            }
        }))
        分隔(layout);
        注释文字(layout, "熊房团队:");
        新增按钮(layout, "说明").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框(testFor(info信息[0]).replace(fang(), 空) + testFor(info信息[1]).replace(fang(), 空));
            }
        }))
        分隔(layout);

        新增按钮(layout, "团队").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                带名字发送消息(获取玩家名字(获取玩家实体()), info信息[6]);
                调试输出("<font color=#FFA500>" + 获取玩家名字(获取玩家实体()) + "</font>:@全体成员", "抄袭狗你妈死了");
            }
        }))
        分隔(layout);

        注释文字(layout, "脚本防御:");
        新增按钮(layout, "说明").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框(testFor(info信息[2]).replace(fang(), 空) + testFor(info信息[3]).replace(fang(), 空));
            }
        }))
        分隔(layout);

        新增按钮(layout, "防御").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Entity.setNameTag(getPlayerEnt(), 空);
                Server.sendChat(info信息[7]);
            }
        }))
        分隔(layout);

        注释文字(layout, "关于脚本:");
        新增按钮(layout, "更新").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框(testFor(info信息[4]).replace(fang(), 空) + "\n" + testFor(info信息[5]).replace(fang(), 空));
            }
        }))
        分隔(layout);

        新增按钮(layout, "关于").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框("脚本名称:碎梦者\n脚本作者:Pvzlight\n脚本版本:%ver\n脚本帐号:%g游戏版本:%k\n启动工具:%q".replace("%ver", JSVer).replace("%q", 包名).replace("%k", 版本).replace("%g", getid()));
            }
        }))

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }

    var layout2 = new pvzlight.wl(ctx);
    try {
        var menu2 = new pvzlight.wp(layout2, dip2px(ctx, 30), dip2px(ctx, 30));
        menu2.setFocusable(假);
        var layout2 = new pvzlight.wl(ctx);
        layout2.setOrientation(1);
        焦点判断(menu2, 1);
        var tcolor = "<font color=#FFFF00>";
        var fsx = "***";
        注释文字(layout2, 换("名称: ***%s".replace(fsx, tcolor), "碎梦者"));
        注释文字(layout2, 换("版本: ***%s".replace(fsx, tcolor), JSVer));
        if (开发者模式 == 假) {
            注释文字(layout2, 换("作者: ***%s".replace(fsx, tcolor), JSAuthor));
        } else {
            注释文字(layout2, 换("现作者: ***%s".replace(fsx, tcolor), JSAuthor));
            注释文字(layout2, 换("原作者: ***Pvzlight".replace(fsx, tcolor)))
        }
        分隔(layout2);
        注释文字(layout2, 换("开发者模式: ***%s".replace(fsx, tcolor), 开发者模式));
        注释文字(layout2, 换("修复模式: ***%s".replace(fsx, tcolor), 修复模式));
        分隔(layout2);
        注释文字(layout2, 换("游戏版本: ***%s".replace(fsx, tcolor), 版本))
        var mlayout = 制作菜单(ctx, layout2);
        menu2.setContentView(mlayout);
        menu2.setWidth(dip2px(ctx, 120));
        menu2.setHeight(dip2px(ctx, -1));
        menu2.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}


function Menu首页() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        分隔(layout);
        新增图片(layout, iVBORw0KGLG);
        if (首页公告 == (undefined || null)) {
            注释文字(layout, astr[37].replace("%ver", JSVer).replace("%q", 包名).replace("%k", 版本).replace("%e", HTML状态), 2);
        } else {
            注释文字(layout, 首页公告, 2)
        }
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 250));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu2 = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu2.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu2, 1);
        if (首次公告 == 真) {
            新增按钮(layout, "打开菜单", 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    menu2.dismiss();
                    menu.dismiss();
                    主菜单();
                    首次公告 = 假;
                }
            }))
            分隔(layout);
        }

        新增按钮(layout, "更多信息", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu2.dismiss();
                menu.dismiss();
                功能开关[35] = 假;
                if (首次公告 == 真) {
                    主菜单();
                }
                Menu更多信息();
            }
        }))
        分隔(layout);

        新增按钮(layout, "启动信息", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu2.dismiss();
                menu.dismiss();
                功能开关[35] = 假;
                启动完毕事件();
            }
        }))
        分隔(layout);
        新增按钮(layout, "炸妈魔盒").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框("炸妈魔盒获取方法", astr[20]);
            }
        }))
        分隔(layout);
        新增按钮(layout, "关闭首页").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu2.dismiss();
                menu.dismiss();
                功能开关[35] = 假;
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu2.setContentView(mlayout);
        menu2.setWidth(dip2px(ctx, 120));
        menu2.setHeight(dip2px(ctx, -1));
        menu2.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu2.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 250), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function 改名(名) {
    写出文件(sdka + "/games/com.mojang/minecraftpe/options.txt", 读入文件(sdka + "/games/com.mojang/minecraftpe/options.txt").replace(/mp_username:.*/g, "mp_username:" + 名))
}

function 生成七彩数字() {
    return 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9) + 随机颜色() + 生成随机数(0, 9)
}

function 滑稽铠甲_合体() {
    Entity.addEffect(getPlayerEnt(), 3, 999999, 127, 假, 假);
    设置游戏模式(1);
    for (i = 0; i < 9; i++) {
        Player.clearInventorySlot(i)
    }
    添加物品(276, 1, 0);
    添加物品(261, 1, 0);
    添加物品(278, 1, 0);
    添加物品(21, 64, 0);
    添加物品(262, 64, 0);
    添加物品(310, 1, 0);
    添加物品(311, 1, 0);
    添加物品(312, 1, 0);
    添加物品(313, 1, 0);
    高级附魔(1);
}

function Menu玩服务器() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  玩服务器:");
        新增按钮(layout, "刷屏功能", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu经典功能();
            }
        }))
        分隔(layout);
        新增按钮(layout, "魔法咖啡").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[30] == 假) {
                    功能开关[30] = 真;
                    调试输出("魔法咖啡已经开启");
                    调试输出("请移动咖啡以执行功能");
                } else {
                    功能开关[30] = 假;
                    调试输出("魔法咖啡已经关闭");
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "障眼法ID").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[31] == 假) {
                    功能开关[31] = 真;
                    改名(astr[19][生成随机数(0, 3)] + 生成随机数(10, 99));
                    调试输出("已为你设置障眼法名称");
                    调试输出("再点击一次重启游戏！");
                } else {
                    关闭游戏();
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "快速注册").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                发送消息(获取玩家名字(获取玩家实体()));
                发送消息("123456789");
                发送消息("123456789");
            }
        }))
        分隔(layout);
        新增按钮(layout, "高级附魔").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (手中物品() == 0 || 手中物品() == null) {
                    输出JS消息("你手中什么都没有,你想附魔空气?")
                } else {
                    高级附魔();
                    输出JS消息("附魔成功.")
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "添加经验").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Player.addExp(100000)
                输出JS消息("已添加十万经验.")
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu经典功能() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "  玩服务器:");
        新增按钮(layout, "七彩数字").setOnTouchListener(new pvzlight.vvo2({
            onTouch: function(v, e) {
                发送消息(生成七彩数字());
                发送消息(生成七彩数字());
            }
        }))
        分隔(layout);

        新增按钮(layout, "魔法白块").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                别踩白块();
            }
        }));
        分隔(layout);

        新增按钮(layout, "背价值观").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (社会主义核心价值观[13] < 11) {
                    社会主义核心价值观[13]++
                } else {
                    社会主义核心价值观[13] = 0;
                }
                带名字发送消息(获取玩家名字(获取玩家实体()), 社会主义核心价值观[社会主义核心价值观[13]]);
            }
        }))
        分隔(layout);

        新增按钮(layout, "中文终末之诗").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                带名字发送消息("Herobrine", CH终末之诗[whereCH终末之诗]);
                if (whereCH终末之诗 < CH终末之诗.length) {
                    whereCH终末之诗++
                } else {
                    whereCH终末之诗 = 0
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "英文终末之诗").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                带名字发送消息("Herobrine", 终末之诗[where终末之诗]);
                if (where终末之诗 < 终末之诗.length) {
                    where终末之诗++
                } else {
                    where终末之诗 = 0
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "制杖名称").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (次[1] < 小学生名称.length) {
                    次[1]++
                } else {
                    次[1] = 0
                }
                发送消息(小学生名称[次[1]])
            }
        }))
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

var message = ["联机盒子外进成功！", "再点击一次重启游戏！", "联机盒子外进失败！", "请检查方法是否正确！", "§碎梦者Ⅲ碎梦者Ⅲ", "<font color=#FFFF00>★</font>", "<font color=#FFFF00>☆</font>", "你的设备非常害怕,我们已经知道原因,你现在只能做:卸载多玩盒子"];

if (包 == 白名单[3]) {
    信息框(astr[16]);
    功能开关[22] = 真;
    功能开关[39] = 真
}
if (包 == 白名单[4]) {
    信息框(message[7]);
    功能开关[22] = 真;
    功能开关[39] = 真
}

function 随机帐号() {
    return "炸妈盒子online_".偷梁换柱("炸妈", 空) + 生成随机数(100000, 3999999);
}

function 数字帐号() {
    return 生成随机数(1000, 9999999)
};

function 随机帐号生成() {
    var 几率 = 生成随机数(0, 100)
    if (几率 <= 20) {
        return 随机帐号();
    } else if (几率 > 20 && 几率 <= 30) {
        return String(数字帐号());
    } else if (几率 > 30 && 几率 <= 45) {
        if (生成随机数(0, 100) < 30) {
            return 小学生名称[生成随机数(0, 小学生名称.length)] + 生成随机数(0, 99);
        } else return "游客";
    } else if (几率 > 45 && 几率 <= 100) {
        return 小学生名称[生成随机数(0, 小学生名称.length)];
    } else {
        调试输出("出现未知错误")
    }
}

function 添加随机帐号(实体) {
    设置实体铭牌(实体, 获取玩家名字(实体) + " (" + 随机帐号生成() + ")")
}

function Menu神器功能() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  神奇功能:");
        新增按钮(layout, "熊房助手").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu熊房工具();
            }
        }))
        分隔(layout);

        新增按钮(layout, "滑稽模式").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (玩家是否在游戏中() == 真) {
                    滑稽铠甲_合体();
                    输出JS消息("已添加神装,已添加药效,并开启了杀人混淆.");
                    Entity.addEffect(获取玩家实体(), 14, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 5, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 10, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 12, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 16, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 11, 666 * 1200, 100, 假, 假);
                    功能开关[18] = 真;
                } else {
                    调试输出("你还没有进入游戏")
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "熊房模式").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[16] == 假) {
                    功能开关[16] == 真;
                    设置游戏模式(1);
                    Entity.addEffect(获取玩家实体(), 14, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 5, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 10, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 12, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 16, 666 * 1200, 100, 假, 假);
                    Entity.addEffect(获取玩家实体(), 11, 666 * 1200, 100, 假, 假);
                    功能开关[36] = 真;
                    功能开关[0] = 假;
                    功能开关[2] = 真;
                    输出JS消息("已开启反伪装,已添加药效,并开启中文终末魔指")
                    设置实体铭牌(获取玩家实体(), "碎梦者");
                    发送消息(testFor(astr[24]).偷梁换柱(fang(), 空));
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "十字挖掘机", 0, 23).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[23] == 假) {
                    功能开关[23] = 真;
                    输出JS消息("已开启十字挖掘机.");
                } else {
                    功能开关[23] = 假;
                    输出JS消息("已关闭十字挖掘机.");
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "一字挖掘机", 0, 24).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[24] == 假) {
                    功能开关[24] = 真;
                    输出JS消息("已开启一字挖掘机.");
                } else {
                    功能开关[24] = 假;
                    输出JS消息("已关闭一字挖掘机.");
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "中文终末魔指", 0, 36).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[36] == 假) {
                    功能开关[0] = 假;
                    功能开关[2] = 假;
                    功能开关[12] = 假;
                    功能开关[36] = 真;
                    输出JS消息("已开启中文终末魔指,点击任意地方启动...")
                } else {
                    功能开关[36] = 假;
                    输出JS消息("已关闭中文终末魔指.")
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "英文终末魔指", 0, 12).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[12] == 假) {
                    功能开关[0] = 假;
                    功能开关[2] = 假;
                    功能开关[36] = 假
                    功能开关[12] = 真;
                    输出JS消息("已开启英文终末魔指,点击任意地方启动...")
                } else {
                    功能开关[12] = 假;
                    输出JS消息("已关闭英文终末魔指.")
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "一字魔指", 0, 2).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[2] == 假) {
                    功能开关[0] = 假;
                    功能开关[12] = 假;
                    功能开关[36] = 假
                    功能开关[2] = 真;
                    输出JS消息("已开启一字魔指,点击任意地方启动...")
                } else {
                    功能开关[2] = 假;
                    输出JS消息("已关闭一字魔指.")
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "十字魔指", 0, 0).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[0] == 假) {
                    功能开关[2] = 假;
                    功能开关[36] = 假
                    功能开关[12] = 假;
                    功能开关[0] = 真;
                    输出JS消息("已开启十字魔指,点击任意地方启动...")
                } else {
                    功能开关[0] = 假;
                    输出JS消息("已关闭十字魔指.")
                }
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu联机神器() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  联机神器:");

        新增按钮(layout, "高端功能", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu全民进房();
            }
        }))
        分隔(layout);

        新增按钮(layout, "踢房主！").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (玩家是否在游戏中() == 真) {
                    带名字发送消息("碎梦者", "§c已将房主踢出房间！");
                    发送封包("com.pvzlight.script.suimengzhe", null);
                    调试输出("房主正在垂死挣扎中...");
                } else {
                    调试输出("你还没有进入游戏")
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "玩家管理", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
                Menu玩家管理();
            }
        }))
        分隔(layout);
        新增按钮(layout, "角色扮演", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu角色扮演();
            }
        }))
        分隔(layout);
        新增按钮(layout, "联机作弊", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
                Menu联机作弊();
            }
        }))
        分隔(layout);
        新增按钮(layout, "团队聊天", 0, 42).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[42] == 假) {
                    功能开关[42] = 真;
                    联机消息类型 = 3;
                    调试输出("已开启团队聊天");
                } else {
                    功能开关[42] = 假;
                    联机消息类型 = -1;
                    调试输出("已关闭团队聊天");
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "杀人混淆", 0, 18).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[18] == 假) {
                    功能开关[18] = 真;
                    输出JS消息("已开启杀人混淆.");
                } else {
                    功能开关[18] = 假;
                    输出JS消息("已开启杀人混淆.");
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "房间防踢", 0, 41).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[41] == 假) {
                    功能开关[41] = 真;
                    发送封包("com.pvzlight.script.suimengzhe", 872196275465828792554629763876357637895831972558757565491568752719672873873542543873832576267452975621957416879528792576786387379963696354856252111169595985652659826752975272546582879255462976387635763789583197255875792597268592465828792554629763876357637895831972558752937);
                    调试输出("已开启防踢！");
                    调试输出("防踢功能暂未完善,可能会失灵");
                } else {
                    功能开关[41] = 假;
                    调试输出("已关闭防踢！");
                    发送封包("com.pvzlight.script.suimengzhe", 100000);
                }
            }
        }))
        分隔(layout);

        新增按钮(layout, "商店货币").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                添加物品(3, 64, 0);
                输出JS消息("已添加一组\"钱\"");
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function X0167_F89R8D() {
    if (存在文件(sdka + msgwj[0]) == 真) {
        var X0167_WAIJ = 读入文件(sdka + msgwj[1])
    } else {
        var X0167_WAIJ = null
    }
    if (X0167_WAIJ != null) {
        if (功能开关[3] == 假) {
            功能开关[3] = 真;
            写出文件(sdka + testFor(msgwj[3]).replace(fang(), 空), X0167_WAIJ.replace(msgwj[4], msgwj[5]).replace(msgwj[6], msgwj[7]) + msgwj[8] + X0167_WAIJ.replace(fang(), 空).replace(astr[1], astr[17]).replace(msgwj[6], msgwj[7]));
            调试输出(message[0]);
            调试输出(message[1]);
        } else {
            关闭游戏()
        }
    } else {
        调试输出(message[2]);
        调试输出(message[3])
    }
}


function Menu联机作弊() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  联机作弊:");

        新增按钮(layout, "联机外进", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (包名 == "炸妈盒子") {
                    调试输出("多玩用户与狗不准使用此功能！");
                } else if (包名 == "葫芦瞎") {
                    调试输出(astr[16]);
                } else {
                    Menu联盒外进();
                }
            }
        }));
        分隔(layout);

        新增按钮(layout, "炸妈魔盒", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                menu.dismiss();
                Menu炸妈魔盒();
            }
        }));
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu炸妈魔盒() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  使用炸妈魔盒:");

        新增按钮(layout, "调用魔盒").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                调试输出("正在调用魔盒...");
                调试输出("未能找到魔盒");
            }
        }))
        分隔(layout);

        新增按钮(layout, "房间列表", 111).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Menu房间列表();
            }
        }))
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}
if (存在文件(sdka + "/mctools/")) {
    ModPE.langEdit(gl[2], astr[40]);
} else if (存在文件(sdka + "/huluxia/")) {
    ModPE.langEdit(gl[2], astr[41]);
} else {
    ModPE.langEdit(gl[2], gl[0]);
}

ModPE.langEdit(gl[1], 换(gl[3], JSVer));
ModPE.langEdit(gl[4], gl[5]);

if (白名单[4] != "com.duowan.groundhog.mctools") {
    关闭游戏()
}
if (ctx.getPackageName() == "com.duowan.groundhog.mctools") {
    关闭游戏()
}

function Menu房间列表() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "联机盒子房间列表:");
        for (var i = 0; i <= 20; i++) {
            注释文字(layout, "undefined");
            新增按钮(layout, "undefined").setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    调试输出("<b>失败:</b> 没有调用魔盒", "抄袭狗看你妈逼？");
                    调试输出("<b>失败:</b> 没有发现魔盒返回值", "你妈死了");
                }
            }))
            分隔(layout);
        }
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu联盒外进() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "  联机盒子外进:");
        新增按钮(layout, "联盒外进").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                X0167_F89R8D();
            }
        }));
        分隔(layout);
        新增按钮(layout, "使用方法").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                信息框("碎梦者", astr[0]);
            }
        }))
        分隔(layout);

        注释文字(layout, "  联机平台外进:");

        新增按钮(layout, "平台外进").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                调试输出("敬请期待");
            }
        }));
        分隔(layout);
        新增按钮(layout, "使用方法").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                调试输出("敬请期待");
            }
        }))
        分隔(layout);

        注释文字(layout, "  其他:");
        新增按钮(layout, "端口映射").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                调试输出("敬请期待");
            }
        }))
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

var open角色扮演 = 假,
    联机消息类型, 联机消息名称, 骂次数 = [0, 0, 0],
    骂次数2 = [0, 0, 0];

var 脏话 = ["房主傻逼!", "房主智障！", "房主开挂死妈！", "弱智无能房主开挂死亲妈！", "房主你妈灵车漂移！", "傻逼房主滚去吃屎！", "房主你妈死了！", "挂狗房主死全家！", "傻逼房主有种别作弊！", "只会作弊的废物！"]
var 脏话2 = ["我是傻逼!", "我是智障！", "我死亲妈！", "我无能弱智！", "我妈灵车漂移！", "我是大傻逼！", "我很没用很垃圾", "我是多玩盒子的走狗！", "盒子君是我亲爹", "我妈是母狗", "我是大智障", "我就是一个废物！", "啦啦啦啦啦~我是一个可爱的大傻逼！", "我就是傻逼你能拿我怎么样？"]

function chatHook(text) {
    if (联机消息类型 == -2) {
        preventDefault();
        发送消息("§7§o[CONSOLE:" + text + "§7§o]")
    } else if (联机消息类型 == 0) {
        preventDefault();
        带名字发送消息(联机消息名称, text)
    } else if (联机消息类型 == 1) {
        preventDefault();
        发送消息(联机消息名称 + text)
    } else if (联机消息类型 == 2) {
        preventDefault();
        发送消息(text)
    } else if (联机消息类型 == 3) {
        preventDefault();
        if (获取玩家名字(获取玩家实体()) != 空) {
            带名字发送消息(获取玩家名字(获取玩家实体()), "§碎梦者Ⅲ" + 获取玩家名字(获取玩家实体()) + "Ⅲ" + text)
        } else {
            带名字发送消息("碎梦者", 比("§碎梦者Ⅲ碎梦者Ⅲ", message[4]) + text)
        }
    } else if (已联机 == 真) {
        preventDefault();
        发送消息(text);
    }
    比(text, astr[15], 2);
    var a = text.split(空);
    if (a[0] == ".") {
        preventDefault();
        command(text);
    }
}

var cmdlist = {
    help: {
        name: ".help"
    },
    run: {
        name: ".run",
        yes: "已运行代码",
        no: "§c用法:.run <代码>",
        a: "运行代码"
    },
    gm: {
        name: ".gm",
        yes: "已改变游戏模式",
        no: "§c用法:.gm <模式>",
        a: "设置游戏模式"
    },
    time: {
        name: ".time",
        yes: "已将%s设置为当前世界时间",
        no: "§c用法:.time <时间>",
        a: "设置游戏时间"
    },
    health: {
        name: ".health",
        yes: "已将%s设置为你的血量",
        no: "§c用法:.health <血量>",
        a: "设置血量"
    },
    give: {
        name: ".give",
        yes: "已添加ID为%s的物品到你的背包",
        no: "§c用法:.give <ID> <数量> <特殊值>",
        a: "给予物品"
    },
    list: {
        name: ".list",
        yes: "当前在线玩家:§f %s",
        a: "查看在线玩家"
    },
    boom: {
        name: ".boom",
        yes: "范围为%s的爆炸已生成在指定位置",
        no: "§c用法:.boom <x> <y> <z> <范围>",
        a: "自定义一个爆炸"
    }
}
regcmd = ["run", "gm", "time", "health", "give", "list", "boom"]
var cmdhelp = 空;
for (var i = 0; i < regcmd.length; i++) {
    eval("cmdhelp+=cmdlist." + regcmd[i] + ".name");
    cmdhelp += " - ";
    eval("cmdhelp+=cmdlist." + regcmd[i] + ".a");
    cmdhelp += "\n";
}



function command(cmd) {
    var 玩家列表 = [get全部玩家(), 空]
    for (var i = 0; i < 玩家列表[0].length; i++) {
        玩家列表[1] += 获取玩家名字(玩家列表[0][i]) + "§7,§f"
    }

    if (功能开关[19] == 真) {
        关闭游戏()
    }
    var cmd = cmd.split(" ");

    if (cmd[0] == cmdlist.help.name) {
        if (cmd[1] != null) {
            eval("输出JS消息(cmdlist." + cmd[1] + ".no)");
        } else {
            信息框(cmdhelp.偷梁换柱("§c用法:", 空));
            输出JS消息("已打开帮助");
        }
    } else if (cmd[0] == cmdlist.list.name) {
        输出JS消息(换(cmdlist.list.yes, 玩家列表[1]));
    } else if (cmd[0] == cmdlist.run.name) {
        if (cmd[1] != null) {
            eval(cmd[1]);
            输出JS消息(cmdlist.run.yes);
        } else {
            输出JS消息(cmdlist.run.no)
        }
    } else if (cmd[0] == cmdlist.boom.name) {
        if (cmd[1] != null && cmd[2] != null && cmd[3] != null) {
            if (cmd[1] == "~") {
                cmd[1] = getPlayerX()
            }
            if (cmd[2] == "~") {
                cmd[2] = getPlayerY()
            }
            if (cmd[3] == "~") {
                cmd[3] = getPlayerZ()
            }
            if (cmd[4] == null) {
                cmd[4] = 5
            }
            爆炸(cmd[1], cmd[2], cmd[3], cmd[4])
            输出JS消息(换(cmdlist.boom.yes, cmd[4]));
        } else {
            输出JS消息(cmdlist.boom.no)
        }
    } else if (cmd[0] == cmdlist.gm.name) {
        if (cmd[1] != null) {
            设置游戏模式(cmd[1]);
            输出JS消息(cmdlist.gm.yes);
        } else {
            输出JS消息(cmdlist.gm.no)
        }
    } else if (cmd[0] == cmdlist.time.name) {
        if (cmd[1] != null) {
            设置游戏时间(cmd[1]);
            输出JS消息(换(cmdlist.time.yes, cmd[1]));
        } else {
            输出JS消息(cmdlist.time.no)
        }
    } else if (cmd[0] == cmdlist.health.name) {
        if (cmd[1] != null) {
            设置实体血量(获取玩家实体(), cmd[1]);
            输出JS消息(换(cmdlist.health.yes, cmd[1]));
        } else {
            输出JS消息(cmdlist.health.no)
        }
    } else if (cmd[0] == cmdlist.give.name) {
        if (cmd[1] != null) {
            if (cmd[2] == null) {
                cmd[2] = 64
            }
            if (cmd[3] == null) {
                cmd[3] = 0
            }
            添加物品(cmd[1], cmd[2], cmd[3]);
            输出JS消息(换(cmdlist.give.yes, cmd[1]));
        } else {
            输出JS消息(cmdlist.give.no)
        }
    } else {
        输出JS消息(换("§c\"%s\"是什么玩意?发送.help来查看帮助", cmd[0]))
    }
}

function 全民进房_盒子() {
    发送消息("§eSteve" + 生成随机数(10000, 99999) + " 加入了游戏")
}

function 全民进房_平台() {
    发送消息("§eguest" + 生成随机数(100000, 999999) + " 加入了游戏")
}

function 全民骂房主_平台() {
    if (脏话[骂次数[0]] != null) {
        带名字发送消息("guest" + 生成随机数(100000, 999999), 脏话[骂次数[0]]);
        骂次数[0]++
    } else {
        骂次数[0] = 0
    }
}

function 全民骂房主_盒子() {
    if (脏话[骂次数[1]] != null) {
        带名字发送消息("Steve" + 生成随机数(10000, 99999), 脏话[骂次数[1]]);
        骂次数[1]++
    } else {
        骂次数[1] = 0
    }
}

function 替罪羊(名称, type) {
    if (type == null) {
        if (脏话[骂次数[2]] != null) {
            带名字发送消息(名称, 脏话[骂次数[2]]);
            骂次数[2]++
        } else {
            骂次数[2] = 0
        }
    } else if (type == 1) {
        if (脏话2[骂次数2[2]] != null) {
            带名字发送消息(名称, 脏话2[骂次数2[2]]);
            骂次数2[2]++
        } else {
            骂次数2[2] = 0
        }
    }
}

function 比(one, two, type) {
    if (type == null) {
        if (one != two) {
            关闭游戏();
        } else {
            return one
        }
    } else if (type == 1) {
        if (String(one) != String(two)) {
            关闭游戏();
        } else {
            return one
        }
    } else if (type == 2) {
        if (one == two) {
            关闭游戏();
        }
    }
}

function Menu角色扮演() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "  角色扮演:");
        新增按钮(layout, "控制台").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = -2;
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "商店管").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 0;
                联机消息名称 = "§6城管§f";
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "炸妈君").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 0;
                联机消息名称 = "§c盒子君§f";
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "炸妈娘").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 0;
                联机消息名称 = "§d盒子娘§f";
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "服务器").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 1;
                联机消息名称 = "§d[Server]";
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "白内障").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 0;
                联机消息名称 = "Herobrine";
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "权限狗").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 0;
                联机消息名称 = "§e[SVIP]§c%player%§f".偷梁换柱("%player%", 我的名称);
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "修理工").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 0;
                联机消息名称 = "§6联机工作人员§c%player%§f".偷梁换柱("%player%", 我的名称);
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "管理员").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 0;
                联机消息名称 = "§6联机管理员§c%player%§f".偷梁换柱("%player%", 我的名称);
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "大黑客").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 0;
                联机消息名称 = "§4超级§c黑客§4§o";
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "公告牌").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = 1;
                联机消息名称 = "§6[§4公告§6]§a";
                tip("你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "史蒂夫").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = -1;
                联机消息名称 = "Steve" + 生成随机数(10000, 99999);
                tip("#你的角色已更换");
            }
        }));
        分隔(layout);
        新增按钮(layout, "无名称").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 假;
                联机消息类型 = 2;
                tip("#你的角色已更换")
            }
        }));
        分隔(layout);
        新增按钮(layout, "我自己").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                open角色扮演 = 真;
                联机消息类型 = -1;
                联机消息名称 = 我的名称;
                tip("#你的角色已更换");
                分隔(layout);
            }
        }))
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function 别踩白块() {
    var 行 = 生成随机数(0, 10);
    发送消息(白块内容[行])
}
if (包 == 白名单[4]) {
    功能开关[35] = 真
}
功能开关[21] = 假;

function Menu全民进房() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        注释文字(layout, "  高端功能:");

        新增按钮(layout, "魔法白块", 0, 14).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                别踩白块();
                if (功能开关[14] == 假) {
                    功能开关[14] = 真
                } else {
                    功能开关[14] = 假
                }
            }
        }));
        分隔(layout);
        新增按钮(layout, "魔法英文", 0, 33).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                别踩白块();
                if (功能开关[33] == 假) {
                    功能开关[33] = 真
                } else {
                    功能开关[33] = 假
                }
            }
        }));
        分隔(layout);
        新增按钮(layout, "吓唬房主", 0, 37).setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[37] == 假) {
                    功能开关[37] = 真;
                    调试输出("已开始恐吓")
                } else {
                    功能开关[37] = 假;
                    ("已关闭恐吓")
                }
            }
        }));
        分隔(layout);
        新增按钮(layout, "口令红包").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                发送消息("§2§l--------------------");
                发送消息(换("§c[口令红包]§6发送口令\"%s\"即可领取红包!", 脏话2[生成随机数(0, 脏话2.length)]));
                发送消息("§2§l--------------------");
            }
        }));
        分隔(layout);
        新增按钮(layout, "平台进房").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                全民进房_平台();
            }
        }))
        分隔(layout);
        新增按钮(layout, "盒子进房").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                全民进房_盒子();
            }
        }))
        分隔(layout);
        新增按钮(layout, "平台喷房").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                全民骂房主_平台();
            }
        }))
        分隔(layout);
        新增按钮(layout, "盒子喷房").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                全民骂房主_盒子();
            }
        }))
        分隔(layout);
        新增按钮(layout, "隐藏名称").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                设置实体铭牌(获取玩家实体(), "碎梦者")
                输出JS消息("已开启反伪装.");
            }
        }))
        分隔(layout);

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function get全部玩家() {
    return Server.getAllPlayers()
}
if (存在文件(配置 + "script/isban.txt")) {
    功能开关[19] = 真;
    功能开关[22] = 真;
}

function get实体名称(ent) {
    return Entity.getNameTag(ent)
}

function 玩家是否存在(名称) {
    var 实体 = get全部玩家(),
        是否存在 = 假;
    for (i = 0; i < 实体.length; i++) {
        if (String(get实体名称(实体[i])) == 名称) {
            是否存在 = 真
        };
        if (i = 实体.length) {
            return 是否存在
        }
    }
}

function get玩家实体(名称) {
    var 实体 = get全部玩家();
    for (i = 0; i < 实体.length; i++) {
        if (String(获取玩家名字(实体[i])) == 名称) {
            return 实体[i]
        }
    }
}

function 列表是否空白名字(名称) {
    if (名称 == 空) {
        return "碎梦者"
    } else {
        return "" + 名称
    }
}
写出文件(配置 + "script/id.txt", getid());

function Menu玩家管理() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 0);
        注释文字(layout, "  选择玩家:");
        var 玩家列表 = get全部玩家();

        if (get实体名称(玩家列表[0]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[0])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[0]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[1]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[1])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[1]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[2]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[2])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[2]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[3]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[3])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[3]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[4]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[4])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[4]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[5]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[5])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[5]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[6]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[6])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[6]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[7]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[7])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[7]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[8]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[8])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[8]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[9]) != null) {
            新增按钮(layout, 列表是否空白名字(get实体名称(玩家列表[9])), 111).setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    Menu玩家管理_控制(玩家列表[9]);
                }
            }))
            分隔(layout);
        }

        if (get实体名称(玩家列表[10]) != null) {
            新增按钮(layout, "......").setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    调试输出("暂时无法显示更多.")
                }
            }))
            分隔(layout);
        }

        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 0), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function Menu玩家管理_控制(名称) {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        var 玩家列表 = get全部玩家();
        新增文字(layout, "  " + 获取玩家名字(名称));
        注释文字(layout, "[" + 名称 + "]");

        新增按钮(layout, "传送过去").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                var 实体坐标 = [Entity.getX(get玩家实体(名称)), Entity.getY(get玩家实体(名称)), Entity.getZ(get玩家实体(名称))]
                传送玩家(实体坐标[0], 实体坐标[1], 实体坐标[2])
            }
        }))
        分隔(layout);
        if (功能开关[4] != 真) {
            新增按钮(layout, "让它骂自己").setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    替罪羊(获取玩家名字(名称), 1);
                }
            }))
            分隔(layout);

            新增按钮(layout, "让它骂房主").setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    替罪羊(获取玩家名字(名称));
                }
            }))
            分隔(layout);

            新增按钮(layout, "让它背价值观").setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    带名字发送消息(获取玩家名字(名称), astr[2])
                }
            }))
            分隔(layout);
        }
        新增按钮(layout, "伪装成他").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (功能开关[4] != 真) {
                    联机消息类型 = 0;
                    联机消息名称 = 获取玩家名字(名称);
                    调试输出("已伪装成它")
                }
            }
        }))
        分隔(layout);

        注释文字(layout, "  高端功能:")
        新增按钮(layout, "让它掉坑").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                var 实体坐标 = [Entity.getX(名称), Entity.getY(名称), Entity.getZ(名称)]
                for (var i = 1; i <= 20; i++) {
                    破坏方块(实体坐标[0], 实体坐标[1] + 10 - i, 实体坐标[2], 假);
                    破坏方块(实体坐标[0] + 1, 实体坐标[1] + 10 - i, 实体坐标[2], 假);
                    破坏方块(实体坐标[0] - 1, 实体坐标[1] + 10 - i, 实体坐标[2], 假);
                    破坏方块(实体坐标[0], 实体坐标[1] + 10 - i, 实体坐标[2] + 1, 假);
                    破坏方块(实体坐标[0], 实体坐标[1] + 10 - i, 实体坐标[2] - 1, 假)
                }
            }
        }))
        分隔(layout);
        新增按钮(layout, "让它遭天谴").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                if (已联机 == 真) {
                    输出JS消息("检测到这不是你的存档？")
                }
                for (var i = 0; i < 10; i++) {
                    Level.spawnMob(Entity.getX(名称), Entity.getY(名称), Entity.getZ(名称), 93);
                }
            }
        }))
        分隔(layout);
        if (功能开关[4] == 真) {
            注释文字(layout, "  伪装联盒:");
            新增按钮(layout, "模拟踢出").setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    输出消息("§c%player% 被房主踢出房间！".偷梁换柱("%player%", 获取玩家名字(名称)))
                }
            }))
            分隔(layout);

            新增按钮(layout, "模拟点赞").setOnClickListener(new pvzlight.vvo({
                onClick: function(v) {
                    var 真实名称 = 名称.split(" (");
                    输出消息("§d%player%赞了一下房主".偷梁换柱("%player%", 真实名称[0]))
                }
            }))
            分隔(layout);
        }
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

function 玩家是否在游戏中() {
    if (获取实体血量(获取玩家实体()) == 0 && Player.getHunger() == -1 && 手中物品() == 0) {
        return 假
    } else {
        return 真
    }
}

function info我() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    var layout = new pvzlight.wl(ctx);
    try {
        var menu = new pvzlight.wp(layout, dip2px(ctx, 30), dip2px(ctx, 30));
        menu.setFocusable(假);
        var layout = new pvzlight.wl(ctx);
        layout.setOrientation(1);
        焦点判断(menu, 1);
        var 玩家列表 = get全部玩家();
        新增文字(layout, " " + 我的名称)
        注释文字(layout, " 血量:" + 获取实体血量(获取玩家实体()));
        注释文字(layout, " 饥饿:" + Player.getHunger());
        注释文字(layout, " 手中物品:" + 手中物品());

        新增按钮(layout, "满血").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                设置实体血量(获取玩家实体(), 20)
                输出JS消息("已将你的血量设置为满血.")
            }
        }))
        分隔(layout);

        新增按钮(layout, "自杀").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                设置实体血量(获取玩家实体(), 0)
                输出JS消息("已将你杀死.")
            }
        }))
        分隔(layout);

        新增按钮(layout, "设置出生点").setOnClickListener(new pvzlight.vvo({
            onClick: function(v) {
                Level.setSpawn(getPlayerX(), getPlayerY(), getPlayerZ());
                输出JS消息("已将复活点设置在你脚下位置.")
            }
        }))
        分隔(layout);
        var mlayout = 制作菜单(ctx, layout);
        menu.setContentView(mlayout);
        menu.setWidth(dip2px(ctx, 120));
        menu.setHeight(dip2px(ctx, -1));
        menu.setBackgroundDrawable(new pvzlight.gdc(pvzlight.gca(背景颜色[0], 背景颜色[1], 背景颜色[2], 背景颜色[3])));
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 120), dip2px(ctx, 0))
    } catch (err) {
        信息框("错误", err)
    }
}

调试输出("加载完毕", 1);