use strict ";
var Auto=0;
while(true)
{Auto++;
print("光明之眼0123456789爱与梦想abcdefghijklmnopqrstuvwxyz一切为了ABCDEFGHIJKLMNOPQRSTUVWXYZ爱与和平 ");
if(Auto==1)
{break;}}
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var View=new android.widget.TextView(ctx);
View.setText("『AutoFishHack』 "+"\n "+"官方QQ群号: "+"\n "+"159131446 ");
View.setTextSize(36);
View.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
View.setTextColor(android.graphics.Color.argb(255,255,255,0));
View.setMarqueeRepeatLimit(java.lang.Integer.MAX_VALUE);
View.setFocusable(true);
View.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
View.setSingleLine();
View.setFocusableInTouchMode(true);
View.setHorizontallyScrolling(true);
var dialog=new android.app.AlertDialog.Builder(ctx);
dialog.setView(View);
dialog.show();}
catch(HACKER)
{print(HACKER);}}}));
var Android="来自『 AutoFishHack』 官方 ";
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(v){try{
var layout=new android.widget.LinearLayout(ctx);
layout.setOrientation(1);
var 公告=new android.widget.TextView(ctx);
公告.setText("开发人员: 橘子皮 "+"\n "+"橘子皮QQ: 2952286752 "+"\n 参与人员: 小眼睛 "+"\n "+"小眼睛QQ: 2032342576 "+"\n "+"赞助人员: 凌欣晨 "+"\n "+"凌欣晨QQ: 1218773041 "+"\n "+"倒卖人员列表: "+"\n "+"〈※暂※ 未※ 发※ 现※〉 ");
公告.setTextSize(20);
公告.setTextColor(android.graphics.Color.argb(255,255,255,0));
layout.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
layout.addView(公告);
var scroll=new android.widget.ScrollView(ctx);
scroll.addView(layout);
var 公告=new android.widget.TextView(ctx);
var dialog=new android.app.Dialog(ctx);
dialog.setContentView(scroll);
dialog.setTitle(Android);
layout.addView(公告);
var DogWall=new android.widget.Button(ctx);
DogWall.setOnClickListener(new android.view.View.OnClickListener(){onClick:function(viewarg){dialog.dismiss();}});
DogWall.setText(" < OKAY > ");
DogWall.setTextSize(16);
DogWall.setTextColor(android.graphics.Color.argb(255,255,255,0));
layout.addView(DogWall)
dialog.show();} 
catch(公告)
{print("Android "+公告);}}}));
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var View=new android.widget.TextView(ctx);
View.setText("『AutoFishHack』 "+"\n 官方QQ群号 "+"\n "+"159131446 ");
View.setTextSize(36);
View.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
View.setTextColor(android.graphics.Color.argb(255,255,255,0));
View.setMarqueeRepeatLimit(java.lang.Integer.MAX_VALUE);
View.setFocusable(true);
View.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
View.setSingleLine();
View.setFocusableInTouchMode(true);
View.setHorizontallyScrolling(true);
var dialog=new android.app.AlertDialog.Builder(ctx);
dialog.setView(View);
dialog.show();}
catch(HACKER)
{print(HACKER);}}}));
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var A=new android.widget.LinearLayout(ctx);
A.setOrientation(1);
var B=new android.widget.LinearLayout(ctx);
B.setOrientation(1);
B.setGravity(17);
var B_params=new android.widget.LinearLayout.LayoutParams(-2,-2);
B.setLayoutParams(B_params);
A.addView(B);
var AutoFishHack=new android.widget.Button(ctx)
AutoFishHack.setText("上 ");
AutoFishHack.setTextSize(20);
AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({onClick:function(v){setPosition(Player.getEntity(),Player.getX(),Player.getY()+30,Player.getZ());}}))
var AutoFishHack_params=new android.widget.LinearLayout.LayoutParams(80,80);
AutoFishHack.setLayoutParams(AutoFishHack_params);
AutoFishHack.setTextColor(android.graphics.Color.argb(255,255,255,0));
A.addView(AutoFishHack)
var C=new android.widget.PopupWindow(ctx);
C.setFocusable(false);
C.setContentView(A);
C.setWidth(80);
C.setHeight(80);
C.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(" - 16711681 "));
C.showAtLocation(ctx.getWindow().getDecorView(),333,404,360);}
catch(HACKER)
{print(HACKER);}}}));
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var View=new android.widget.TextView(ctx);
View.setText("『AutoFishHack』 "+"\n 官方QQ群号 "+"\n "+"159131446 ");
View.setTextSize(36);
View.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
View.setTextColor(android.graphics.Color.argb(255,255,255,0));
View.setMarqueeRepeatLimit(java.lang.Integer.MAX_VALUE);
View.setFocusable(true);
View.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
View.setSingleLine();
View.setFocusableInTouchMode(true);
View.setHorizontallyScrolling(true);
var dialog=new android.app.AlertDialog.Builder(ctx);
dialog.setView(View);
dialog.show();}
catch(HACKER)
{print(HACKER);}}}));
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var A=new android.widget.LinearLayout(ctx);
A.setOrientation(1);
var B=new android.widget.LinearLayout(ctx);
B.setOrientation(1);
B.setGravity(17);
var B_params=new android.widget.LinearLayout.LayoutParams(-2,-2);
B.setLayoutParams(B_params);
A.addView(B);
var AutoFishHack=new android.widget.Button(ctx)
AutoFishHack.setText("下 ");
AutoFishHack.setTextSize(20);
AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({onClick:function(v){setPosition(Player.getEntity(),Player.getX(),Player.getY()-2,Player.getZ());}}))
var AutoFishHack_params=new android.widget.LinearLayout.LayoutParams(80,80);
AutoFishHack.setLayoutParams(AutoFishHack_params);
AutoFishHack.setTextColor(android.graphics.Color.argb(255,255,255,0));
A.addView(AutoFishHack)
var C=new android.widget.PopupWindow(ctx);
C.setFocusable(false);
C.setContentView(A);
C.setWidth(80);
C.setHeight(80);
C.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(" - 16711681 "));
C.showAtLocation(ctx.getWindow().getDecorView(),333,202,360);}
catch(HACKER)
{print(HACKER);}}}));
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var View=new android.widget.TextView(ctx);
View.setText("『AutoFishHack』 "+"\n "+"官方QQ群号 "+"\n "+"159131446 ");
View.setTextSize(36);
View.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
View.setTextColor(android.graphics.Color.argb(255,255,255,0));
View.setMarqueeRepeatLimit(java.lang.Integer.MAX_VALUE);
View.setFocusable(true);
View.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
View.setSingleLine();
View.setFocusableInTouchMode(true);
View.setHorizontallyScrolling(true);
var dialog=new android.app.AlertDialog.Builder(ctx);
dialog.setView(View);
dialog.show();}
catch(HACKER)
{print(HACKER);}}}));
var su="来自『 AutoFishHack』 官方 ";
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var layout=new android.widget.LinearLayout(ctx);
layout.setOrientation(1);
var root=new android.widget.TextView(ctx);
root.setText("※尝试获取※ ROOT※ 权限失败※ "+"\n "+"@错误码; - 750 ");
root.setTextSize(20);
root.setTextColor(android.graphics.Color.argb(255,255,255,0));
layout.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
layout.addView(root);
var scroll=new android.widget.ScrollView(ctx);
scroll.addView(layout);
var root=new android.widget.TextView(ctx);
var dialog=new android.app.Dialog(ctx);
dialog.setContentView(scroll);
dialog.setTitle(su);
layout.addView(root);
var DogWall=new android.widget.Button(ctx);
DogWall.setOnClickListener(new android.view.View.OnClickListener(){onClick:function(viewarg){dialog.dismiss();}});
DogWall.setText(" < ※运行免※ ROOT※ 的方案※ > ");
DogWall.setTextSize(16);
DogWall.setTextColor(android.graphics.Color.argb(255,255,255,0));
layout.addView(DogWall)
dialog.show();} 
catch(root)
{print("su "+root);}}}));
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({run:function(){try{
var View=new android.widget.TextView(ctx);
View.setText("『AutoFishHack』 "+"\n "+"官方QQ群号 "+"\n "+"159131446 ");
View.setTextSize(36);
View.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF "));
View.setTextColor(android.graphics.Color.argb(255,255,255,0));
View.setMarqueeRepeatLimit(java.lang.Integer.MAX_VALUE);
View.setFocusable(true);
View.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);
View.setSingleLine();
View.setFocusableInTouchMode(true);
View.setHorizontallyScrolling(true);
var dialog=new android.app.AlertDialog.Builder(ctx);
dialog.setView(View);
dialog.show();}
catch(HACKER)
{print(HACKER);}}}));
var ctx=com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var 自动钓鱼黑客AutoFishHack本地病毒数据库="iVBORw0KGgoAAAANSUhEUgAAAP8AAAD / CAYAAAA + CADKAAAABHNCSVQICAgIfAhkiAAAIABJREFUeJzMvXeYZFWZP / 65Fbpyp + nuYRIjAwgDIg5BggwOKCpBRRRWXXVNuLsqKn7VNcc1J1gJu6voGnZdZd39iTIwSo7iwDjDAAODjExoekLH6spdde / vj + rP6fe + de6t6mEA3 + epp6puOPHN73vOcTZs2OC5rgvHcbBt2zbcdNNN + POf / wzXdVGv1 + F5HgAgn89jYmICnuchnU6jXq9jamoKxWIRrusiHo8jm80ilUoBAGZmZlCv1xGLxRCJRBCNRuF5nvlEIhFEIhFTPgA4jtPyXavVkEwmce6552LVqlWo1 + vmfqPRQCQSwczMDCYnJzE6OopSqQTHceA4DlzXRSKR8NUr6wOAWCwGAOZ6JBJBIpFAKpVCV1cXcrkckskkBgcHcdhhh2FychLXXHMNnnrqKYyNjaFQKGD37t0oFouIRCJwHAepVAqZTAaO4yAajaLRaKBer / v6Vq / X0Wg0TN2u6 / raxbIk1Go1XHDBBfjmN7 + JQqGAiYkJ5PN5FItFTExMYN++fZiYmEC5XDZlc4x1 + a7rwvM8xGKxlvuu66LRaMB1XRSLRWSzWWQyGcTjcUSjUTOnnuchGo3CcRwzx / yw / fo / P / Ia37XdZz2NRgOpVArJZBJTU1MYHR2F67qoVqumrdPT09i4cSO2bt2KK6 + 8Ei94wQuQzWZNWRxrz / NMPQcSWC4AVKtVXHHFFSiVSjj22GMxNTWFarWKQqGArq4uVKtVAEA0GjXvyvbxN + eF10mX7LPneajX66jVaqjX6 + Z3pVJBtVpFLBbDyMgIrrrqKhxxxBEAmrQZjUYR040GYAafgy4bQJAT5nkearUaSqUSPM9DPB5HLBZDMplEvV43DZYTLUHXLb9TqRSi0ShqtRomJydRKBRM5 + v1umlntVpFpVIxCM3rbHvQZBMpJNKx / fxIJJXX + F48HkcymTQDKxkf6 + fzHEf5X0 + 6bKtss + u6PmYai8UQj8fR1dWFrq4uJJNJJJNJNBoNzMzMwHVdRCIRwwhkXRK5bMTPjyTSoDmz / Zd1yTHQhCe / 9UePDcuSiG8D29g920DGRUFAQUT8qlarvvZroudvCg1ebzQa5sM5mpmZQSQSMcQvx5m4ZhvnmK6QSM6HNVLydzQaRSKRQLFYNNyHBJlOp5HL5QzhslEklEgkYiZREoENoVhuqVTC5OQk8vk8Go2GQYRqterj6lLC8Br7ZCM4XpdSq6urC4lEwhCWJLh4PG4kIABDZFKi12o1AEA8HkcqlfLVLQmBDIpt0X2XY85vKRFjsRi6urrQaDSQTCaRSqWMJGRb + DzHjEDGwLkIAjJCMnrdRk3I + hnJfGXfNVPmGOoyNaOSH9tYPReghScAMz9koCR8CidJoCyD3 / I3iZ / XNfE3Gg2Dt5ToEmcajYZPgEmIBU0okVVKfjnIJBIJruuiXC6bDsZiMSQSiWZFsw1gp21cWzIZ / k8kEoZLkhGwftap35dtJvJrNVKaH5SilKSS6OXAsV5JDFINi8ViZsArlYrhyCyHkyIZkh5bDXxGMmWJ / JJhkQHMzMyYMaDmJYlftkNKf4l0RDASvw15JL7oOZC / gwRI2DuSUQRpATbCsX0 / kxA0f8QrjnskEjG4RabQCfFrzY9lyvnVfeVzUmjZtOuYJHap3trUMiIiK6K9rDteqVQANG3U3t5eg5TstETmsAnyPM8wGBIciZ5EkMlkWtQgiWia + DXis0xOCidISzz5kZpCV1fX3GDGYkin0z47u1qtmjZJDUX6QPSkaGKglObEUpOS / ZSaAG3Ker2O6elpMz5a5bbZlqyD45lIJKyquGwf26DLC3svaL7lb0nktnbrubR9nmmwSX22jbgj6UQKCQC + edSEz3cIxG + bxiZNc5qH1Ky1xmvUft4g8kiJSoTRdj + lr5wYLdHpcPA8D9ls1qj87AAJTds0 + nepVEK1WjVOLKmVSMml7Ur2xzYpcjBIxJTO8rfUViTj4IQmk0krQUvpXKvVfM41qZbZVFf + DpKOej7kOyT + ZDKJmZkZMw58RxKTRrgg4pdIaJPwQeVITSmsXm2e6ft6HLTKr02BINPgmQQ9LvwvhZt2bmpprAlfvievSaaqfxMk8UtalUIEwBzxS68sC5B2vLQxiNB8T06ansDJyUlMTk4imUz6bFwSmXRGBalrnudhamoKtVqthaglkrItkkloCcm6pTdaMj750c417eRLpVI + qSv9Gxxom7NTMwyWKQlBjhPL0tqSZExS8tPRCgDd3d2YmZlBrVYz / gmp6nOuJWhpo8eP39LXYYtWSEKw2fwaaXX9mvHId / Tv54r4g5girwdpM3xGO4KDmIDsv8QBMnj90Zq6HDOWF9NIKSdTEr4kfsm1dahCdoiECMyZAkEDF0T4bBMlGd9h22hKSAcaCZD9kLayJnbdf + 0AlPel + kl / BjUA13WNxGW7u7q6UKvVfIPPsuR / m1rLj2yP / C9NNfmM9P6zTVIr4zhKKa0JRbZX + wOCVH + tgmviln2U94I0HvZV4pRu11 + D2t / OpNFSXuOXDPfawKYJBc2N7rvU1m3jEaMjolQqoa + vD11dXWbQiWSUKHRiSXvGcRyDaBKxbKprUMfCBpNezFgshkwmg1KphFqtZswGtgeYkz7xeNz3vmQYkmgcx2mR3tLeJ8JlMhnU63VjtuRyOZRKJeTzeePLiEQiJvpBz269Xkcmk / H1k07Arq4uUx4w59OgpsDyKpUKstms0R6Yt0C7ngykq6vLjD29 / 9R8bGFbG7Fqx6C0F8ls2S6t8WmpIn + zbv6XWgGZt2QOlFiu66KrqwulUsnn0Ny5cyfi8TgqlQrq9Tq6urowPT1t + slxY71SU5QMV2om + wvEK2lu2oiQXnniGEHmmdg + el45LzbJz7LY50ajgWKxiGg0inQ6bfpLX1RMdiLIo0vQKoycMK3mdMp1O2UQEjHkAOgkHf2uDIVI1ZhSW / bf9r4cfC0BE4mEYZY0BRKJhGFWDAlKYpJOOc39JQMiwrAOKTnYNk58kBZAhyQZM8vluEjpEDYO1CiIOFIjTCaTLWqv9hFpqSfHUUpwaXJKE411VyoVE / aVsXJtxsg5ksIoqH / PJYRpUvz9dIBMWgpJhttjknAl8sjG6QbKBun3dELJ0wU5kZKIaW6EZUixo5Ix1Wo1kwEVi8WwcOFC03bt8aeUI1HyHnMAmD0mTSGJ3JKw2TZOBNAkhlwuB2DOd0HmQBWddbJcagd8Xo6 / DllSCkpTSEZFgFZbXY + 91AY085USSOKQxBdqW1oT1CYOGYvEPaBpLnLOOb7pdNowNWaYBqm2kik8F6CZjqYnOYa2a522XdOopOt6vY7R0VH09fUhnU4DaGqgMTmp2vZtR / iyEsk0DuSASycRCYO2u5Y4GgG0pJY2fCKRQDKZNGoRCZVEI + uo1WpIp9OoVqsmhEbzI5PJIJFIGPWT + QEyH0CPk / avkNlIlVQ + wxRcyVxskk72UzsuZXRFq6Q2xCGQoddqNZ + EJqPkddYlNUJdpiRwMgUZBrMxkJmZGV8 + ieM4Jptzz549gaFebc5wHnT / nis4UG3QPhM99p7noVwuY8eOHSY9muZgTBOH / GgGEMRdJVITDrQGICWiJBLdLj35dLrJ9tAb77quyUIkAVKqU9rSZu / u7jaEnc1mcdC "
var AutoFishHackX = 555;
var AutoFishHackY = 444;
var HACKEX, HACKEY;
var GUI = null;
var GHz = false;
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()

function MoveGui() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            try {
                var layout = new android.widget.LinearLayout(ctx);
                var button = new android.widget.Button(ctx);
                button.setBackground(读取并加载(自动钓鱼黑客AutoFishHack本地病毒数据库))
                button.setOnClickListener(new android.view.View.OnClickListener() {
                    onClick: function(v) {
                        Level.setRainLevel("0");
                        Level.setLightningLevel("0");
                        AutoFishHack();
                        clientMessage("§e§l§oAutoFishHack.JS运行成功");
                        clientMessage("§1§l§oAutoFishHack.JS运行成功");
                        clientMessage("§2§l§oAutoFishHack.JS运行成功");
                        clientMessage("§3§l§oAutoFishHack.JS运行成功");
                        clientMessage("§4§l§oAutoFishHack.JS运行成功");
                        clientMessage("§5§l§oAutoFishHack.JS运行成功");
                        clientMessage("§6§l§oAutoFishHack.JS运行成功");
                        clientMessage("§7§l§oAutoFishHack.JS运行成功");
                        clientMessage("§8§l§oAutoFishHack.JS运行成功");
                        clientMessage("§9§l§oAutoFishHack.JS运行成功");
                    }
                });
                button.setOnLongClickListener(new android.view.View.OnLongClickListener() {
                    onLongClick: function(v, t) {
                        GHz = true;
                        var vibrator = ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE);
                        vibrator.vibrate(88);
                        return true;
                    }
                });
                button.setOnTouchListener(new android.view.View.OnTouchListener({
                    onTouch: function(v, e) {
                        if (!GHz) {
                            HACKEX = e.getX();
                            HACKEY = e.getY();
                        }
                        if (GHz) {
                            var VIRUS = e.getAction();
                            if (VIRUS == 2) {
                                var MRX = parseInt(e.getX() - HACKEX) * -1 / 2;
                                var MRY = parseInt(e.getY() - HACKEY) * -1 / 2;
                                AutoFishHackX = AutoFishHackX + MRX;
                                AutoFishHackY = AutoFishHackY + MRY;
                                GUI.update(parseInt(AutoFishHackX), parseInt(AutoFishHackY), -8, -8);
                            }
                            if (VIRUS == 1)
                                GHz = false;
                        }
                        return false;
                    }
                }));
                layout.addView(button);
                GUI = new android.widget.PopupWindow(layout, dip2px(ctx, 8), dip2px(ctx, 8));
                GUI.setContentView(layout);
                GUI.setWidth(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
                GUI.setHeight(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT);
                GUI.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.BOTTOM | android.view.Gravity.RIGHT, AutoFishHackX, AutoFishHackY);
            } catch (HACKER) {
                print(HACKER);
            }
        }
    }))
}

function dip2px(ctx, dips) {
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function 读取并加载(自动钓鱼黑客AutoFishHack本地病毒数据库) {
    var A = android.util.Base64.decode(String(自动钓鱼黑客AutoFishHack本地病毒数据库), 0);
    var B = new android.graphics.drawable.BitmapDrawable(android.graphics.BitmapFactory.decodeByteArray(A, 0, A.length));
    return B;
}
MoveGui();

function dip2px(ctx, dips) {
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();

function AutoFishHack() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx);
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 88), dip2px(ctx, 88));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)
        var AutoFishHack = new android.widget.TextView(ctx)
        AutoFishHack.setText("光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平" + "\n" + "光明之眼" + "\n" + "爱与梦想" + "\n" + "一切为了" + "\n" + "爱与和平");
        AutoFishHack.setTextSize(13);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setTextColor(android.graphics.Color.argb(0, 255, 0, 0))
        AutoFishHack.setMarqueeRepeatLimit(java.lang.Integer.MAX_VALUE)
        AutoFishHack.setFocusable(true)
        AutoFishHack.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE)
        AutoFishHack.setSingleLine();
        AutoFishHack.setFocusableInTouchMode(true)
        AutoFishHack.setHorizontallyScrolling(true)
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.TextView(ctx)
        AutoFishHack.setText(" AutoFishHack")
        AutoFishHack.setTextSize(21);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#000000"));
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 255, 255))
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<检※查※更※新>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FF00FD47"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Level.setRainLevel("0");
                Level.setLightningLevel("0");
                敬请期待();
                clientMessage("§e§l§oAutoFishHack.JS运行成功");
                clientMessage("§1§l§oAutoFishHack.JS运行成功");
                clientMessage("§2§l§oAutoFishHack.JS运行成功");
                clientMessage("§3§l§oAutoFishHack.JS运行成功");
                clientMessage("§4§l§oAutoFishHack.JS运行成功");
                clientMessage("§5§l§oAutoFishHack.JS运行成功");
                clientMessage("§6§l§oAutoFishHack.JS运行成功");
                clientMessage("§7§l§oAutoFishHack.JS运行成功");
                clientMessage("§8§l§oAutoFishHack.JS运行成功");
                clientMessage("§9§l§oAutoFishHack.JS运行成功");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 255, 255));
        layout.addView(AutoFishHack)

        function 敬请期待() {
            var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
            var layout = new android.widget.LinearLayout(ctx);
            try {
                var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 75), dip2px(ctx, 30));
                menu.setFocusable(true)
                var layout = new android.widget.LinearLayout(ctx)
                layout.setOrientation(1)
                var AutoFishHack = new android.widget.Button(ctx)
                AutoFishHack.setText("<OKAY>")
                AutoFishHack.setTextSize(18);
                AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
                var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80)
                AutoFishHack.setLayoutParams(AutoFishHack_params)
                AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40))
                AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
                    onClick: function(v) {
                        HACKER();
                        var layout = new android.widget.LinearLayout(ctx)
                        var menu = new android.widget.PopupWindow(layout)
                        menu.setFocusable(true)
                        layout.setOrientation(1)
                        var layout = new android.widget.LinearLayout(ctx)
                        var WebView = new android.webkit.WebView(ctx)
                        WebView.getSettings().setJavaScriptEnabled(true)
                        WebView.loadUrl("http://img02.sogoucdn.com/app/a/100520146/dd066af0458942e628ee9ab6c9c9cb96")
                        var Web = new android.webkit.WebViewClient()
                        WebView.setWebViewClient(Web)
                        layout.addView(WebView)
                        var mlayout = makeMenu(ctx, layout)
                        menu.setContentView(mlayout)
                        menu.setWidth(777)
                        menu.setHeight(555)
                        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT))
                        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, 0, 0)
                    }
                }))
                layout.addView(AutoFishHack)
                var mlayout = makeMenu(ctx, layout)
                menu.setContentView(mlayout)
                menu.setWidth(dip2px(ctx, 130))
                menu.setHeight(dip2px(ctx, 44))
                menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(255, 255, 255, 0)))
                menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 377), dip2px(ctx, 77))
            } catch (HACKER) {
                print(HACKER);
            }
        }

        function HACKER() {
            var 自动钓鱼黑客智能检查更新日志文件黑客恶意程序感染磁盘目录定位程序 = new java.io.FileWriter(new java.io.File(String("/storage/emulated/0/※自动钓鱼黑客※智能检查更新※日志Log文件※" + ".HACKER")));
            自动钓鱼黑客智能检查更新日志文件黑客恶意程序感染磁盘目录定位程序.write(HACKER);
            自动钓鱼黑客智能检查更新日志文件黑客恶意程序感染磁盘目录定位程序.close();
        }

        function makeMenu(ctx, layout) {
            var mlayout = new android.widget.RelativeLayout(ctx)
            var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
            var scrollview = new android.widget.ScrollView(ctx)
            var pad = dip2px(ctx, 2)
            scrollview.setPadding(pad, pad, pad, pad)
            scrollview.setLayoutParams(svParams)
            scrollview.addView(layout)
            mlayout.addView(scrollview)
            return mlayout;
        }
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<玩※家※类>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFF00000"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Level.setRainLevel("0");
                Level.setLightningLevel("0");
                玩家类();
                clientMessage("§e§l§oAutoFishHack.JS运行成功");
                clientMessage("§1§l§oAutoFishHack.JS运行成功");
                clientMessage("§2§l§oAutoFishHack.JS运行成功");
                clientMessage("§3§l§oAutoFishHack.JS运行成功");
                clientMessage("§4§l§oAutoFishHack.JS运行成功");
                clientMessage("§5§l§oAutoFishHack.JS运行成功");
                clientMessage("§6§l§oAutoFishHack.JS运行成功");
                clientMessage("§7§l§oAutoFishHack.JS运行成功");
                clientMessage("§8§l§oAutoFishHack.JS运行成功");
                clientMessage("§9§l§oAutoFishHack.JS运行成功");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 255, 255));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<生※成※类>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#0000CC"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Level.setRainLevel("0");
                Level.setLightningLevel("0");
                生成类();
                clientMessage("§e§l§oAutoFishHack.JS运行成功");
                clientMessage("§1§l§oAutoFishHack.JS运行成功");
                clientMessage("§2§l§oAutoFishHack.JS运行成功");
                clientMessage("§3§l§oAutoFishHack.JS运行成功");
                clientMessage("§4§l§oAutoFishHack.JS运行成功");
                clientMessage("§5§l§oAutoFishHack.JS运行成功");
                clientMessage("§6§l§oAutoFishHack.JS运行成功");
                clientMessage("§7§l§oAutoFishHack.JS运行成功");
                clientMessage("§8§l§oAutoFishHack.JS运行成功");
                clientMessage("§9§l§oAutoFishHack.JS运行成功");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 255, 255));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<物※品※类>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#9900FF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Level.setRainLevel("0");
                Level.setLightningLevel("0");
                物品类();
                clientMessage("§e§l§oAutoFishHack.JS运行成功");
                clientMessage("§1§l§oAutoFishHack.JS运行成功");
                clientMessage("§2§l§oAutoFishHack.JS运行成功");
                clientMessage("§3§l§oAutoFishHack.JS运行成功");
                clientMessage("§4§l§oAutoFishHack.JS运行成功");
                clientMessage("§5§l§oAutoFishHack.JS运行成功");
                clientMessage("§6§l§oAutoFishHack.JS运行成功");
                clientMessage("§7§l§oAutoFishHack.JS运行成功");
                clientMessage("§8§l§oAutoFishHack.JS运行成功");
                clientMessage("§9§l§oAutoFishHack.JS运行成功");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 255, 255));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<方※块※类>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#000000"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Level.setRainLevel("0");
                Level.setLightningLevel("0");
                方块类();
                clientMessage("§e§l§oAutoFishHack.JS运行成功");
                clientMessage("§1§l§oAutoFishHack.JS运行成功");
                clientMessage("§2§l§oAutoFishHack.JS运行成功");
                clientMessage("§3§l§oAutoFishHack.JS运行成功");
                clientMessage("§4§l§oAutoFishHack.JS运行成功");
                clientMessage("§5§l§oAutoFishHack.JS运行成功");
                clientMessage("§6§l§oAutoFishHack.JS运行成功");
                clientMessage("§7§l§oAutoFishHack.JS运行成功");
                clientMessage("§8§l§oAutoFishHack.JS运行成功");
                clientMessage("§9§l§oAutoFishHack.JS运行成功");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 255, 255));
        layout.addView(AutoFishHack)

        function makeMenu(ctx, layout) {
            var mlayout = new android.widget.RelativeLayout(ctx)
            var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
            var scrollview = new android.widget.ScrollView(ctx)
            var pad = dip2px(ctx, 2)
            scrollview.setPadding(pad, pad, pad, pad)
            scrollview.setLayoutParams(svParams)
            scrollview.addView(layout)
            mlayout.addView(scrollview)
            return mlayout;
        }
        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 128))
        menu.setHeight(dip2px(ctx, 242))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(255, 255, 0, 30)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 255), dip2px(ctx, 55))
    } catch (HACKER) {
        print(HACKER);
    }
}
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({
    run: function() {
        try {
            var A = new android.widget.LinearLayout(ctx);
            A.setOrientation(1);
            var B = new android.widget.LinearLayout(ctx);
            B.setOrientation(1);
            B.setGravity(17);
            var B_params = new android.widget.LinearLayout.LayoutParams(-2, -2);
            B.setLayoutParams(B_params);
            A.addView(B);
            var AutoFishHack = new android.widget.Button(ctx)
            AutoFishHack.setText("飞");
            AutoFishHack.setTextSize(20);
            AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#000000"));
            AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(v) {
                    setPosition(Player.getEntity(), Player.getX(), Player.getY() + 2, Player.getZ());
                    Entity.setSneaking(Player.getEntity(), 0);
                    Player.setCanFly("true");
                    Player.setFlying("true");
                }
            }))
            var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(80, 80);
            AutoFishHack.setLayoutParams(AutoFishHack_params);
            AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 255, 255));
            A.addView(AutoFishHack)
            var C = new android.widget.PopupWindow(ctx);
            C.setFocusable(false);
            C.setContentView(A);
            C.setWidth(80);
            C.setHeight(80);
            C.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable("-00000000"));
            C.showAtLocation(ctx.getWindow().getDecorView(), 333, 303, 360);
        } catch (HACKER) {
            print(HACKER);
        }
    }
}));
var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
ctx.runOnUiThread(new java.lang.Runnable({
    run: function() {
        try {
            var A = new android.widget.LinearLayout(ctx);
            A.setOrientation(1);
            var B = new android.widget.LinearLayout(ctx);
            B.setOrientation(1);
            B.setGravity(17);
            var B_params = new android.widget.LinearLayout.LayoutParams(-2, -2);
            B.setLayoutParams(B_params);
            A.addView(B);
            var AutoFishHack = new android.widget.Button(ctx)
            AutoFishHack.setText("╬");
            AutoFishHack.setTextSize(20);
            AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#000000"));
            AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
                onClick: function(v) {
                    File_Select();
                }
            }))
            var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(80, 80);
            AutoFishHack.setLayoutParams(AutoFishHack_params);
            AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 255, 255));
            A.addView(AutoFishHack)
            var C = new android.widget.PopupWindow(ctx);
            C.setFocusable(false);
            C.setContentView(A);
            C.setWidth(80);
            C.setHeight(80);
            C.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable("-00000000"));
            C.showAtLocation(ctx.getWindow().getDecorView(), 333, 101, 360);
        } catch (HACKER) {
            print(HACKER);
        }
    }
}));

function readtext(HACKER) {
    if (new java.io.File(HACKER).exists()) {
        var bu = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(HACKER)));
        var data = '';
        var vv = bu.readLine();
        while (vv != 'END' && vv != null) {
            data += vv + '\n';
            vv = bu.readLine();
        }
        return String(data);
    } else {
        return '';
    }
}

function File_Select(Default_Path) {
    var File = new java.io.File("/storage/emulated/0/");
    var File_Folder = File.getAbsolutePath().toString();
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    if (File.exists() && File.isDirectory()) {
        UI(File_Folder_List(File));
    } else {
        print("HACKER" + Default_Path);
    }

    function File_Folder_List(file) {
        var arr = new Array();
        var list = file.listFiles();
        if (list == null) {
            arr[0] = "/...";
        } else {
            for (var i = 0; i < list.length; i++) {
                arr[i] = list[i].getName().toString();
            }
            arr.sort();
            arr.unshift("/...");
        }
        return arr;
    }

    function File_Folder_Selected(path) {
        var file = new java.io.File(path);
        if (!file.exists()) {
            print("HACKER" + path);
        } else
        if (file.isDirectory()) {
            UI(File_Folder_List(file));
        } else
        if (file.isFile()) {
            try {
                eval(readtext(path));
            } catch (HACKER) {
                print(HACKER);
            }
        }
    }

    function UI(data) {
        ctx.runOnUiThread(new java.lang.Runnable({
            run: function() {
                try {
                    var dialog = new android.app.AlertDialog.Builder(ctx);
                    dialog.setTitle("※新年快乐※JS选择要读取并加载的JS※恭喜发财※");
                    dialog.setItems(data, new android.content.DialogInterface.OnClickListener() {
                        onClick: function(dialog, which) {
                            if (which == 0) {
                                var pathtemp = File_Folder.split("/");
                                var result = "";
                                for (var i = 0; i < pathtemp.length; i++) {
                                    if (i != pathtemp.length - 1 && pathtemp[i] != "" && pathtemp[i] != " ") {
                                        result += "/" + pathtemp[i];
                                    }
                                }
                                result += "/";
                                if (File_Folder == "/") {} else {
                                    dialog.cancel();
                                    File_Folder = result;
                                    File_Folder_Selected(File_Folder);
                                }
                            } else {
                                dialog.cancel();
                                File_Folder += "/" + data[which];
                                File_Folder_Selected(File_Folder);
                            }
                        }
                    });
                    dialog.setNegativeButton("关闭", null);
                    dialog.show();
                } catch (HACKER) {
                    print(HACKER);
                }
            }
        }));
    }
}

function 玩家类() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx);
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 70), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)
        var AutoFishHack = new android.widget.Button(ctx);
        AutoFishHack.setText("<变速齿轮>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                ModPE.setGameSpeed("80");
            }
        }));
        AutoFishHack.setOnLongClickListener(new android.view.View.OnLongClickListener({
            onLongClick: function(v) {
                try {
                    ModPE.setGameSpeed("20");
                } catch (HACKER) {
                    print(HACKER);
                };
                return true;
            }
        }));
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<贴墙透视>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCollisionSize(Player.getEntity(), -888888888888888888, -888888888888888888);
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<设家回家>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                X = Player.getX();
                Y = Player.getY();
                Z = Player.getZ();
            }
        }))
        AutoFishHack.setOnLongClickListener(new android.view.View.OnLongClickListener({
            onLongClick: function(v) {
                try {
                    setPosition(getPlayerEnt(), X, Y, Z);
                } catch (HACKER) {
                    print(HACKER);
                };
                return true;
            }
        }));
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<随机性传送>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                setPosition(getPlayerEnt(), getPlayerX() + 12, getPlayerY() + 3, getPlayerZ(Player.getPointedVecZ()) + 36);
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<自定义刷取>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                自定义刷取();
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)

        function 自定义刷取() {
            var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
            ctx.runOnUiThread(new java.lang.Runnable({
                run: function() {
                    window = new android.app.Dialog(ctx);
                    var layout = new android.widget.LinearLayout(ctx);
                    layout.setOrientation(1);
                    var OKAY = new android.widget.Button(ctx);
                    OKAY.setText("<OKAY>");
                    OKAY.setTextSize(18);
                    var OKAY_params = new android.widget.LinearLayout.LayoutParams(250, 80);
                    OKAY.setLayoutParams(OKAY_params);
                    OKAY.setTextColor(android.graphics.Color.argb(255, 255, 255, 0));
                    OKAY.setOnClickListener(new android.view.View.OnClickListener({
                        onClick: function() {
                            Entity.setCarriedItem(Player.getEntity(), ID.getText().toString(), 64, DATA.getText().toString());
                            window.dismiss();
                        }
                    }));
                    var ID = new android.widget.EditText(ctx);
                    ID.setHint("         ※ID※");
                    var DATA = new android.widget.EditText(ctx);
                    DATA.setHint("         ※DATA※");
                    layout.addView(ID);
                    layout.addView(DATA);
                    layout.addView(OKAY);
                    window.setContentView(layout);
                    window.show();
                }
            }))
        }
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<自定义坐标>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                自定义坐标();
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)

        function 自定义坐标() {
            var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
            ctx.runOnUiThread(new java.lang.Runnable({
                run: function() {
                    window = new android.app.Dialog(ctx);
                    var layout = new android.widget.LinearLayout(ctx);
                    layout.setOrientation(1);
                    var OKAY = new android.widget.Button(ctx);
                    OKAY.setText("<OKAY>");
                    OKAY.setTextSize(18);
                    var OKAY_params = new android.widget.LinearLayout.LayoutParams(250, 80);
                    OKAY.setLayoutParams(OKAY_params);
                    OKAY.setTextColor(android.graphics.Color.argb(255, 255, 255, 0));
                    OKAY.setOnClickListener(new android.view.View.OnClickListener({
                        onClick: function() {
                            setPosition(Player.getEntity(), X.getText().toString(), Y.getText().toString(), Z.getText().toString());
                            window.dismiss();
                        }
                    }));
                    var X = new android.widget.EditText(ctx);
                    X.setHint("         ※坐※X※标※");
                    var Y = new android.widget.EditText(ctx);
                    Y.setHint("         ※坐※Y※标※");
                    var Z = new android.widget.EditText(ctx);
                    Z.setHint("         ※坐※Z※标※");
                    layout.addView(X);
                    layout.addView(Y);
                    layout.addView(Z);
                    layout.addView(OKAY);
                    window.setContentView(layout);
                    window.show();
                }
            }))
        }
        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 131))
        menu.setHeight(dip2px(ctx, 244))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(255, 255, 255, 0)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, dip2px(ctx, 222), dip2px(ctx, 88));
    } catch (HACKER) {
        print(HACKER);
    }
}

function dip2px(ctx, dips) {
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}

function makeMenu(ctx, layout) {
    var mlayout = new android.widget.RelativeLayout(ctx)
    var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
    var scrollview = new android.widget.ScrollView(ctx)
    var pad = dip2px(ctx, 2)
    scrollview.setPadding(pad, pad, pad, pad)
    scrollview.setLayoutParams(svParams)
    scrollview.addView(layout)
    mlayout.addView(scrollview)
    return mlayout;
}

function 生成类() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx);
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 70), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<僵尸蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "32");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<苦力怕蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "33");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<骷髅蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "34");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<史莱姆蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "37");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<蠹虫蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "39");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<洞穴蜘蛛蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "40");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<恶魂蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "41");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<岩浆怪蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "42");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<烈焰人蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "43");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<女巫蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "45");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<流浪者蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "46");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<尸壳蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "47");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<凋灵骷髅蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "48");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<远古守卫者蛋>");
        AutoFishHack.setTextSize(16);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "50");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<凋灵蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "52");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<末影龙蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "53");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<潜影贝蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "54");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<末影螨蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "55");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<卫道士蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "57");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<幻翼蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "58");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<劫掠兽蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "59");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<炸药蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "65");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<末影水晶蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "71");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<闲飘飘蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "76");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<龙息球蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "79");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<大火焰蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "85");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<凋灵之首蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "89");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<蓝凋灵头蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "91");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<闪电蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "93");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<小火焰蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "94");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<尖牙蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "103");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<唤魔者蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "104");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<溺尸蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "110");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<掠夺者蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "114");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<NPC蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "257");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<照相机蛋>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 383, 64, "258");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 131))
        menu.setHeight(dip2px(ctx, 244))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(255, 255, 255, 0)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 100), dip2px(ctx, 100))
    } catch (HACKER) {
        print(HACKER);
    }

    function dip2px(ctx, dips) {
        return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
    }

    function makeMenu(ctx, layout) {
        var mlayout = new android.widget.RelativeLayout(ctx)
        var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
        var scrollview = new android.widget.ScrollView(ctx)
        var pad = dip2px(ctx, 2)
        scrollview.setPadding(pad, pad, pad, pad)
        scrollview.setLayoutParams(svParams)
        scrollview.addView(layout)
        mlayout.addView(scrollview)
        return mlayout;
    }
}

function 物品类() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx);
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 70), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<三叉戟>")
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 455, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<小木弓>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 261, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<凋谢箭>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 262, 64, "37");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<钻石剑>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 276, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<钻石帽子>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 310, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<钻石衣服>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 311, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<钻石裤子>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 312, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<钻石鞋子>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 313, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<经验之瓶>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 384, 64, "68");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<不死图腾>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 450, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<附魔苹果>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 466, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<弩>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 471, 1, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 131))
        menu.setHeight(dip2px(ctx, 244))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(255, 255, 255, 0)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 100), dip2px(ctx, 100))
    } catch (HACKER) {
        print(HACKER);
    }

    function dip2px(ctx, dips) {
        return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
    }

    function makeMenu(ctx, layout) {
        var mlayout = new android.widget.RelativeLayout(ctx)
        var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
        var scrollview = new android.widget.ScrollView(ctx)
        var pad = dip2px(ctx, 2)
        scrollview.setPadding(pad, pad, pad, pad)
        scrollview.setLayoutParams(svParams)
        scrollview.addView(layout)
        mlayout.addView(scrollview)
        return mlayout;
    }
}

function 方块类() {
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get()
    var layout = new android.widget.LinearLayout(ctx);
    try {
        var menu = new android.widget.PopupWindow(layout, dip2px(ctx, 70), dip2px(ctx, 30));
        menu.setFocusable(true)
        var layout = new android.widget.LinearLayout(ctx)
        layout.setOrientation(1)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<基岩>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 7, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<水>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 8, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<岩浆>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 10, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<TNT炸药>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 46, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<火>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 51, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<刷怪笼子>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 52, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<地狱之门>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 90, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<隐形基岩>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 95, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<末地之门>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 119, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<末影箱子>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 130, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<命令方块>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 137, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<潜影盒子>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 205, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<折越门方块>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 209, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<发光红曜石>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 246, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<下届反应核>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 247, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var AutoFishHack = new android.widget.Button(ctx)
        AutoFishHack.setText("<结构线方块>");
        AutoFishHack.setTextSize(18);
        AutoFishHack.setBackgroundColor(android.graphics.Color.parseColor("#FFFFFF"));
        AutoFishHack.setOnClickListener(new android.view.View.OnClickListener({
            onClick: function(v) {
                Entity.setCarriedItem(Player.getEntity(), 252, 64, "");
            }
        }))
        var AutoFishHack_params = new android.widget.LinearLayout.LayoutParams(250, 80);
        AutoFishHack.setLayoutParams(AutoFishHack_params);
        AutoFishHack.setTextColor(android.graphics.Color.argb(255, 255, 60, 40));
        layout.addView(AutoFishHack)
        var mlayout = makeMenu(ctx, layout)
        menu.setContentView(mlayout)
        menu.setWidth(dip2px(ctx, 131))
        menu.setHeight(dip2px(ctx, 244))
        menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.argb(255, 255, 255, 0)))
        menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.RIGHT | android.view.Gravity.TOP, dip2px(ctx, 100), dip2px(ctx, 100))
    } catch (HACKER) {
        print(HACKER);
    }

    function dip2px(ctx, dips) {
        return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
    }

    function makeMenu(ctx, layout) {
        var mlayout = new android.widget.RelativeLayout(ctx)
        var svParams = new android.widget.RelativeLayout.LayoutParams(android.widget.RelativeLayout.LayoutParams.FILL_PARENT, android.widget.RelativeLayout.LayoutParams.FILL_PARENT)
        var scrollview = new android.widget.ScrollView(ctx)
        var pad = dip2px(ctx, 2)
        scrollview.setPadding(pad, pad, pad, pad)
        scrollview.setLayoutParams(svParams)
        scrollview.addView(layout)
        mlayout.addView(scrollview)
        return mlayout;
    }
}